{% extends '@MondofuteHebergement/hebergementunifie/fiche.html.twig' %}


{% block title %}
    {{ 'modification de l\'hébergement ' | capitalize }}
{% endblock %}

{#  GESTION DU TITRE A AFFICHER DANS LA PAGE #}
{% block titre %}
    Modification de l'hébergement
{% endblock %}

{% block body %}
    {% set ongletHebergementStocks = 1 %}
    {{ parent() }}
{% endblock %}
{#  BLOCK DES ACTIONS AUTRES QUE LA MISE A JOUR#}
{% block actions %}
    <div style="text-align: right">
        <ul class="list-unstyled">
            <li><a href="{{ path('hebergement_hebergement_index') }}">{{ 'retour.liste' | trans | capitalize }}</a></li>
            <li>{{ form(delete_form) }}</li>
        </ul>

    </div>

{% endblock %}

{#  GESTION DU BLOCK CONTENANT LE JAVASCRIPT#}
{% block javascripts %}
    <script type="text/javascript">
        "use strict";
        var langue = {
            'enregistrer': {
                'stock': "{{ 'enregistrer.stock' | trans }}",
                'stock_ok': "{{ 'enregistrement_stock.ok'|trans }}",
                'stock_pas_ok': "{{ 'enregistrement_stock.pas_ok'|trans }}",
                'stock_aucun': "{{ 'enregistrement_stock.aucun'|trans }}",
            }
        };
        var stocksModifies = Array();
        var urls = {
            'logementChargerLocatif': "{{ path('logement_charger_locatif') }}",
            'periodeHebergementStocks': "{{ path('periode_type_periode_liste') }}",
            'hebergementChargerHebergementFournisseur': "{{ path('hebergement_charger_hebergement_fournisseur', {'idHebergementUnifie': '_idHebergement_'}) }}",
            'catalogueEnregistrerStockLocatif': "{{ path('mondofute_catalogue_enregistrer_stock_locatif') }}",
            'periodeTypePeriodeOnglets': "{{ path('periode_type_periode_onglets') }}",
        };
        var datatableLangue = {
            language: {
                processing: "{{ 'processing'|trans }}",
                search: "{{ 'rechercher'|trans }} :",
                loadingRecords: "{{ 'chargementEnCours'|trans }}...",
                "lengthMenu": "{{ 'afficher'|trans }} _MENU_ {{ 'resultats'|trans }}",
                zeroRecords: "{{ 'zeroResultats'|trans }}",
                emptyTable: "{{ 'tableVide'|trans }}",
                "paginate": {
                    "first": "{{ 'page.premiere'|trans }}",
                    "last": "{{ 'page.derniere'|trans }}",
                    "next": "{{ 'page.suivante'|trans }}",
                    "previous": "{{ 'page.precedente'|trans }}"
                },
                aria: {
                    sortAscending: ": activer pour trier la colonne par ordre croissant",
                    sortDescending: ": activer pour trier la colonne par ordre décroissant"
                }
            }
        };
    </script>
    {{ parent() }}
    {% javascripts
    'js/datatables.min.js'
    'js/form.min.js'
    'js/hebergement-edit.min.js'
    'js/datatables.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script type="text/javascript">
        $(document).ready(function () {
//            transforme le button submit en bouton de type button
            chargerOngletStocksHebergement({{ entity.id }});

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('[name="btnEnregistrerStocks"]').on('click',enregistrerStocks);
            chargerOngletStocks({{ entity.id }});
        });
        function chargerOngletStocks(idhebergement){

<<<<<<< HEAD
||||||| parent of f6aa7f7... gestion des progressBar
                            var idTypePeriode = null;
                            for (var i = 0; i < typePeriodes.length; i++) {
                                if (typePeriodes[i].periodes.length > 0) {
                                    idTypePeriode = typePeriodes[i].id;
                                    genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriodes[i], function (data, idTypePeriode, typePeriode) {
                                        var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');
                                        $div.html('');
                                        for(var j = 0; j < data.length; j++){
//                                            console.log(data[j][1]);


                                            var dataSet = [
                                                [ "Tiger Nixon", "System Architect", "Edinburgh", "5421", "2011/04/25", "$320,800" ],
                                                [ "Garrett Winters", "Accountant", "Tokyo", "8422", "2011/07/25", "$170,750" ],
                                                [ "Ashton Cox", "Junior Technical Author", "San Francisco", "1562", "2009/01/12", "$86,000" ],
                                                [ "Cedric Kelly", "Senior Javascript Developer", "Edinburgh", "6224", "2012/03/29", "$433,060" ],
                                                [ "Airi Satou", "Accountant", "Tokyo", "5407", "2008/11/28", "$162,700" ],
                                                [ "Brielle Williamson", "Integration Specialist", "New York", "4804", "2012/12/02", "$372,000" ],
                                                [ "Herrod Chandler", "Sales Assistant", "San Francisco", "9608", "2012/08/06", "$137,500" ],
                                                [ "Rhona Davidson", "Integration Specialist", "Tokyo", "6200", "2010/10/14", "$327,900" ],
                                                [ "Colleen Hurst", "Javascript Developer", "San Francisco", "2360", "2009/09/15", "$205,500" ],
                                                [ "Sonya Frost", "Software Engineer", "Edinburgh", "1667", "2008/12/13", "$103,600" ],
                                                [ "Jena Gaines", "Office Manager", "London", "3814", "2008/12/19", "$90,560" ],
                                                [ "Quinn Flynn", "Support Lead", "Edinburgh", "9497", "2013/03/03", "$342,000" ],
                                                [ "Charde Marshall", "Regional Director", "San Francisco", "6741", "2008/10/16", "$470,600" ],
                                                [ "Haley Kennedy", "Senior Marketing Designer", "London", "3597", "2012/12/18", "$313,500" ],
                                                [ "Tatyana Fitzpatrick", "Regional Director", "London", "1965", "2010/03/17", "$385,750" ],
                                                [ "Michael Silva", "Marketing Designer", "London", "1581", "2012/11/27", "$198,500" ],
                                                [ "Paul Byrd", "Chief Financial Officer (CFO)", "New York", "3059", "2010/06/09", "$725,000" ],
                                                [ "Gloria Little", "Systems Administrator", "New York", "1721", "2009/04/10", "$237,500" ],
                                                [ "Bradley Greer", "Software Engineer", "London", "2558", "2012/10/13", "$132,000" ],
                                                [ "Dai Rios", "Personnel Lead", "Edinburgh", "2290", "2012/09/26", "$217,500" ],
                                                [ "Jenette Caldwell", "Development Lead", "New York", "1937", "2011/09/03", "$345,000" ],
                                                [ "Yuri Berry", "Chief Marketing Officer (CMO)", "New York", "6154", "2009/06/25", "$675,000" ],
                                                [ "Caesar Vance", "Pre-Sales Support", "New York", "8330", "2011/12/12", "$106,450" ],
                                                [ "Doris Wilder", "Sales Assistant", "Sidney", "3023", "2010/09/20", "$85,600" ],
                                                [ "Angelica Ramos", "Chief Executive Officer (CEO)", "London", "5797", "2009/10/09", "$1,200,000" ],
                                                [ "Gavin Joyce", "Developer", "Edinburgh", "8822", "2010/12/22", "$92,575" ],
                                                [ "Jennifer Chang", "Regional Director", "Singapore", "9239", "2010/11/14", "$357,650" ],
                                                [ "Brenden Wagner", "Software Engineer", "San Francisco", "1314", "2011/06/07", "$206,850" ],
                                                [ "Fiona Green", "Chief Operating Officer (COO)", "San Francisco", "2947", "2010/03/11", "$850,000" ],
                                                [ "Shou Itou", "Regional Marketing", "Tokyo", "8899", "2011/08/14", "$163,000" ],
                                                [ "Michelle House", "Integration Specialist", "Sidney", "2769", "2011/06/02", "$95,400" ],
                                                [ "Suki Burks", "Developer", "London", "6832", "2009/10/22", "$114,500" ],
                                                [ "Prescott Bartlett", "Technical Author", "London", "3606", "2011/05/07", "$145,000" ],
                                                [ "Gavin Cortez", "Team Leader", "San Francisco", "2860", "2008/10/26", "$235,500" ],
                                                [ "Martena Mccray", "Post-Sales support", "Edinburgh", "8240", "2011/03/09", "$324,050" ],
                                                [ "Unity Butler", "Marketing Designer", "San Francisco", "5384", "2009/12/09", "$85,675" ]
                                            ];
//                                            console.log(dataSet);
//                                            gestion des colonnes des tableaux
                                            var colonnes = [{ 'mDataProp' : "logement",title:'logement',"sWidth": '200px'}];
                                            var objet = null;
                                            var attribut = '';
                                            var debut=null;
                                            var fin=null;
                                            var moisDebut=null;
                                            var moisFin=null;
                                            var jourDebut=null;
                                            var jourFin=null;
                                            for(var k = 0; k < typePeriode.periodes.length; k++){
                                                debut = new Date(typePeriode.periodes[k].debut.date);
                                                fin = new Date(typePeriode.periodes[k].fin.date);
//                                                console.log(debut.getDate().toString().length);
                                                moisDebut = (debut.getMonth()+1).toString().length>1?(debut.getMonth()+1):'0'+(debut.getMonth()+1);
                                                jourDebut = debut.getDate().toString().length>1?debut.getDate():'0'+debut.getDate();
                                                moisFin = (fin.getMonth()+1).toString().length>1?(fin.getMonth()+1):'0'+(fin.getMonth()+1);
                                                jourFin = fin.getDate().toString().length>1?fin.getDate():'0'+fin.getDate();
                                                attribut = 'periode'+typePeriode.periodes[k].id;
//                                                objet = new Object();
//                                                objet[attribut] = 'du '+jourDebut+'-'+moisDebut+'-'+debut.getFullYear()+' au '+jourFin+'-'+moisFin+'-'+fin.getFullYear();

                                                colonnes.push({mDataProp:attribut,title:'du '+jourDebut+'-'+moisDebut+'-'+debut.getFullYear()+' au '+jourFin+'-'+moisFin+'-'+fin.getFullYear()});
                                            }
                                            console.log(colonnes);
                                            console.log(data[j][1]);

//                                            colonnes.push({ title : "test"});
                                            var $tableau = $('<table class="table-hebergement-stocks display" width="100%" id="type-periode-'+typePeriode.id+'-indice-'+j+'"></table>');
//                                        console.log(data[j][1]);
                                            $div.append($tableau);
                                            var table = $tableau.DataTable({
                                                data: data[j][1],
                                                "aoColumns":colonnes,
                                                paging: true,
                                                info: false,
                                                scrollX: true,
                                                scrollY: false,
                                                scrollCollapse: true,
                                                fixedColumns: true,
                                                scroller: {
                                                    rowHeight: 30
                                                },
                                                language: {
                                                    processing: "{{ 'processing'|trans }}",
                                                    search: "{{ 'rechercher'|trans }} :",
                                                    loadingRecords: "{{ 'chargementEnCours'|trans }}...",
                                                    zeroRecords: "{{ 'zeroResultats'|trans }}",
                                                    emptyTable: "{{ 'tableVide'|trans }}",
                                                    aria: {
                                                        sortAscending: ": activer pour trier la colonne par ordre croissant",
                                                        sortDescending: ": activer pour trier la colonne par ordre décroissant"
                                                    }
                                                }
                                            });
                                            table.table({visible: true, api: true}).columns.adjust();
{#//                                            console.log(data[j]);#}
                                        }


//                                    if ($div == null) {
//                                        console.log($div);
//                                    }
//                                    $div.html(html);
//                                    genererDataTables($div);
                                    });
//                                    console.log(typePeriodes[i]);
                                }
//                                idTypePeriode = typePeriodes[i].id;
//                                genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, function (html, idTypePeriode) {
//                                    var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');
//                                    if ($div == null) {
//                                        console.log($div);
//                                    }
//                                    $div.html(html);
//                                    genererDataTables($div);
//                                });
                            }
                            $conteneur.append('<button type="button" name="btnEnregistrerStocks" class="btn btn-default">{{ 'enregistrer.stock' | trans }}</button> <div name="btnEnregistrerStocksReponse"></div>');
                        });
                    }, 'json');
        }
        function genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriode, callback) {
            var url = "{{ path('hebergement_generer_tableaux_stocks_periode', {'idTypePeriode': '_idTypePeriode_', 'idHebergementUnifie': '_idHebergement_'}) }}";
            url = url.replace(/_idHebergement_/g, parseInt(idHebergement));
            url = url.replace(/_idTypePeriode_/g, parseInt(idTypePeriode));
            $.get(
                    url,
                    function (data) {
                        if (callback != null) {
                            callback(data, idTypePeriode, typePeriode, idHebergement);
                        }
                    },
                    'json'
            )

        }
        function chargerProgressBar($progressBar, valeur) {
            $progressBar.attr('aria-valuenow', valeur);
            $progressBar.css('width', valeur + '%');
            $progressBar.html(valeur + '%');
        }
        /**
         * permet de construire les onglets TypePeriodes ainsi que les div pour leurs contenus
         * @param $conteneur
         * @param $progressBar
         */
        function construireOngletsTypePeriodes($conteneur, $progressBar, callback) {
            $.post("{{ path('periode_type_periode_onglets') }}",
                    {'idConteneur': $conteneur.attr('id')},
                    function (html) {
                        if ($progressBar != null) {
                            chargerProgressBar($progressBar, 100);
                        }
                        $conteneur.html(html);
                        if (callback != null) {
                            callback(html);
                        }
                    }
            ), 'html';
=======
                            var idTypePeriode = null;
                            for (var i = 0; i < typePeriodes.length; i++) {
                                if (typePeriodes[i].periodes.length > 0) {
                                    idTypePeriode = typePeriodes[i].id;
                                    $progressBar = $('#'+$conteneur.attr('id')+'_progress-bar_type_periode_'+typePeriodes[i].id);
                                    genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriodes[i], function (data, idTypePeriode, typePeriode) {
                                        var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');
//                                        $div.html('');
                                        var pasProgressBar = 100/(data.length+typePeriode.periodes.length);
                                        var curseurProgressBar = 0;
                                        for(var j = 0; j < data.length; j++){
                                            curseurProgressBar += pasProgressBar;
                                            chargerProgressBar($progressBar,curseurProgressBar);
//                                            gestion des colonnes des tableaux
                                            var colonnes = [{ 'mDataProp' : "logement",title:'logement',"sWidth": '200px'}];
                                            var attribut = '';
                                            var debut=null;
                                            var fin=null;
                                            var moisDebut=null;
                                            var moisFin=null;
                                            var jourDebut=null;
                                            var jourFin=null;
                                            for(var k = 0; k < typePeriode.periodes.length; k++){
                                                curseurProgressBar += pasProgressBar;
                                                chargerProgressBar($progressBar,curseurProgressBar);
                                                debut = new Date(typePeriode.periodes[k].debut.date);
                                                fin = new Date(typePeriode.periodes[k].fin.date);
//                                                console.log(debut.getDate().toString().length);
                                                moisDebut = (debut.getMonth()+1).toString().length>1?(debut.getMonth()+1):'0'+(debut.getMonth()+1);
                                                jourDebut = debut.getDate().toString().length>1?debut.getDate():'0'+debut.getDate();
                                                moisFin = (fin.getMonth()+1).toString().length>1?(fin.getMonth()+1):'0'+(fin.getMonth()+1);
                                                jourFin = fin.getDate().toString().length>1?fin.getDate():'0'+fin.getDate();
                                                attribut = 'periode'+typePeriode.periodes[k].id;

                                                colonnes.push({mDataProp:attribut,title:'du '+jourDebut+'-'+moisDebut+'-'+debut.getFullYear()+' au '+jourFin+'-'+moisFin+'-'+fin.getFullYear()});
                                            }

//                                            colonnes.push({ title : "test"});
                                            var $tableau = $('<table class="table-hebergement-stocks display" width="100%" id="type-periode-'+typePeriode.id+'-indice-'+j+'"></table>');
//                                        console.log(data[j][1]);
                                            $div.append($tableau);
                                            var table = $tableau.DataTable({
                                                data: data[j][1],
                                                "aoColumns":colonnes,
                                                paging: true,
                                                info: false,
                                                scrollX: true,
                                                scrollY: false,
                                                scrollCollapse: true,
                                                fixedColumns: true,
                                                scroller: {
                                                    rowHeight: 30
                                                },
                                                language: {
                                                    processing: "{{ 'processing'|trans }}",
                                                    search: "{{ 'rechercher'|trans }} :",
                                                    loadingRecords: "{{ 'chargementEnCours'|trans }}...",
                                                    zeroRecords: "{{ 'zeroResultats'|trans }}",
                                                    emptyTable: "{{ 'tableVide'|trans }}",
                                                    aria: {
                                                        sortAscending: ": activer pour trier la colonne par ordre croissant",
                                                        sortDescending: ": activer pour trier la colonne par ordre décroissant"
                                                    }
                                                }
                                            });
                                            table.table({visible: true, api: true}).columns.adjust();
                                            $('#'+$conteneur.attr('id')+'_data_type_periode_'+typePeriode.id+' .progress').each(function() {
                                                $(this).remove();
                                            });
                                        }
                                    });
                                }
                            }
                            $conteneur.append('<button type="button" name="btnEnregistrerStocks" class="btn btn-default">{{ 'enregistrer.stock' | trans }}</button> <div name="btnEnregistrerStocksReponse"></div>');
                        });
                    }, 'json');
        }
        function genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriode, callback) {
            var url = "{{ path('hebergement_generer_tableaux_stocks_periode', {'idTypePeriode': '_idTypePeriode_', 'idHebergementUnifie': '_idHebergement_'}) }}";
            url = url.replace(/_idHebergement_/g, parseInt(idHebergement));
            url = url.replace(/_idTypePeriode_/g, parseInt(idTypePeriode));
            $.get(
                    url,
                    function (data) {
                        if (callback != null) {
                            callback(data, idTypePeriode, typePeriode, idHebergement);
                        }
                    },
                    'json'
            )

        }
        function chargerProgressBar($progressBar, valeur) {
            $progressBar.attr('aria-valuenow', parseInt(valeur));
            $progressBar.css('width', parseInt(valeur) + '%');
            $progressBar.html(parseInt(valeur) + '%');
        }
        /**
         * permet de construire les onglets TypePeriodes ainsi que les div pour leurs contenus
         * @param $conteneur
         * @param $progressBar
         */
        function construireOngletsTypePeriodes($conteneur, $progressBar, callback) {
            $.post("{{ path('periode_type_periode_onglets') }}",
                    {'idConteneur': $conteneur.attr('id')},
                    function (html) {
                        if ($progressBar != null) {
                            chargerProgressBar($progressBar, 100);
                        }
                        $conteneur.html(html);
                        if (callback != null) {
                            callback(html);
                        }
                    }
            ), 'html';
>>>>>>> f6aa7f7... gestion des progressBar
        }
        function enregistrerStocks() {
            var $element = $(this).parent();
            $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert"><div class="progress"><div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">Enregistrement en cours</div></div></div>');
            var $stocks = $('.table-hebergement-stocks [name^="stocks"]');
//            lance la requête ajax de recherche des fournisseurs de type hébergement
            $.ajax({
                url: "{{ path('mondofute_catalogue_enregistrer_stock_locatif') }}",
                type: 'POST',
                data: $stocks,
                success: function (json){
                    if(json.valid){
                        $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert alert-success">{{ 'enregistrement_stock.ok'|trans }}</div>');
                    }else{
                        $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert alert-danger">{{ 'enregistrement_stock.pas_ok'|trans }}</div>');
                    }
                }
            });
        }
    </script>
{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    {% stylesheets 'css/datatables.css'
    'css/hebergement-edit.min.css' %}
    <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% endblock %}
