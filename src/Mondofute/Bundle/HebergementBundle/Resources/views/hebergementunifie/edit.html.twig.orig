{% extends '@MondofuteHebergement/hebergementunifie/fiche.html.twig' %}


{% block title %}
    {{ 'modification de l\'hébergement ' | capitalize }}
{% endblock %}

{#  GESTION DU TITRE A AFFICHER DANS LA PAGE #}
{% block titre %}
    Modification de l'hébergement
{% endblock %}

{% block body %}
    {% set ongletHebergementStocks = 1 %}
    {{ parent() }}
{% endblock %}
{#  BLOCK DES ACTIONS AUTRES QUE LA MISE A JOUR#}
{% block actions %}
    <div style="text-align: right">
        <ul class="list-unstyled">
            <li><a href="{{ path('hebergement_hebergement_index') }}">{{ 'retour.liste' | trans | capitalize }}</a></li>
            <li>{{ form(delete_form) }}</li>
        </ul>

    </div>

{% endblock %}

{#  GESTION DU BLOCK CONTENANT LE JAVASCRIPT#}
{% block javascripts %}
    <script type="text/javascript">
        "use strict";
        var langue = {
            'enregistrer': {
                'stock': "{{ 'enregistrer.stock' | trans }}",
                'stock_ok': "{{ 'enregistrement_stock.ok'|trans }}",
                'stock_pas_ok': "{{ 'enregistrement_stock.pas_ok'|trans }}",
                'stock_aucun': "{{ 'enregistrement_stock.aucun'|trans }}",
            }
        };
        var stocksModifies = Array();
        var urls = {
            'logementChargerLocatif': "{{ path('logement_charger_locatif') }}",
            'periodeHebergementStocks': "{{ path('periode_type_periode_liste') }}",
            'hebergementChargerHebergementFournisseur': "{{ path('hebergement_charger_hebergement_fournisseur', {'idHebergementUnifie': '_idHebergement_'}) }}",
            'catalogueEnregistrerStockLocatif': "{{ path('mondofute_catalogue_enregistrer_stock_locatif') }}",
            'periodeTypePeriodeOnglets': "{{ path('periode_type_periode_onglets') }}",
        };
        var datatableLangue = {
            language: {
                processing: "{{ 'processing'|trans }}",
                search: "{{ 'rechercher'|trans }} :",
                loadingRecords: "{{ 'chargementEnCours'|trans }}...",
                "lengthMenu": "{{ 'afficher'|trans }} _MENU_ {{ 'resultats'|trans }}",
                zeroRecords: "{{ 'zeroResultats'|trans }}",
                emptyTable: "{{ 'tableVide'|trans }}",
                "paginate": {
                    "first": "{{ 'page.premiere'|trans }}",
                    "last": "{{ 'page.derniere'|trans }}",
                    "next": "{{ 'page.suivante'|trans }}",
                    "previous": "{{ 'page.precedente'|trans }}"
                },
                aria: {
                    sortAscending: ": activer pour trier la colonne par ordre croissant",
                    sortDescending: ": activer pour trier la colonne par ordre décroissant"
                }
            }
        };
    </script>
    {{ parent() }}
    {% javascripts
    'js/datatables.min.js'
    'js/form.min.js'
    'js/hebergement-edit.min.js'
    'js/datatables.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script type="text/javascript">
        $(document).ready(function () {
//            transforme le button submit en bouton de type button
            chargerOngletStocksHebergement({{ entity.id }});

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('[name="btnEnregistrerStocks"]').on('click',enregistrerStocks);
            chargerOngletStocks({{ entity.id }});
        });
<<<<<<< HEAD
        function chargerOngletStocks(idhebergement){
||||||| parent of 8766392... memoire
        //        copie le premier stock du logement dans le tableau sur les autres stocks
        function dupliquerStocksLogement(logementId) {
            var valeur = $('input[data-logement=' + logementId + ']:first').val();
            $('input[data-logement=' + logementId + ']').each(function () {
                $(this).val(valeur);
            });
        }
        function chargerTableauStocks(table, parametres) {
//            console.log('logements');
//            console.log(parametres);
            for (var i = 0; i < parametres.logements.length; i++) {
                ajouterLogementLocatifTableau(table, parametres.logements[i], parametres);
            }
            {#var url = "{{ path('hebergement_charger_hebergement_fournisseur', {'idHebergementUnifie': '_idHebergement_','idLogement'}) }}";#}
            {#url = url.replace(/_idHebergement_/g, parseInt(idHebergement));#}
            {#$.post(#}
            {#"{{ path('') }}"#}
            {#);#}
        }
        function ajouterLogementLocatifTableau(table, logement, parametres) {
            var url = "{{ path('logement_charger_locatif', {'id': '_idLogement_'}) }}";
            url = url.replace(/_idLogement_/g, parseInt(logement.id));
            $.get(
                    url,
                    function (data) {
                        var donnees = Array();
                        donnees['logement'] = data.nom+' <span data-logement_id="' + data.logementUnifie.id + '" class="duplique-stocks glyphicon glyphicon-play"></span>';
                        var attribut = null;
                        for (var i = 0; i < data.periodes.length; i++) {

                            if (data.periodes[i].type.id == parametres.typePeriode.id) {
                                attribut = 'periode' + data.periodes[i].id;
                                donnees[attribut] = genererInputStock(data.logementUnifie.id, data.periodes[i].id, data.periodes[i].stock);
                            }
                        }
//                    console.log(data);
                       table.row.add(donnees).draw();

                    }
            );
        }
        function chargerOngletStocksHebergement(idHebergement) {
//            récupération de la progress-bar à gérer lors de l'ajout des onglets TypePeriode
            var $progressBar = $('#progress-bar_onglets_type_periode_hebergement_' + idHebergement);
            var $conteneur = $('#data_hebergement_stocks');
            $.post("{{ path('periode_type_periode_liste') }}",
                    function (typePeriodes) {
                        chargerProgressBar($progressBar, 50);
                        construireOngletsTypePeriodes($conteneur, $progressBar, function () {

                            var idTypePeriode = null;

                            chargerFournisseurHebergement(idHebergement, typePeriodes, function (data, idHebergement, typePeriodes) {
                                for (var i = 0; i < typePeriodes.length; i++) {
                                    if (typePeriodes[i].periodes.length > 0) {
                                        idTypePeriode = typePeriodes[i].id;
                                        $progressBar = $('#' + $conteneur.attr('id') + '_progress-bar_type_periode_' + typePeriodes[i].id);

//                                            alert(data.length);
                                        var colonnes = [{'mDataProp': "logement", title: 'logement'}];
                                        var debut = null;
                                        var fin = null;
                                        var moisDebut = null;
                                        var jourDebut = null;
                                        var moisFin = null;
                                        var jourFin = null;
                                        var attribut = null;
                                        var stock = null;
                                        for (var k = 0; k < typePeriodes[i].periodes.length; k++) {
                                            debut = new Date(typePeriodes[i].periodes[k].debut.date);
                                            fin = new Date(typePeriodes[i].periodes[k].fin.date);
                                            moisDebut = (debut.getMonth() + 1).toString().length > 1 ? (debut.getMonth() + 1) : '0' + (debut.getMonth() + 1);
                                            jourDebut = debut.getDate().toString().length > 1 ? debut.getDate() : '0' + debut.getDate();
                                            moisFin = (fin.getMonth() + 1).toString().length > 1 ? (fin.getMonth() + 1) : '0' + (fin.getMonth() + 1);
                                            jourFin = fin.getDate().toString().length > 1 ? fin.getDate() : '0' + fin.getDate();
                                            attribut = 'periode' + typePeriodes[i].periodes[k].id;
//                                            for (var l = 0; l < data[j][1].length; l++) {
//                                                stock = data[j][1][l][attribut];
//                                                data[j][1][l][attribut] = genererInputStock(data[j][1][l]['logementUnifieId'], typePeriode.periodes[k].id, stock);
//                                            }
                                            colonnes.push({
                                                mDataProp: attribut,
                                                title: 'du ' + jourDebut + '-' + moisDebut + '-' + debut.getFullYear() + ' au ' + jourFin + '-' + moisFin + '-' + fin.getFullYear()
                                            });
                                        }

                                        var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');

                                        for (var j = 0; j < data.length; j++) {
                                            var $panelFournisseur = $('<div class="panel panel-default"> <div class="panel-heading"> <div class="panel-title"> <h2> <a data-toggle="collapse" href="#stocks_type_periode_' + typePeriodes[i].id + '_fournisseur_' + data[j].fournisseur.id + '">' + data[j].fournisseur.enseigne + '</a> </h2> </div> </div> <div id="stocks_type_periode_' + typePeriodes[i].id + '_fournisseur_' + data[j].fournisseur.id + '" class="panel-collapse collapse in"></div> </div>');
                                            $div.append($panelFournisseur);
                                            var $tableau = $('<table class="table-hebergement-stocks table table-striped nowrap display" width="100%" id="type-periode-' + idTypePeriode + '-indice-' + data[j].fournisseur.id + '"></table>');
                                            $panelFournisseur.find('#stocks_type_periode_' + idTypePeriode + '_fournisseur_' + data[j].fournisseur.id).append($tableau);
                                            var donnees = {
                                                hebergement: {id: idHebergement},
                                                typePeriode: {id: idTypePeriode},
                                                fournisseur: {
                                                    id: data[j].fournisseur.id
                                                },
                                                logements: data[j].logements
                                            };
                                            var table = genererDataTables($tableau, colonnes, donnees, function (table, parametres) {
                                                chargerTableauStocks(table, parametres);
                                            });
                                        }
//                                    chargerProgressBar($progressBar, 25);
                                        {#genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriodes[i], function (data, idTypePeriode, typePeriode) {#}
                                        {#var stock = null;#}
                                        {#chargerProgressBar($progressBar, 50);#}
                                        {#var pasProgressBar = 50 / (data.length);#}
                                        {#var curseurProgressBar = 50;#}
                                        {#var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');#}
                                        {#for (var j = 0; j < data.length; j++) {#}

                                        {#curseurProgressBar += pasProgressBar;#}
                                        {#chargerProgressBar($progressBar, curseurProgressBar);#}
                                        {#//                                            gestion des colonnes des tableaux#}
                                        {#var colonnes = [{'mDataProp': "logement", title: 'logement'}];#}
                                        {#var attribut = '';#}
                                        {#var debut = null;#}
                                        {#var fin = null;#}
                                        {#var moisDebut = null;#}
                                        {#var moisFin = null;#}
                                        {#var jourDebut = null;#}
                                        {#var jourFin = null;#}
                                        {#for (var k = 0; k < data[j][1].length; k++) {#}
                                        {#data[j][1][k]['logement'] = data[j][1][k]['logement'] + ' <span data-logement_id="' + data[j][1][k]['logementUnifieId'] + '" class="duplique-stocks glyphicon glyphicon-play"></span>';#}
                                        {#}#}
                                        {#for (var k = 0; k < typePeriode.periodes.length; k++) {#}
                                        {#debut = new Date(typePeriode.periodes[k].debut.date);#}
                                        {#fin = new Date(typePeriode.periodes[k].fin.date);#}
                                        {#moisDebut = (debut.getMonth() + 1).toString().length > 1 ? (debut.getMonth() + 1) : '0' + (debut.getMonth() + 1);#}
                                        {#jourDebut = debut.getDate().toString().length > 1 ? debut.getDate() : '0' + debut.getDate();#}
                                        {#moisFin = (fin.getMonth() + 1).toString().length > 1 ? (fin.getMonth() + 1) : '0' + (fin.getMonth() + 1);#}
                                        {#jourFin = fin.getDate().toString().length > 1 ? fin.getDate() : '0' + fin.getDate();#}
                                        {#attribut = 'periode' + typePeriode.periodes[k].id;#}
                                        {#for (var l = 0; l < data[j][1].length; l++) {#}
                                        {#stock = data[j][1][l][attribut];#}
                                        {#data[j][1][l][attribut] = genererInputStock(data[j][1][l]['logementUnifieId'], typePeriode.periodes[k].id, stock);#}
                                        {#}#}
                                        {#colonnes.push({#}
                                        {#mDataProp: attribut,#}
                                        {#title: 'du ' + jourDebut + '-' + moisDebut + '-' + debut.getFullYear() + ' au ' + jourFin + '-' + moisFin + '-' + fin.getFullYear()#}
                                        {#});#}
                                        {#}#}

                                        {#//                                            colonnes.push({ title : "test"});#}
                                        {#var $panelFournisseur = $('<div class="panel panel-default"> <div class="panel-heading"> <div class="panel-title"> <h2> <a data-toggle="collapse" href="#stocks_type_periode_' + typePeriode.id + '_fournisseur_' + data[j][3] + '">' + data[j][0] + '</a> </h2> </div> </div> <div id="stocks_type_periode_' + typePeriode.id + '_fournisseur_' + data[j][3] + '" class="panel-collapse collapse in"></div> </div>');#}
=======
        //        copie le premier stock du logement dans le tableau sur les autres stocks
        function dupliquerStocksLogement(logementId) {
            var valeur = $('input[data-logement=' + logementId + ']:first').val();
            $('input[data-logement=' + logementId + ']').each(function () {
                $(this).val(valeur);
            });
        }
        function chargerTableauStocks(table, parametres) {
//            console.log('logements');
//            console.log(parametres);
            for (var i = 0; i < parametres.logements.length; i++) {

                ajouterLogementLocatifTableau(table, parametres.logements[i], parametres);
            }
            {#var url = "{{ path('hebergement_charger_hebergement_fournisseur', {'idHebergementUnifie': '_idHebergement_','idLogement'}) }}";#}
            {#url = url.replace(/_idHebergement_/g, parseInt(idHebergement));#}
            {#$.post(#}
            {#"{{ path('') }}"#}
            {#);#}
        }
        function ajouterLogementLocatifTableau(table, logement, parametres) {
            var url = "{{ path('logement_charger_locatif', {'id': '_idLogement_'}) }}";
            url = url.replace(/_idLogement_/g, parseInt(logement.id));
            $.get(
                    url,
                    function (data) {
                        var donnees = Array();
                        donnees['logement'] = data.nom+' <span data-logement_id="' + data.logementUnifie.id + '" class="duplique-stocks glyphicon glyphicon-play"></span>';
                        var attribut = null;
                        for (var i = 0; i < data.periodes.length; i++) {

                            if (data.periodes[i].type.id == parametres.typePeriode.id) {
                                attribut = 'periode' + data.periodes[i].id;
                                donnees[attribut] = genererInputStock(data.logementUnifie.id, data.periodes[i].id, data.periodes[i].stock);
                            }
                        }
//                    console.log(data);
                       table.row.add(donnees).draw();

                    }
            );
        }
        function chargerOngletStocksHebergement(idHebergement) {
//            récupération de la progress-bar à gérer lors de l'ajout des onglets TypePeriode
            var $progressBar = $('#progress-bar_onglets_type_periode_hebergement_' + idHebergement);
            var $conteneur = $('#data_hebergement_stocks');
            $.post("{{ path('periode_type_periode_liste') }}",
                    function (typePeriodes) {
                        chargerProgressBar($progressBar, 50);
                        construireOngletsTypePeriodes($conteneur, $progressBar, function () {

                            var idTypePeriode = null;

                            chargerFournisseurHebergement(idHebergement, typePeriodes, function (data, idHebergement, typePeriodes) {
                                for (var i = 0; i < typePeriodes.length; i++) {
                                    if (typePeriodes[i].periodes.length > 0) {
                                        idTypePeriode = typePeriodes[i].id;
                                        $progressBar = $('#' + $conteneur.attr('id') + '_progress-bar_type_periode_' + typePeriodes[i].id);

//                                            alert(data.length);
                                        var colonnes = [{'mDataProp': "logement", title: 'logement'}];
                                        var debut = null;
                                        var fin = null;
                                        var moisDebut = null;
                                        var jourDebut = null;
                                        var moisFin = null;
                                        var jourFin = null;
                                        var attribut = null;
                                        var stock = null;
                                        for (var k = 0; k < typePeriodes[i].periodes.length; k++) {
                                            debut = new Date(typePeriodes[i].periodes[k].debut.date);
                                            fin = new Date(typePeriodes[i].periodes[k].fin.date);
                                            moisDebut = (debut.getMonth() + 1).toString().length > 1 ? (debut.getMonth() + 1) : '0' + (debut.getMonth() + 1);
                                            jourDebut = debut.getDate().toString().length > 1 ? debut.getDate() : '0' + debut.getDate();
                                            moisFin = (fin.getMonth() + 1).toString().length > 1 ? (fin.getMonth() + 1) : '0' + (fin.getMonth() + 1);
                                            jourFin = fin.getDate().toString().length > 1 ? fin.getDate() : '0' + fin.getDate();
                                            attribut = 'periode' + typePeriodes[i].periodes[k].id;
//                                            for (var l = 0; l < data[j][1].length; l++) {
//                                                stock = data[j][1][l][attribut];
//                                                data[j][1][l][attribut] = genererInputStock(data[j][1][l]['logementUnifieId'], typePeriode.periodes[k].id, stock);
//                                            }
                                            colonnes.push({
                                                mDataProp: attribut,
                                                title: 'du ' + jourDebut + '-' + moisDebut + '-' + debut.getFullYear() + ' au ' + jourFin + '-' + moisFin + '-' + fin.getFullYear()
                                            });
                                        }

                                        var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');

                                        for (var j = 0; j < data.length; j++) {
                                            var $panelFournisseur = $('<div class="panel panel-default"> <div class="panel-heading"> <div class="panel-title"> <h2> <a data-toggle="collapse" href="#stocks_type_periode_' + typePeriodes[i].id + '_fournisseur_' + data[j].fournisseur.id + '">' + data[j].fournisseur.enseigne + '</a> </h2> </div> </div> <div id="stocks_type_periode_' + typePeriodes[i].id + '_fournisseur_' + data[j].fournisseur.id + '" class="panel-collapse collapse in"></div> </div>');
                                            $div.append($panelFournisseur);
                                            var $tableau = $('<table class="table-hebergement-stocks table table-striped nowrap display" width="100%" id="type-periode-' + idTypePeriode + '-indice-' + data[j].fournisseur.id + '"></table>');
                                            $panelFournisseur.find('#stocks_type_periode_' + idTypePeriode + '_fournisseur_' + data[j].fournisseur.id).append($tableau);
                                            var donnees = {
                                                hebergement: {id: idHebergement},
                                                typePeriode: {id: idTypePeriode},
                                                fournisseur: {
                                                    id: data[j].fournisseur.id
                                                },
                                                logements: data[j].logements
                                            };
                                            var table = genererDataTables($tableau, colonnes, donnees, function (table, parametres) {
                                                chargerTableauStocks(table, parametres);
                                            });
                                        }
//                                    chargerProgressBar($progressBar, 25);
                                        {#genererTableauxStocksHebergementPeriode(idTypePeriode, idHebergement, typePeriodes[i], function (data, idTypePeriode, typePeriode) {#}
                                        {#var stock = null;#}
                                        {#chargerProgressBar($progressBar, 50);#}
                                        {#var pasProgressBar = 50 / (data.length);#}
                                        {#var curseurProgressBar = 50;#}
                                        {#var $div = $conteneur.find('#' + $conteneur.attr('id') + '_data_type_periode_' + idTypePeriode + ' .panel-group');#}
                                        {#for (var j = 0; j < data.length; j++) {#}

                                        {#curseurProgressBar += pasProgressBar;#}
                                        {#chargerProgressBar($progressBar, curseurProgressBar);#}
                                        {#//                                            gestion des colonnes des tableaux#}
                                        {#var colonnes = [{'mDataProp': "logement", title: 'logement'}];#}
                                        {#var attribut = '';#}
                                        {#var debut = null;#}
                                        {#var fin = null;#}
                                        {#var moisDebut = null;#}
                                        {#var moisFin = null;#}
                                        {#var jourDebut = null;#}
                                        {#var jourFin = null;#}
                                        {#for (var k = 0; k < data[j][1].length; k++) {#}
                                        {#data[j][1][k]['logement'] = data[j][1][k]['logement'] + ' <span data-logement_id="' + data[j][1][k]['logementUnifieId'] + '" class="duplique-stocks glyphicon glyphicon-play"></span>';#}
                                        {#}#}
                                        {#for (var k = 0; k < typePeriode.periodes.length; k++) {#}
                                        {#debut = new Date(typePeriode.periodes[k].debut.date);#}
                                        {#fin = new Date(typePeriode.periodes[k].fin.date);#}
                                        {#moisDebut = (debut.getMonth() + 1).toString().length > 1 ? (debut.getMonth() + 1) : '0' + (debut.getMonth() + 1);#}
                                        {#jourDebut = debut.getDate().toString().length > 1 ? debut.getDate() : '0' + debut.getDate();#}
                                        {#moisFin = (fin.getMonth() + 1).toString().length > 1 ? (fin.getMonth() + 1) : '0' + (fin.getMonth() + 1);#}
                                        {#jourFin = fin.getDate().toString().length > 1 ? fin.getDate() : '0' + fin.getDate();#}
                                        {#attribut = 'periode' + typePeriode.periodes[k].id;#}
                                        {#for (var l = 0; l < data[j][1].length; l++) {#}
                                        {#stock = data[j][1][l][attribut];#}
                                        {#data[j][1][l][attribut] = genererInputStock(data[j][1][l]['logementUnifieId'], typePeriode.periodes[k].id, stock);#}
                                        {#}#}
                                        {#colonnes.push({#}
                                        {#mDataProp: attribut,#}
                                        {#title: 'du ' + jourDebut + '-' + moisDebut + '-' + debut.getFullYear() + ' au ' + jourFin + '-' + moisFin + '-' + fin.getFullYear()#}
                                        {#});#}
                                        {#}#}

                                        {#//                                            colonnes.push({ title : "test"});#}
                                        {#var $panelFournisseur = $('<div class="panel panel-default"> <div class="panel-heading"> <div class="panel-title"> <h2> <a data-toggle="collapse" href="#stocks_type_periode_' + typePeriode.id + '_fournisseur_' + data[j][3] + '">' + data[j][0] + '</a> </h2> </div> </div> <div id="stocks_type_periode_' + typePeriode.id + '_fournisseur_' + data[j][3] + '" class="panel-collapse collapse in"></div> </div>');#}
>>>>>>> 8766392... memoire

        }
        function enregistrerStocks() {
            var $element = $(this).parent();
            $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert"><div class="progress"><div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">Enregistrement en cours</div></div></div>');
            var $stocks = $('.table-hebergement-stocks [name^="stocks"]');
//            lance la requête ajax de recherche des fournisseurs de type hébergement
            $.ajax({
                url: "{{ path('mondofute_catalogue_enregistrer_stock_locatif') }}",
                type: 'POST',
                data: $stocks,
                success: function (json){
                    if(json.valid){
                        $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert alert-success">{{ 'enregistrement_stock.ok'|trans }}</div>');
                    }else{
                        $element.find('[name="btnEnregistrerStocksReponse"]').html('<div class="alert alert-danger">{{ 'enregistrement_stock.pas_ok'|trans }}</div>');
                    }
                }
            });
        }
    </script>
{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    {% stylesheets 'css/datatables.css'
    'css/hebergement-edit.min.css' %}
    <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% endblock %}
