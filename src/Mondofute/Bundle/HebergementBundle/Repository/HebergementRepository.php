<?php

namespace Mondofute\Bundle\HebergementBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * HebergementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HebergementRepository extends EntityRepository
{
    public function findStationsWithHebergement($locale, $stationId = null , $siteId = null)
    {
//        , station.id stationId, traductions.libelle, hebergementUnifie.id hebergementUnifieId, fournisseurHebergements.id fournisseurHebergementsId, fournisseur
        $qb = $this->getEntityManager()->createQueryBuilder();
//        $qb->select('station.id stationId, fournisseur.id, fournisseur.enseigne, traductions.libelle libelle, site.id siteId ')
        $qb->select('stationUnifie.id stationId, fournisseur.id, fournisseur.enseigne, traductions.libelle libelle , site.id siteId, station.id idStation')
            ->from('MondofuteHebergementBundle:Hebergement', 'hebergement')
            ->join('hebergement.station' , 'station')
            ->join('station.stationUnifie' , 'stationUnifie')
            ->join('station.traductions' , 'traductions')
            ->join('hebergement.hebergementUnifie' , 'hebergementUnifie')
            ->join('hebergementUnifie.fournisseurs' , 'fournisseurHebergements')
            ->join('fournisseurHebergements.fournisseur' , 'fournisseur')
            ->join('station.site' , 'site')

//            ->groupBy('station.id')
//            ->addGroupBy('fournisseur')
            ->join('traductions.langue' , 'langue')
            ->where('langue.code = :locale')
            ->setParameter('locale' , $locale )
            ->orderBy('site.id', 'ASC')
            ->addOrderBy('stationUnifie.id', 'ASC')
            ->addOrderBy('traductions.libelle', 'ASC')
            ->addOrderBy('fournisseur.enseigne', 'ASC')
//            ->andWhere('site.id = 1')
        ;

        if (!empty($siteId))
        {
            $qb
                ->andWhere('site.id = :siteId')
                ->setParameter('siteId' , $siteId)
            ;
        }
        if (!empty($stationId))
        {
            $qb
                ->andWhere('hebergement.station = :stationId')
                ->setParameter('stationId' , $stationId)
            ;
        }

        $result = $qb->getQuery()->getResult();
//        dump($result);die;
        return $result;
    }
}
