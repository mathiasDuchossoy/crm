<?php

namespace Mondofute\Bundle\HebergementBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * HebergementUnifieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HebergementUnifieRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return mixed
     */
    public function countTotal()
    {
        return $this->createQueryBuilder('entity')
            ->select('COUNT(entity)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * Get the paginated list of published secteurs
     *
     * @param int $page
     * @param int $maxperpage
     * @param $locale
     * @param array $sortbyArray
     * @param int $site
     * @return Paginator
     */
    public function getList($page = 1, $maxperpage, $locale, $sortbyArray = array(), $site = 1)
    {
        $q = $this->createQueryBuilder('unifie')
            ->select('unifie')
            ->join('unifie.hebergements', 'entities')
            ->join('entities.traductions', 'traductions')
            ->join('traductions.langue', 'langue')
            ->where('entities.site = :site')
            ->setParameter('site', $site)
            ->andWhere('langue.code = :code')
            ->setParameter('code', $locale)
            ->setFirstResult(($page - 1) * $maxperpage)
            ->setMaxResults($maxperpage);

        foreach ($sortbyArray as $key => $item) {
            $q
                ->orderBy($key, $item);
        }

        return new Paginator($q);
    }

    public function getFournisseurHebergements($fournisseurId, $locale)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q
            ->from('MondofuteHebergementBundle:HebergementUnifie' , 'hebergementUnifie')
            ->select('hebergementUnifie.id  hebergementUnifieId, traductions.nom')
            ->join('hebergementUnifie.fournisseurs' , 'fournisseurHebergements')
            ->join('fournisseurHebergements.fournisseur' , 'fournisseur')
            ->join('hebergementUnifie.hebergements' , 'hebergements')
            ->join('hebergements.traductions' , 'traductions')
            ->join('traductions.langue' , 'langue')
            ->where('fournisseur = :fournisseurId')
            ->setParameter('fournisseurId' , $fournisseurId)
            ->andWhere('langue.code = :locale')
            ->setParameter('locale' , $locale)
        ;

        $result = $q->getQuery()->getResult();

        return $result;
    }
}
