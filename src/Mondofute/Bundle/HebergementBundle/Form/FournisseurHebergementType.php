<?php

namespace Mondofute\Bundle\HebergementBundle\Form;

use Mondofute\Bundle\FournisseurBundle\Entity\Fournisseur;
use Mondofute\Bundle\RemiseClefBundle\Entity\RemiseClef;
use Nucleus\MoyenComBundle\Entity\Adresse;
use Nucleus\MoyenComBundle\Entity\Fixe;
use Nucleus\MoyenComBundle\Entity\Mobile;
use Nucleus\MoyenComBundle\Form\AdresseType;
use Nucleus\MoyenComBundle\Form\FixeType;
use Nucleus\MoyenComBundle\Form\MobileType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\ChoiceList\View\ChoiceView;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;

class FournisseurHebergementType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
//            ->add('hebergement', EntityType::class, array('class' => HebergementUnifie::class, 'choice_label', 'id'))
//            ->add('fournisseur', EntityType::class, array('class' => Fournisseur::class, 'choice_label' => 'enseigne'))
//            ->add('fournisseur', HiddenType::class, array('mapped' => false))
//            ->add('hebergement', EntityType::class, array('class' => HebergementUnifie::class, 'choice_label' => 'id'))
            ->add('fournisseur', EntityType::class, array(
                'class' => Fournisseur::class,
                'choice_label' => 'enseigne',
                'attr' => array('style' => 'display:none'),
                'label_attr' => array('style' => 'display: none')
            ))
//            ->add('fournisseur', HiddenType::class)
            ->add('telFixe', FixeType::class, array('data_class' => Fixe::class))
            ->add('telMobile', MobileType::class, array('data_class' => Mobile::class))
            ->add('adresse', AdresseType::class, array('data_class' => Adresse::class))
//            ->add('traductions',CollectionType::class,array(
//                'type' => new FournisseurHebergementTraductionType()
//            ))
            ->add('traductions', CollectionType::class, array(
                'entry_type' => FournisseurHebergementTraductionType::class,
                'allow_add' => true,
                'prototype_name' => '__tradname__',
                'label_attr' => array('style' => 'display:none')
            ))
            ->add('remiseClef', EntityType::class, array(
                'class' => RemiseClef::class,
                'placeholder' => 'Veuillez choisir un profil de remise de clef',
                'property' => 'libelle',
//                'query_builder' => function(RemiseClefRepository $r){
//                    $r->createQueryBuilder('r')
//                        ->innerJoin('FournisseurHebergement','fh')
//                        ->where('r.fournisseur = fh.fournisseur')
//                        ->orderBy('r.libelle','ASC');
//                }
            ));
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\HebergementBundle\Entity\FournisseurHebergement'
        ));
    }

    public function finishView(FormView $view, FormInterface $form, array $options)
    {

        parent::finishView($view, $form, $options); // TODO: Change the autogenerated stub
//
//        $em = new LangueRepository();
//        $langues = $em->findAll();
        $option = new ChoiceView(array(), 'add', 'nouveau');
        $view->children['remiseClef']->vars['choices'][] = $option;

    }
}
