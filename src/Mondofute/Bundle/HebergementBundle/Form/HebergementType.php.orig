<<<<<<< 0bc217a33f79d75131f4a92f31d1664fc7d0f15a
<?php

namespace Mondofute\Bundle\HebergementBundle\Form;

use Mondofute\Bundle\HebergementBundle\Entity\TypeHebergement;
use Mondofute\Bundle\HebergementBundle\Repository\TypeHebergementRepository;
use Mondofute\Bundle\MotClefBundle\Entity\MotClef;
use Mondofute\Bundle\StationBundle\Entity\Station;
use Mondofute\Bundle\StationBundle\Repository\StationRepository;
use Mondofute\Bundle\UniteBundle\Form\ClassementHebergementType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;

class HebergementType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $locale = $options["locale"];
        $builder
            ->add('traductions', CollectionType::class, array(
                'entry_type' => HebergementTraductionType::class,
            ))
            ->add('station', EntityType::class, array(
                'class' => Station::class,
                'placeholder' => '--- Veuillez choisir une station ---',
                'choice_label' => 'traductions[0].libelle',
                'query_builder' => function (StationRepository $st) use ($locale) {
                    return $st->getTraductionsByLocale($locale);
                },
            ))
            ->add('typeHebergement', EntityType::class, array(
                'class' => TypeHebergement::class,
                'placeholder' => '--- Veuillez choisir un type d\'hÃ©bergement ---',
                'choice_label' => 'traductions[0].libelle',
                'query_builder' => function (TypeHebergementRepository $st) use ($locale) {
                    return $st->getTraductionsByLocale($locale);
                },
            ))
            ->add('moyenComs'
                , 'Infinite\FormBundle\Form\Type\PolyCollectionType',
                array(
                    'types' => array(
                        'nucleus_moyencombundle_adresse'
                    ),
                ))
            ->add('emplacements', CollectionType::class,
                array(
                    'entry_type' => EmplacementHebergementType::class,
                    'allow_add' => true,
                    'allow_delete' => true,
                    'by_reference' => false,
                ))
            ->add('classement', ClassementHebergementType::class, array('locale' => $locale))
            ->add('site', HiddenType::class, array('mapped' => false))
            ->add('visuels', 'Infinite\FormBundle\Form\Type\PolyCollectionType', array(
                'types' => array(
                    'Mondofute\Bundle\HebergementBundle\Form\HebergementVideoType',
                    'Mondofute\Bundle\HebergementBundle\Form\HebergementPhotoType',
                ),
                'allow_add' => true,
                'allow_delete' => true,
                'by_reference' => false,
                'required' => false,
<<<<<<< HEAD
||||||| parent of 04f7e6b... coup de coeur sans renseigner de date
<<<<<<< 26fcb9d9932670dd9107d98a2c846d6157bd73d5
=======
<<<<<<< f60eeb09f8ca3f5508ad736d1f64aa516d49851a
<<<<<<< 26fcb9d9932670dd9107d98a2c846d6157bd73d5
||||||| merged common ancestors
<<<<<<< HEAD
=======
>>>>>>> coup de coeur sans renseigner de date
>>>>>>> 04f7e6b... coup de coeur sans renseigner de date
            ))
<<<<<<< HEAD
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
<<<<<<< HEAD
<<<<<<< HEAD
            ->add('coupDeCoeur', HebergementCoupDeCoeurType::class, [
                'required' => false
            ])
<<<<<<< HEAD
||||||| parent of 8134a76... hebergement-mot-clef finis
||||||| parent of 4d039ac... coup de coeur sans renseigner de date
        ;
||||||| merged common ancestors
            ));
=======
||||||| parent of 508071e... coup de coeur sans renseigner de date
<<<<<<< HEAD
>>>>>>> 4d039ac... coup de coeur sans renseigner de date
=======
<<<<<<< HEAD
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
>>>>>>> 8134a76... hebergement-mot-clef finis
||||||| parent of 4d039ac... coup de coeur sans renseigner de date
            ))
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
||||||| parent of f13d8ae... coup de coeur sans renseigner de date
=======
||||||| parent of 04f7e6b... coup de coeur sans renseigner de date
        ;
||||||| merged common ancestors
            ));
=======
<<<<<<< f60eeb09f8ca3f5508ad736d1f64aa516d49851a
        ;
||||||| merged common ancestors
            ));
||||||| merged common ancestors
            ->add('coupDeCoeur', HebergementCoupDeCoeurType::class, [
                'required' => false
            ])
        ;
||||||| merged common ancestors
            ));
=======
<<<<<<< HEAD
            ->add('coupDeCoeur', HebergementCoupDeCoeurType::class, [
                'required' => false
            ])
||||||| parent of 508071e... coup de coeur sans renseigner de date
>>>>>>> coup de coeur sans renseigner de date
>>>>>>> 04f7e6b... coup de coeur sans renseigner de date
>>>>>>> f13d8ae... coup de coeur sans renseigner de date
=======
            ->add('coupDeCoeur', HebergementCoupDeCoeurType::class, array(
                'required' => false
            ))
<<<<<<< HEAD
>>>>>>> 508071e... coup de coeur sans renseigner de date
<<<<<<< HEAD
>>>>>>> 4d039ac... coup de coeur sans renseigner de date
||||||| parent of f13d8ae... coup de coeur sans renseigner de date
=======
||||||| parent of 04f7e6b... coup de coeur sans renseigner de date
=======
<<<<<<< f60eeb09f8ca3f5508ad736d1f64aa516d49851a
>>>>>>> 04f7e6b... coup de coeur sans renseigner de date
>>>>>>> f13d8ae... coup de coeur sans renseigner de date
        ;
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\HebergementBundle\Entity\Hebergement',
            'locale' => 'fr_FR'
        ));
    }

    public function finishView(FormView $view, FormInterface $form, array $options)
    {
        parent::finishView($view, $form, $options); // TODO: Change the autogenerated stub
        /** @var FormView $viewChild */
        foreach ($view->children['classement']->children as $child) {
            $child->vars['attr'] = array('data-unique_block_prefix' => $child->vars['unique_block_prefix']);
        }
    }
}
||||||| merged common ancestors
=======
<?php

namespace Mondofute\Bundle\HebergementBundle\Form;

use Mondofute\Bundle\HebergementBundle\Entity\TypeHebergement;
use Mondofute\Bundle\HebergementBundle\Repository\TypeHebergementRepository;
use Mondofute\Bundle\MotClefBundle\Entity\MotClef;
use Mondofute\Bundle\StationBundle\Entity\Station;
use Mondofute\Bundle\StationBundle\Repository\StationRepository;
use Mondofute\Bundle\UniteBundle\Form\ClassementHebergementType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;

class HebergementType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $locale = $options["locale"];
        $builder
            ->add('traductions', CollectionType::class, array(
                'entry_type' => HebergementTraductionType::class,
            ))
            ->add('station', EntityType::class, array(
                'class' => Station::class,
                'placeholder' => '--- Veuillez choisir une station ---',
                'choice_label' => 'traductions[0].libelle',
                'query_builder' => function (StationRepository $st) use ($locale) {
                    return $st->getTraductionsByLocale($locale);
                },
            ))
            ->add('typeHebergement', EntityType::class, array(
                'class' => TypeHebergement::class,
                'placeholder' => '--- Veuillez choisir un type d\'hÃ©bergement ---',
                'choice_label' => 'traductions[0].libelle',
                'query_builder' => function (TypeHebergementRepository $st) use ($locale) {
                    return $st->getTraductionsByLocale($locale);
                },
            ))
            ->add('moyenComs'
                , 'Infinite\FormBundle\Form\Type\PolyCollectionType',
                array(
                    'types' => array(
                        'nucleus_moyencombundle_adresse'
                    ),
                ))
            ->add('emplacements', CollectionType::class,
                array(
                    'entry_type' => EmplacementHebergementType::class,
                    'allow_add' => true,
                    'allow_delete' => true,
                    'by_reference' => false,
                ))
            ->add('classement', ClassementHebergementType::class, array('locale' => $locale))
            ->add('site', HiddenType::class, array('mapped' => false))
            ->add('visuels', 'Infinite\FormBundle\Form\Type\PolyCollectionType', array(
                'types' => array(
                    'Mondofute\Bundle\HebergementBundle\Form\HebergementVideoType',
                    'Mondofute\Bundle\HebergementBundle\Form\HebergementPhotoType',
                ),
                'allow_add' => true,
                'allow_delete' => true,
                'by_reference' => false,
                'required' => false,
<<<<<<< HEAD
            ))
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
            ->add('coupDeCoeur', HebergementCoupDeCoeurType::class, [
                'required' => false
            ])
        ;
||||||| parent of 28a452b... changement structure
            ));
=======
<<<<<<< HEAD
            ))
||||||| parent of 04f7e6b... coup de coeur sans renseigner de date
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
>>>>>>> 8134a76... hebergement-mot-clef finis
=======
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
>>>>>>> 8134a76... hebergement-mot-clef finis
||||||| merged common ancestors
            ->add('motClefs', EntityType::class, array(
                'class' => MotClef::class,
                "choice_label" => "libelle",
                'multiple'  => true,
//                'expanded'  => true,
                'attr' => [
//                    'class' => 'js-mot-clef-multiple'
                ],
                'required' => false,
                )
            )
=======
>>>>>>> 508071e... coup de coeur sans renseigner de date
>>>>>>> coup de coeur sans renseigner de date
>>>>>>> 04f7e6b... coup de coeur sans renseigner de date
        ;
>>>>>>> 28a452b... changement structure
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\HebergementBundle\Entity\Hebergement',
            'locale' => 'fr_FR'
        ));
    }

    public function finishView(FormView $view, FormInterface $form, array $options)
    {
        parent::finishView($view, $form, $options); // TODO: Change the autogenerated stub
        /** @var FormView $viewChild */
        foreach ($view->children['classement']->children as $child) {
            $child->vars['attr'] = array('data-unique_block_prefix' => $child->vars['unique_block_prefix']);
        }
    }
}
>>>>>>> changement structure
