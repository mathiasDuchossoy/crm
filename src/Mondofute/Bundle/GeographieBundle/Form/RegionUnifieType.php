<?php

namespace Mondofute\Bundle\GeographieBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;

class RegionUnifieType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('regions', CollectionType::class, array('entry_type' => RegionType::class))
        ;
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\GeographieBundle\Entity\RegionUnifie'
        ));
    }


    public function finishView(FormView $view, FormInterface $form, array $options)
    {
        parent::finishView($view, $form, $options); // TODO: Change the autogenerated stub
        foreach ($view->children['regions'] as $region) {
            if ($region->vars['value']->getSite()->getCrm() == 1) {
                $regionCrm = $region;
            } else {
                foreach ($region->children['images'] as $key => $image) {
                    if ($image->vars['value']->getActif() == true) {

                        $siteId = $region->vars['value']->getSite()->getId();
                        $regionCrm->children['images']->children[$key]->children['sites']->children[$siteId]->vars['attr'] = array('checked' => 'checked');
//                        dump($regionCrm->children['images']->children[$key]->children['sites']->children[$siteId]->vars['attr']);
                    }
                }
                foreach ($region->children['photos'] as $key => $photo) {
                    if ($photo->vars['value']->getActif() == true) {

                        $siteId = $region->vars['value']->getSite()->getId();
                        $regionCrm->children['photos']->children[$key]->children['sites']->children[$siteId]->vars['attr'] = array('checked' => 'checked');
                    }
                }
            }

        }
    }
}
