{% extends '::base.html.twig' %}


{% block infinite_form_polycollection_row %}
    {% set collectionForm = form.commandeLignes %}
    {% set prototypes = form.commandeLignes.vars.prototypes %}
    <hr>
    <div class="collection">
        <div class="clearfix">
            <div class="pull-left">
                {{ form_label(collectionForm, 'Lignes de Commande') }}
            </div>
            <div class="pull-right">
                {% set form = prototypes.sejourNuite %}
                <a href="#" data-prototype="{{ block('entry_row') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name__');">
                    <i class="glyphicon glyphicon-plus"></i> séjour nuite
                </a>
                {% set form = prototypes.sejourPeriode %}
                <a href="#" data-prototype="{{ block('entry_row') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name__');">
                    <i class="glyphicon glyphicon-plus"></i> séjour periode
                </a>
                {% set form = prototypes.prestationAnnexe %}
                <a href="#" data-prototype="{{ block('entry_row') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name__');">
                    <i class="glyphicon glyphicon-plus"></i> prestation annexe
                </a>
                {% set form = prototypes.fraisDossier %}
                <a href="#" data-prototype="{{ block('entry_row') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name__');">
                    <i class="glyphicon glyphicon-plus"></i> frais de dossier
                </a>
                {% set form = prototypes.remise %}
                <a href="#" data-prototype="{{ block('entry_row') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name__');">
                    <i class="glyphicon glyphicon-plus"></i> remise
                </a>
            </div>
        </div>
        <div class="items">
            {% for form in collectionForm %}
                {{ block('entry_row') }}
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block entry_row %}
    {% set type = form._type.vars.value %}
    <div class="item"
    >
        {#<hr>#}
        {% if type == 'sejourNuite' %}
            {{ block('commande_ligne_sejour_nuite_widget') }}
        {% elseif type == 'prestationAnnexe' %}
            {{ block('commande_ligne_prestation_annexe_widget') }}
        {% elseif type == 'sejourPeriode' %}
            {{ block('commande_ligne_sejour_periode_widget') }}
        {% else %}
            <div class="row">
                <div class="col-md-6">{{ form_row(form.montant , {'type' : 'number' , 'attr' : {'step' : 'any' } }) }}</div>
                <div class="col-md-2 text-right">
                    {{ block('bouton_supprimer') }}
                </div>
            </div>
            {{ form_rest(form) }}
        {% endif %}
    </div>
{% endblock %}

{% block bouton_supprimer %}
    {#<label>&nbsp;</label><br>#}
    <a href="#" class="btn btn-danger remove_item"
       onclick="removeTagForm(this,event);"
    >
        <i class="glyphicon glyphicon-minus"></i> Supprimer
    </a>
{% endblock %}

{% block commande_ligne_sejour_nuite_widget %}
    {% set collectionForm = form.commandeLignePrestationAnnexes %}
    {% set type = form._type %}
    <div class="row">
        <div class="col-md-6">{{ form_row(form.montant , {'type' : 'number' , 'attr' : {'step' : 'any' } }) }}</div>
        <div class="col-md-2 text-right">
            {{ block('bouton_supprimer') }}
        </div>
        <div class="collection">
            <div class="clearfix">
                {% set form = form.commandeLignePrestationAnnexes.vars.prototype %}
                <a href="#" data-prototype="{{ block('entry_row_commande_ligne_prestation_annexe_sejour') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name_commande_ligne_prestation_annexe__');">
                    <i class="glyphicon glyphicon-plus"></i> prestation annexe
                </a>
            </div>
            <div class="items">
                {% for form in collectionForm %}
                    {{ block('entry_row_commande_ligne_prestation_annexe_sejour') }}
                {% endfor %}
            </div>
        </div>
    </div>
    {{ form_widget(type) }}
{% endblock %}

{% block commande_ligne_sejour_periode_widget %}
    {% set collectionForm = form.commandeLignePrestationAnnexes %}
    {% set type = form._type %}
    <div class="row">
        <div class="col-md-6">{{ form_row(form.montant , {'type' : 'number' , 'attr' : {'step' : 'any' } }) }}</div>
        <div class="col-md-2 text-right">
            {{ block('bouton_supprimer') }}
        </div>
        <div class="collection">
            <div class="clearfix">
                {% set form = form.commandeLignePrestationAnnexes.vars.prototype %}
                <a href="#" data-prototype="{{ block('entry_row_commande_ligne_prestation_annexe_sejour') | escape }}"
                   class="btn btn-success add_item"
                   onclick="addTagForm(this,event,'__name_commande_ligne_prestation_annexe__');">
                    <i class="glyphicon glyphicon-plus"></i> prestation annexe
                </a>
            </div>
            <div class="items">
                {% for form in collectionForm %}
                    {{ block('entry_row_commande_ligne_prestation_annexe_sejour') }}
                {% endfor %}
            </div>
        </div>
    </div>
    {{ form_widget(type) }}
{% endblock %}

{% block entry_row_commande_ligne_prestation_annexe_sejour %}
    <div class="item">
        {{ block('commande_ligne_prestation_annexe_widget') }}
    </div>
{% endblock %}


{% block commande_ligne_prestation_annexe_widget %}
    <div class="row">
        <div class="col-md-6">{{ form_row(form.montant , {'type' : 'number' , 'attr' : {'step' : 'any' } }) }}</div>
        <div class="col-md-2 text-right">
            {{ block('bouton_supprimer') }}
        </div>
    </div>
    {{ form_rest(form) }}
{% endblock %}

{% block body %}
    <section>
        <h1>
            {% block titre %}
            {% endblock %}
        </h1>
    </section>
    <section>
        {#  BLOCK CONTENANT LE FORMULAIRE #}
        {% block formulaire %}
            {% include '::flashbags.html.twig' %}
            {{ form_errors(form) }}
            {{ form_start(form) }}
            {% if form.statutDossier.vars.data is not null %}
                <div style="background-color: {{ form.statutDossier.vars.data.codeCouleur }}" class="row alert">
                    <div class="col-md-12">
                        {#récupération du libelle du groupeStatutDossier associé#}
                        {% set libelleGroupe = '' %}
                        {% set libelleStatut = '' %}
                        {% if form.statutDossier.vars.data.groupeStatutDossier is not null %}
                            {% for groupe in form.statutDossier.vars.data.groupeStatutDossier.traductions %}
                                {% if groupe.langue.code == app.request.locale %}
                                    {% set libelleGroupe = groupe.libelle~' - ' %}
                                {% endif %}
                            {% endfor %}
                        {% endif %}

                        {% for statut in form.statutDossier.vars.data.traductions %}
                            {% if statut.langue.code == app.request.locale %}
                                {% set libelleStatut = statut.libelle %}
                            {% endif %}
                        {% endfor %}
                        {{ libelleGroupe }}{{ libelleStatut }}
                    </div>
                </div>
            {% endif %}
            <ul class="nav nav-tabs">
                <li class="active">
                    <a data-toggle="tab" href="#commande-fiche">Fiche</a>
                </li>
                <li>
                    <a data-toggle="tab" href="#commande-fiche-client">Client</a>
                </li>
                <li>
                    <a data-toggle="tab" href="#commande-statut">Statut</a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="commande-fiche" class="tab-pane fade in active">
                    {{ block('infinite_form_polycollection_row') }}
                    {{ form_row(form.site) }}
                    {{ form_row(form.dateCommande) }}
                    {{ form_row(form.numCommande) }}
                    {#{{ form_row(form.clients) }}#}
                </div>
                <div id="commande-fiche-client" class="tab-pane fade">
                    <div class="recherche-client panel panel-primary">
                        <div class="panel-heading">
                            Recherche d'un client
                        </div>
                        <div class="panel-body">
                            <div class="col-md-4">
                                <label class="col-md-2 control-label" for="rechercher-client-nom">Nom</label>
                                <div class="col-md-10">
                                    {#<select id="rechercher-client-nom"#}
                                    {#class="form-control recherche-client-nom"></select>#}
                                    <input id="rechercher-client-nom" autocomplete="off" type="text" list="list-clients"
                                           class="form-control recherche-client-nom">
                                    <ul class="list-group recherche-client-reponse-list"
                                        style="position: absolute;z-index: 1">
                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="col-md-2 control-label" for="rechercher-client-prenom">Prénom</label>
                                <div class="col-md-10">
                                    <input id="rechercher-client-prenom" autocomplete="off"
                                           class="form-control recherche-client-prenom">
                                    <ul class="list-group recherche-client-reponse-list"
                                        style="position: absolute;z-index: 1">
                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-default" id="nouveau-client" name="nouveau-client"
                                        data-client-id="">{{ 'nouveau client' | trans }}</button>
                            </div>
                        </div>
                    </div>
                    <div style="display: none;">
                        {{ form_row(form.clients) }}
                    </div>
                    <div class="panel-group">
                        <div class="panel panel-primary">
                            <div class="panel-heading">
                                Clients
                            </div>
                            <div id="form-clients" class="panel-body">
                                {#{% for client in form.clients %}#}
                                {% include '@MondofuteCommande/commande/fiche-client.html.twig' with {form : formClient} %}
                                {#{% endfor %}#}
                            </div>
                        </div>
                    </div>
                </div>
                <div id="commande-statut" class="tab-pane fade">
                    {#{{ dump(form.statutDossier) }}#}
                    <div class="form-group">
                        <label class="col-md-2 control-label"
                               for="{{ form.statutDossier.vars.id }}">{{ 'statut' | trans }}</label>
                        <div class="col-md-10">
                            <select class="form-control" id="{{ form.statutDossier.vars.id }}"
                                    name="{{ form.statutDossier.vars.full_name }}">
                                {% for statutDossier in form.statutDossier.vars.choices %}
                                    {# récupération du libelle du groupeStatutDossier associé #}
                                    {% set libelleGroupe = '' %}
                                    {% if statutDossier.data.groupeStatutDossier is not null %}
                                        {% for groupe in statutDossier.data.groupeStatutDossier.traductions %}
                                            {% if groupe.langue.code == app.request.locale %}
                                                {% set libelleGroupe = groupe.libelle~' - ' %}
                                            {% endif %}
                                        {% endfor %}
                                    {% endif %}
                                    {# gestion de l'option statutDossier#}
                                    <option {% if form.statutDossier.vars.data.id is defined and form.statutDossier.vars.data.id == statutDossier.data.id %}selected="selected"{% endif %}
                                            value="{{ statutDossier.data.id }}"
                                            style="background-color:{{ statutDossier.data.codeCouleur }};">{{ libelleGroupe }}{{ statutDossier.data.traductions[0].libelle }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>

                    {{ form_row(form.litigeDossier) }}
                    {#{{ form_row(form.statutDossier,{'attr':{'test':'test'}}) }}#}
                </div>
            </div>
            {{ form_row(form._token) }}
            {{ form_row(form.submit) }}
            {{ form_end(form, {'render_rest': false}) }}
        {% endblock %}
    </section>
    <section>
        {% block actions %}

        {% endblock %}
    </section>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        if (!urls) {
            var urls = {};
        }
        urls.rechercheClients = '{{ path('recherche_clients') }}';
        urls.ajouteFormClient = '{{ path('commande_ajout_client') }}';
        //        gère la recherche du client pour l'autocompletion
        $(document).on('keyup focus', '.recherche-client-nom, .recherche-client-prenom', function (e) {
            if (e.keyCode != 16 && e.keyCode != 9) {
                var $obj = $(this);
                rechercherClients($(this));
            }
        });
        //        charge le client sur le click droit
        $('.recherche-client-reponse-list').on('mousedown', 'li', function (e) {
            if (e.which == 1) {
                var datas = $(this).data();
                chargerFormulaireClient(datas);
            }
        });
        $(document).on('click', '#nouveau-client', function (e) {
            var datas = $(this).data();
            chargerFormulaireClient(datas);
        });
        function chargerFormulaireClient(datas) {
            $.get(
                {
                    url: urls.ajouteFormClient,
                    data: {
                        id: datas.clientId,
                    }
                }
            ).done(function (data) {
                $('#form-clients').html(data);
                $('#mondofute_bundle_commandebundle_commande_clients option:selected').removeAttr('selected');
                $('#mondofute_bundle_commandebundle_commande_clients option[value="' + datas.clientId + '"]').attr('selected', 'selected');
            });
        }
        //        efface l'autocompletion lorsqu'on sort du champ
        $(document).on('blur', '.recherche-client-nom, .recherche-client-prenom ', function () {
            var $form = $(this).closest('.recherche-client');
            //            vide les ul d'autocompletion
            $form.find('.recherche-client-reponse-list').html('');
        });
        function rechercherClients($obj, $callback) {
//            récupération du formulaire de recherche client
            var $form = $obj.closest('.recherche-client');
//            instanciation de l'objet contenant les critères de recherche
            var dataRecherche = {};
            dataRecherche.nom = $form.find('.recherche-client-nom').val();
            dataRecherche.prenom = $form.find('.recherche-client-prenom').val();
            if (dataRecherche.nom.length > 0 || dataRecherche.prenom.length > 0) {
                //            récupère l'ul d'autocompletion liée à l'objet déclencheur
                var $listeReponse = $obj.find('+ .recherche-client-reponse-list');
//                lance la recherche des clients avec les criteres
                $.get(
                    {
                        url: urls.rechercheClients,
                        data: dataRecherche,
                        dataType: 'json'
                    }
                ).done(function (data) {
//            vide les ul d'autocompletion
                    $form.find('.recherche-client-reponse-list').html('');
                    if ($obj.is(':focus')) {
                        chargerListeClient($listeReponse, data, dataRecherche);
                    }
                    if ($callback) {
                        $callback();
                    }
                });
            }
        }
        function chargerListeClient($obj, data, dataRecherche) {
            if (data.length > 0) {
                var nom = '';
                var prenom = '';
                var expression = '';
                for (var i = 0; i < data.length; i++) {
                    $obj.append($('<li class="list-group-item" data-client-id="' + data[i].id + '">' + data[i].nom.replace(new RegExp(dataRecherche.nom), '<b>' + dataRecherche.nom + '</b>') + ' ' + data[i].prenom.replace(new RegExp(dataRecherche.prenom), '<b>' + dataRecherche.prenom + '</b>') + '</li>'));
                }
            } else {
                $obj.append($('<li class="list-group-item" data-client-id="-1">Aucun résultat trouvé</li>'));
            }
        }

        //        fin js recherche client
        jQuery(document).ready(function () {
            $('div.items').each(function (index, element) {
                $(element).data('index', $(element).children('div.item').length);
            });
        });

        function addTagForm(element, event, name) {
            event.preventDefault();
            var $element = $(element);
            var $collectionHolder = $element.closest('div.collection').find('div.items:first');
            var prototype = $element.data('prototype');
            var index = $collectionHolder.data('index');
            if (!index) index = 0;
            var regex = new RegExp(name, 'g');
            var newForm = prototype.replace(regex, index);
            $collectionHolder.data('index', index + 1);
            $collectionHolder.append(newForm);
        }

        function removeTagForm(element, event) {
            event.preventDefault();
            $(element).closest('div.item').remove();
        }

    </script>
{% endblock %}