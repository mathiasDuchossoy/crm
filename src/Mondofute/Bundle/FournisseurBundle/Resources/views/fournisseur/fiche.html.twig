{% extends '::base.html.twig' %}

{% block body %}
    <section>
        <h1>
            {% block titre %}
            {% endblock %}
        </h1>
    </section>
    <section>
        {% block formulaire %}
            {% include '::flashbags.html.twig' %}
            <div id="alert_type" class="alert alert-danger" role="alert" style="display: none">
                <p>  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>Vous devez choisir au moins un type.</p>
            </div>
            {% set countInterlocuteur = 0 %}

            {{ form_start(form) }}
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#fiche">{{ 'fiche' | trans | capitalize }}</a></li>
                <li><a data-toggle="tab" href="#service">{{ 'service' | trans | capitalize }}</a></li>
                {% if edit is defined %}
                    <li><a data-toggle="tab" href="#prestationannexe">{{ 'prestation.annexe' | trans | capitalize }}</a>
                {% endif %}
                </li>
            </ul>
            <div class="tab-content">
                <div id="fiche" class="tab-pane fade in active">
                    {{ form_row(form.enseigne) }}
                    {{ form_row(form.raisonSociale) }}
                    {{ form_row(form.logo) }}
                    {{ form_row(form.types) }}
                    {#<div id="my-popover-container" style="display: none;">#}
                        {#<div class="alert alert-danger" role="alert">#}
                            {#<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>#}
                            {#<span class="sr-only">Error:</span>#}
                            {#Enter a valid email address#}
                        {#</div>#}
                    {#</div>#}

                    {{ form_row(form.fournisseurParent) }}
                    {{ form_row(form.contient) }}
                    {% if form.moyenComs[0] is defined %}
                        {{ form_row(form.moyenComs[0].code_postal) }}
                        {{ form_row(form.moyenComs[0].adresse1) }}
                        {{ form_row(form.moyenComs[0].adresse2) }}
                        {{ form_row(form.moyenComs[0].adresse3) }}
                        {{ form_row(form.moyenComs[0].ville) }}
                        {{ form_row(form.moyenComs[0].pays) }}
                    {% endif %}

                    {#{{ form_row(form.remiseClefs) }}#}
                    <div class="form-group ">
                        <div class="panel panel-primary">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-sm-11"
                                         onclick="var $remiseClefs = $('#remiseClefs');($remiseClefs.is(':visible'))?$remiseClefs.hide():$remiseClefs.show()">
                                        <h3 class="panel-title">{{ form.remiseClefs.vars['label'] | trans | capitalize }}</h3>
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-default btn-xs" type="button"
                                                onclick="afficherModaleAjouterRemiseClef()">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            {#{{ dump(form.remiseClefs.vars['prototype']) }}#}
                            <div class="panel-body" id="remiseClefs" data-nb-remise-clef="{{ form.remiseClefs|length }}"
                                 data-prototype-traduction="
                         {% filter escape %}
        {% include '@MondofuteRemiseClef/remiseclef/prototype_traduction.html.twig' with { 'form': form.remiseClefs.vars['prototype'].traductions.vars['prototype'], 'idRemiseClef': '__idRemiseClef__', 'active':'__active__', 'indexLangue' : '__indexLangue__'} %}
    {% endfilter %}
                         "
                                 data-prototype="
                    {% filter escape %}
        {% include '@MondofuteRemiseClef/remiseclef/prototype.html.twig' with { 'form': form.remiseClefs.vars['prototype'] } %}
    {% endfilter %}
                    ">
                                {% for remiseClef in form.remiseClefs %}
                                    <div class="row" id="contenuRemiseClef_{{ remiseClef.vars.name }}">
                                        <div class="col-sm-12">
                                            <div class="col-sm-10"
                                                 id="remiseClef_{{ remiseClef.vars.name }}_libelle">{{ remiseClef.vars.value.libelle }}</div>
                                            <div class="col-sm-2">
                                                <button class="btn btn-default" type="button"
                                                        onclick="afficherModaleModifierRemiseClef({{ remiseClef.vars.name }});">
                                                    <span class="glyphicon glyphicon-edit"></span>
                                                </button>
                                                <button class="btn btn-default" type="button"
                                                        onclick="supprimerRemiseClef({{ remiseClef.vars.name }});">
                                                    <span class="glyphicon glyphicon-trash"></span>
                                                </button>
                                            </div>
                                        </div>
                                        <div id="formRemiseClef_{{ remiseClef.vars.name }}" style="display:none;">
                                            {% include '@MondofuteRemiseClef/remiseclef/prototype.html.twig' with { 'form': remiseClef } %}
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="panel  panel-primary">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-sm-11"
                                         onclick="var $receptions = $('#receptions');($receptions.is(':visible'))?$receptions.hide():$receptions.show()">
                                        {#{{ form_label(form.receptions) }}#}
                                        <h3 class="panel-title">{{ form.receptions.vars['label'] | trans | capitalize }}</h3>
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-default btn-xs" type="button"
                                                onclick="afficherModaleReception('add')">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            {#{{ dump(form.remiseClefs.vars['prototype']) }}#}
                            {#maRecetpyioType = form.reception.vars[#}
                            <div class="panel-body" id="receptions" data-nb-receptions="{{ form.receptions|length }}"
                                 data-prototype="
                    {% filter escape %}
        {% include '@MondofuteFournisseur/fournisseur/prototype-reception.html.twig' with { 'form': form.receptions.vars['prototype'] } %}
    {% endfilter %}
                    "
                            >
                                {% for reception in form.receptions %}
                                    <div class="row" id="contenuReception_{{ reception.vars.name }}">
                                        <div class="col-sm-12">
                                            {#création de la ligne d'affichage (jour tranche1 et tranche 2#}
                                            {% set libelleReception = ('de'|trans)~' '~reception.tranche1.debut.vars.data|date('H')~('h'|trans)~reception.tranche1.debut.vars.data|date('i')~' '~('à'|trans)~' '~ reception.tranche1.fin.vars.data|date('H')~('h'|trans)~reception.tranche1.fin.vars.data|date('i') %}
                                            {% if reception.tranche2.debut.hour.vars.value != 0 or reception.tranche2.debut.minute.vars.value != 0 or reception.tranche2.fin.hour.vars.value != 0 or reception.tranche2.fin.minute.vars.value != 0 %}
                                                {% set libelleReception = libelleReception~' '~('et.de'|trans)~' '~reception.tranche2.debut.vars.data|date('H')~('h'|trans)~reception.tranche2.debut.vars.data|date('i')~' '~('à'|trans)~' '~ reception.tranche2.fin.vars.data|date('H')~('h'|trans)~reception.tranche2.fin.vars.data|date('i') %}
                                            {% endif %}
                                            <div class="col-sm-10"
                                                 id="reception_{{ reception.vars.name }}_libelle">{{ ('jour.'~reception.jour.vars.value~'.libelle') | trans }} {{ libelleReception }}</div>
                                            <div class="col-sm-2">
                                                <button class="btn btn-default" type="button"
                                                        onclick="afficherModaleReception('edit',{{ reception.vars.name }});">
                                                    <span class="glyphicon glyphicon-edit"></span>
                                                </button>
                                                <button class="btn btn-default" type="button"
                                                        onclick="supprimerReception({{ reception.vars.name }});">
                                                    <span class="glyphicon glyphicon-trash"></span>
                                                </button>
                                            </div>
                                        </div>
                                        <div id="formReception_{{ reception.vars.name }}" style="display: none;">
                                            {% include '@MondofuteFournisseur/fournisseur/prototype-reception.html.twig' with { 'form': reception } %}
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    <div id="interlocuteur_panels">
                        {% for serviceInterlocuteur in serviceInterlocuteurs %}
                            <div class="panel panel-primary">
                                <div class="panel-heading"><h3 class="panel-title">
                                        {% for traduction in  serviceInterlocuteur.traductions %}
                                            {% if traduction.langue.code == app.request.locale %}
                                                {{ traduction.libelle }}
                                            {% endif %}
                                        {% endfor %}
                                    </h3></div>
                                <div class="panel-body">
                                    <table class="table table-striped" id="service_{{ serviceInterlocuteur.id }}"
                                           data-service="{{ serviceInterlocuteur.id }}">
                                        <tr>
                                            <th>Prénom / Nom</th>
                                            <th>Fonction</th>
                                            <th style="width: 225px;">Action</th>
                                        </tr>

                                        {% for  key, interlocuteur in fournisseur.interlocuteurs %}
                                            {% if interlocuteur.interlocuteur.service.id ==  serviceInterlocuteur.id %}
                                                <tr id="row_interlocuteur_{{ key }}">
                                                    <td>{{ interlocuteur.interlocuteur.prenom }} {{ interlocuteur.interlocuteur.nom }}</td>
                                                    <td>
                                                        {% for traduction in  interlocuteur.interlocuteur.fonction.traductions %}
                                                            {% if traduction.langue.code == app.request.locale %}
                                                                {{ traduction.libelle }}
                                                            {% endif %}
                                                        {% endfor %}
                                                    </td>
                                                    <td>
                                                        <button onclick="afficherModalModificationInterlocuteur( {{ key }} )"
                                                                type='button' class='btn btn-default'><span
                                                                    class='glyphicon glyphicon-edit'
                                                                    aria-hidden='true'></span>
                                                        </button>
                                                        <button onclick="supprimerInterlocuteur( {{ key }} )"
                                                                type='button' class='btn btn-default'><span
                                                                    class='glyphicon glyphicon-trash'
                                                                    aria-hidden='true'></span>
                                                        </button>
                                                    </td>
                                                </tr>
                                                {% set countInterlocuteur = countInterlocuteur + 1 %}
                                            {% endif %}
                                        {% endfor %}
                                    </table>
                                    <button type="button" class="btn btn-default"
                                            data-service-libelle="{% for traduction in  serviceInterlocuteur.traductions %}{% if traduction.langue.code == app.request.locale %}{{ traduction.libelle }}{% endif %}{% endfor %}"
                                            data-service-id="{{ serviceInterlocuteur.id }}"
                                            onclick="afficherModalInterlocuteur(this);"
                                    >
                                        Ajouter
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
                {% set prototypeListeService = form.listeServices.vars.prototype %}
                <div id="service" class="tab-pane fade in">
                    <div id="liste-service" data-index="{{ form.listeServices | length }}">
                        {#{% include '@MondofuteService/listeservice/prototype-ligne-liste-service.html.twig' with {'form' : prototypeListeService} %}#}
                        {% for listeService in form.listeServices %}
                            {#<div id="form-liste-service" style="display: none;">#}
                            <div class="row panel" id="liste-service-{{ listeService.vars.name }}">
                                <div class="col-sm-10"
                                     id="titre-liste-service-{{ listeService.vars.name }}">{{ listeService.libelle.vars.value }}</div>
                                <div class="col-sm-2">
                                    <button type="button" class="btn btn-default afficher-modal-modif-liste-service"
                                            data-index="{{ listeService.vars.name }}"><span
                                                class="glyphicon glyphicon-edit"></span></button>
                                    <button type="button" class="btn btn-default suppr-liste-service"
                                            data-index="{{ listeService.vars.name }}"><span
                                                class=" glyphicon glyphicon-trash
                                    "></span></button>
                                </div>
                                <div style="display: none;"
                                     id="ctn-form-{{ listeService.vars.name }}">
                                    {% include '@MondofuteService/listeservice/prototype-liste-service.html.twig' with {'form':listeService} %}
                                </div>
                            </div>


                        {% endfor %}
                    </div>
                    <div class="form-group">
                        <button class="btn btn-default afficher-modal-ajout-liste-service" type="button"><span
                                    class="glyphicon glyphicon-plus"></span></button>
                    </div>
                </div>
                {% if edit is defined %}
                    <div id="prestationannexe" class="tab-pane fade in">
                        {% for famillePrestationAnnexe in famillePrestationAnnexes %}
                            {#{{ dump(famillePrestationAnnexe.prestationAnnexes) }}#}
                            <div class="panel panel-primary"
                                 id="famillePrestationAnnexe_{{ famillePrestationAnnexe.id }}"
                                    {% set displayType = false %}
                                    {% for type in fournisseur.types %}
                                        {% if famillePrestationAnnexe.id == type.id %}
                                            {% set displayType = true %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if displayType == false %}
                                        style="display: none"
                                    {% endif %}
                            >
                                <div class="panel-heading">
                                    {% for traduction in famillePrestationAnnexe.traductions %}
                                        {% if traduction.langue.code == app.request.locale %}
                                            <h3 class="panel-title">{{ traduction.libelle }}</h3>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                                <div class="panel-body"
                                     id="famillePrestationAnnexeBody_{{ famillePrestationAnnexe.id }}">
                                    {% include ('@MondofuteFournisseur/fournisseur/prestation-annexe.html.twig' ) %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>

            {{ form_row(form.submit) }}

            {% set interlocuteurs %}
                {% include('@MondofuteFournisseur/Interlocuteur/fiche.html.twig') with {'form': form.interlocuteurs.vars.prototype.interlocuteur} %}
            {% endset %}
            {% set moyenComsMail %}
                {% include('@MondofuteFournisseur/Interlocuteur/fiche_mail.html.twig') with {'form': form.interlocuteurs.vars.prototype.interlocuteur.moyenComs.vars.prototypes.nucleus_moyencombundle_email} %}
            {% endset %}
            {% set moyenComsFixe %}
                {#{% filter escape %}#}
                {% include('@MondofuteFournisseur/Interlocuteur/fiche_tel_fixe.html.twig') with {'form': form.interlocuteurs.vars.prototype.interlocuteur.moyenComs.vars.prototypes.nucleus_moyencombundle_telfixe , 'label' : 'Téléphone __number__'} %}
                {#{% endfilter %}#}
            {% endset %}
            {% set moyenComsMobile %}
                {% include('@MondofuteFournisseur/Interlocuteur/fiche_tel_mobile.html.twig') with {'form': form.interlocuteurs.vars.prototype.interlocuteur.moyenComs.vars.prototypes.nucleus_moyencombundle_telmobile } %}
            {% endset %}
            {% set moyenComsAdresse %}
                {% include('@MondofuteFournisseur/Interlocuteur/fiche_adresse.html.twig') with {'form': form.interlocuteurs.vars.prototype.interlocuteur.moyenComs.vars.prototypes.nucleus_moyencombundle_adresse} %}
            {% endset %}
            <div id="values-interlocuteurs" style="display: none">
                {% for interlocuteur in form.interlocuteurs %}
                    {% include ('@MondofuteFournisseur/Interlocuteur/fiche.html.twig') with {'form': interlocuteur.interlocuteur} %}
                {% endfor %}
            </div>

            <div id="values_prestation_annexe" style="display: none">
            {#<div id="values_prestation_annexe" >#}
                {% include ('@MondofuteFournisseur/fournisseur/fournisseur-prestation-annexe.html.twig') %}
            </div>
            {{ form_widget(form._token) }}
            {{ form_end(form, {'render_rest': false}) }}
            <div class="modal fade" id="modalListeService" tabindex="-1" role="dialog"
                 aria-labelledby="modalListeService">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"
                                    aria-label="{{ 'fermer' | trans | capitalize }}"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title"></h4>
                        </div>
                        <div class="modal-body">
                            <div class="row" id="modal-prototype-liste-service"
                                 data-prototype-service="
                                 "
                                 data-prototype="
                            {% filter escape %}
                                {% include '@MondofuteService/listeservice/prototype-liste-service.html.twig' with {'form': form.listeServices.vars.prototype} %}
                                {% endfilter %}
                            ">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default"
                                    data-dismiss="modal">{{ 'fermer' | trans | capitalize }}</button>
                            <button type="button" class="btn btn-default modifier-liste-service"
                            >{{ 'modifier' | trans | capitalize }}</button>
                            <button type="button" class="btn btn-default ajouter-liste-service"
                            >{{ 'ajouter' | trans | capitalize }}</button>
                            <div id="index-liste-service" data-index=""></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="modalTarifsService" tabindex="-1" role="dialog"
                 aria-labelledby="modalTarifService">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"
                                    aria-label="{{ 'fermer' | trans | capitalize }}"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title">{{ 'gestion.tarifs.service' | trans | capitalize }}</h4>
                        </div>
                        <div class="modal-body">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default"
                                    data-dismiss="modal">{{ 'fermer' | trans | capitalize }}</button>
                            <button type="button" class="btn btn-default valider-tarifs-service"
                                    id="valider-tarifs-service" data-index-liste-service="" data-index-service=""
                            >{{ 'valider' | trans | capitalize }}</button>
                            {#<div id="index-tarif-service" data-index=""></div>#}
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="interlocuteurModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="exampleModalLabel"></h4>
                        </div>
                        <div class="modal-body">
                            <form id="form-interlocuteur" data-interlocuteur-index="{{ countInterlocuteur }}"
                                    {#data-prototype="#}
                                    {#{% filter escape %}#}
                                    {#{% include ('@MondofuteFournisseur/Interlocuteur/fiche.html.twig') with {'form': interlocuteurs} %}#}
                                    {#{% endfilter %}#}
                                    {#"#}
                                  data-prototype="{{ interlocuteurs | e }}"
                                  data-prototype_moyen_coms_adresse="{{ moyenComsAdresse | e }}"
                                  data-prototype_moyen_coms_mail="{{ moyenComsMail | e }}"
                                  data-prototype_moyen_coms_tel1="{{ moyenComsFixe | e }}"
                                  data-prototype_moyen_coms_tel2="{{ moyenComsFixe | e }}"
                                  data-prototype_moyen_coms_mobile="{{ moyenComsMobile | e }}"
                                  class="form-horizontal">
                                {#{{ interlocuteurs|raw }}#}
                                {#{{ prenom|raw }}#}
                                {#{{ service|raw }}#}
                                {#{{ fonction|raw }}#}
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button"
                                    class="btn btn-primary">
                                {#data-dismiss="modal" class="btn btn-primary">#}
                                Ajouter
                                un interlocuteur
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="remiseClefModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="exampleModalLabel"></h4>
                        </div>
                        <div class="modal-body" id="contenuAjoutRemiseClef">

                        </div>
                        <div class="modal-body" id="modal-remise-clef-error"></div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterRemiseClef();" data-index="" id="ajouterRemiseClef" type="button"
                                    class="btn btn-primary">
                                {{ 'ajouter' | trans }}
                            </button>
                            <button onclick="modifierRemiseClef();" data-index="" id="modifierRemiseClef" type="button"
                                    class="btn btn-primary">
                                {{ 'modifier' | trans }}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="receptionModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="receptionModalTitre"></h4>
                        </div>
                        <div class="modal-body" id="contenuReceptionModal">

                            {% include '@MondofuteFournisseur/fournisseur/form-reception-plusieurs-jour.html.twig' with {'form' : form.reception.vars['prototype']} %}
                        </div>
                        <div class="modal-body" id="modal-reception-error"></div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterReception();" data-index="" id="ajouterReception" type="button"
                                    class="btn btn-primary">
                                {{ 'ajouter' | trans }}
                            </button>
                            <button onclick="modifierReception();" data-index="" id="modifierReception" type="button"
                                    class="btn btn-primary">
                                {{ 'modifier' | trans }}
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            {% include('MondofuteFournisseurBundle:fournisseur:modal-fournisseur-prestation-annexe.html.twig') %}
        {% endblock %}
    </section>
    <section>
        {% block actions %}

        {% endblock %}
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var _langues = {{ langues | serialize('json') | raw }};
        var _libelleJour = {};
        {% for i in 0..6 %}
        _libelleJour[{{ i }}] = '{{ ('jour.'~i~'.libelle') | trans }}';
        {% endfor %}
        $(document).on('click', '.addLigneService', function () {
            ajouterLigneService();
        });
        $(document).on('click', '.ajouter-liste-service', function () {
            ajouterListeService();
        });
        $(document).on('click', '.modifier-liste-service', function () {
            modifierListeService();
        });

        $('.afficher-modal-ajout-liste-service').on('click', function (event) {
            afficherModalListeService('add', null);
        });
        $(document).on('click', '.afficher-modal-modif-liste-service', function (event) {
            afficherModalListeService('edit', parseInt($(this).attr('data-index')));
        });
        $(document).on('click', '.afficher-modal-tarif-service', function (event) {
            afficherModalTarifsService(parseInt($(this).attr('data-index-liste-services')), parseInt($(this).attr('data-index-service')));
        });
        $(document).on('click', '.ajouter-ligne-tarif-service', function () {
            ajouterLigneTarifService($(this).attr('data-prototype'), $(this).attr('data-index-liste-services'), $(this).attr('data-index-service'));
        });
        $(document).on('click', '.suppr-liste-service', function () {
            supprimerListeService(parseInt($(this).attr('data-index')));
        });
        $(document).on('click', '.suppr-service', function () {
            supprimerService(parseInt($(this).attr('data-index-liste-services')), parseInt($(this).attr('data-index-service')));
        });
        $(document).on('click', '.suppr-tarif-service', function () {
            supprimerTarifService(parseInt($(this).attr('data-index-liste-service')), parseInt($(this).attr('data-index-service')), parseInt($(this).attr('data-index-tarif-service')));
        });
        $(document).on('click', '.valider-tarifs-service', function () {
            validerTarifsService(parseInt($(this).attr('data-index-liste-service')), parseInt($(this).attr('data-index-service')));
        });
        $('#modalListeService').on('hidden.bs.modal', function () {
            $('#modal-prototype-liste-service').html('');
        });
        $('#modalTarifsService').on('hidden.bs.modal', function () {
            $(this).find('.modal-body').html('');
        });
        function supprimerListeService(index) {
            $('#liste-service-' + index).remove();
        }
        function supprimerService(indexListeService, indexService) {
            $modal = $('#modalListeService');
            $modal.find('#service-' + indexListeService + '-' + indexService).remove();
        }
        function supprimerTarifService(indexListeService, indexService, indexTarifService) {
            $modal = $('#modalTarifsService');
            $modal.find('#tarif-' + indexListeService + '-' + indexService + '-' + indexTarifService).remove();
        }
        function ajouterLigneService() {
            $modalListeService = $('#modalListeService');
            $modalLigneService = $modalListeService.find('#modal-ligne-service');
            var indexService = parseInt($modalLigneService.attr('data-index'));
            var prototype = $modalLigneService.attr('data-prototype');
            prototype = prototype.replace(/__service_name__/g, indexService);
            $modalListeService.find('#modal-table-services tbody.table-liste-services').append($(prototype));
            $modalLigneService.attr('data-index', indexService + 1);
        }
        function validerTarifsService(indexListeService, indexService) {
            $modalTarifsService = $('#modalTarifsService');
            $modalListeService = $('#modalListeService');
            $form = $modalTarifsService.find('#form-tarifs-service-' + indexListeService + '-' + indexService);
            $modalListeService.find('#ctn-tarifs-service-' + indexListeService + '-' + indexService).html('');
            $modalListeService.find('#ctn-tarifs-service-' + indexListeService + '-' + indexService).append($form);
            $modalTarifsService.modal('hide');
        }
        //        Fonction liées à la liste de service

        function ajouterLigneTarifService(prototype, indexListeService, indexService) {
            var $modal = $('#modalTarifsService');
            var $form = $modal.find('#form-tarifs-service-' + indexListeService + '-' + indexService);
            var $tarifs = $form.find('#tarifs-' + indexListeService + '-' + indexService);
            prototype = prototype.replace(/__name__/g, $form.attr('data-index'));
            $tarifs.append($(prototype));
            $form.attr('data-index', parseInt($form.attr('data-index')) + 1);
        }
        function afficherModalTarifsService(indexListeService, indexService) {
            var $modal = $('#modalTarifsService');
            var $form = $('#form-tarifs-service-' + indexListeService + '-' + indexService);
            var $valider = $('#valider-tarifs-service');
            $valider.attr('data-index-liste-service', indexListeService);
            $valider.attr('data-index-service', indexService);
            $modal.find('.modal-body').append(cloneFormulaire($form));
            $modal.modal('show');
        }
        function afficherModalListeService(action, index) {
            var $modal = $('#modalListeService');
            var $btnsModifier = $modal.find('.modifier-liste-service');
            var $btnsAjouter = $modal.find('.ajouter-liste-service');
            switch (action) {
                case 'add':
                    $modal.find('.modal-title').each(function () {
                        $(this).html('{{ 'ajout.liste.service' | trans | capitalize }}');
                    });
                    initModalListeService();
                    index = parseInt($('#liste-service').attr('data-index'));
                    $('#index-liste-service').attr('data-index', index);
                    $btnsModifier.each(function () {
                        $(this).hide();
                    });
                    $btnsAjouter.each(function () {
                        $(this).show();
                    });
                    $modal.modal('show');
                    break;
                case 'edit':
                    $modal.find('.modal-title').each(function () {
                        $(this).html('{{ 'modif.liste.service' | trans | capitalize }}');
                    });
                    var $form = $('#form-liste-service_' + index);
                    $('#modal-prototype-liste-service').append(cloneFormulaire($form));
                    $btnsModifier.each(function () {
                        $(this).show();
                    });
                    $btnsAjouter.each(function () {
                        $(this).hide();
                    });
                    $('#index-liste-service').attr('data-index', index);
                    $modal.modal('show');
                    break;
                default:
                    break;
            }
        }
        function initModalListeService() {
            var $modalPrototypeListeService = $('#modal-prototype-liste-service');
            $modalPrototypeListeService.html('');
            var prototype = $modalPrototypeListeService.attr('data-prototype');
            prototype = prototype.replace(/__liste_service_name__/g, parseInt($('#liste-service').attr('data-index')));
            $modalPrototypeListeService.append($(prototype));
        }
        function ajouterListeService() {
            $listeService = $('#liste-service');
            indexListeService = parseInt($listeService.attr('data-index'));
            $modalListeService = $('#modalListeService');
            $form = $modalListeService.find('#form-liste-service_' + indexListeService);
            $ligne = $('<div class="row panel" id="liste-service-' + indexListeService + '"><div class="col-sm-10" id="titre-liste-service-' + indexListeService + '">' + $('#fournisseur_listeServices_' + indexListeService + '_libelle').val() + '</div><div class="col-sm-2"> <button type="button" class="btn btn-default afficher-modal-modif-liste-service" data-index="' + indexListeService + '"><span class="glyphicon glyphicon-edit"></span></button> <button type="button" class="btn btn-default suppr-liste-service" data-index="' + indexListeService + '"><span class="glyphicon glyphicon-trash"></span></button></div><div style="display: none;" id="ctn-form-' + indexListeService + '"></div></div>');
            $ligne.find('#ctn-form-' + indexListeService).append($form);
            $ligne.appendTo($listeService);
            $listeService.attr('data-index', indexListeService + 1);
            $modalListeService.modal('hide');
        }
        function modifierListeService() {
            $listeService = $('#liste-service');
            indexListeService = parseInt($('#index-liste-service').attr('data-index'));
            $modalListeService = $('#modalListeService');
            $form = $modalListeService.find('#form-liste-service_' + indexListeService);
//            affichage du libelle dans l'onglet service
            $listeService.find('#titre-liste-service-' + indexListeService).html($form.find('#fournisseur_listeServices_' + indexListeService + '_libelle').val());
            var $listeService = $('#liste-service-' + indexListeService);
            var $ctnForm = $listeService.find('#ctn-form-' + indexListeService);
            $ctnForm.html('');
            $ctnForm.append($form);
            $modalListeService.modal('hide');
        }
        //        Fonctions liées à la réceptions
        function supprimerReception(index) {
            $('#contenuReception_' + index).remove();
        }
        function afficherModaleReception(action, index) {
            var $btnAjouter = $('#ajouterReception');
            var $btnModifier = $('#modifierReception');
            var $modal = $('#receptionModal');
            var $titreModal = $('#receptionModalTitre');
            switch (action) {
                case 'add':
                    initModalReception();
                    $titreModal.html('{{ 'reception.ajouter' | trans }}');
                    $btnAjouter.css('display', '');
                    $btnModifier.css('display', 'none');
                    $modal.find('#jours').css('display', '');
                    break;
                case 'edit':
                    $form = $('#formReception_' + index);
                    chargerModalReception($form, index);
                    $titreModal.html('{{ 'reception.modifier' | trans }}');
                    $btnAjouter.css('display', 'none');
                    $btnModifier.css('display', '');
                    $btnModifier.attr('data-index', parseInt(index));
                    $modal.find('#jours').css('display', 'none');
                    break;
                default:
                    break;
            }

            $modal.modal('show');
        }
        function initModalReception() {
            var $contenuModal = $('#contenuReceptionModal');
//            initialise les jours
            $contenuModal.find('[name="fournisseur[reception][jour][]"]').each(function () {
                $(this).prop('checked', false);
            });
//            initialise la tranche 1
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute option').each(function () {
                $(this).prop('selected', false);
            });
//            initialise la tranche 2
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute option').each(function () {
                $(this).prop('selected', false);
            });

        }
        function chargerModalReception($form, index) {
            var $contenuModal = $('#contenuReceptionModal');

//            récupération des valeurs de la réception à modifier
            var jour = $form.find('#fournisseur_receptions_' + index + '_jour').val();
            var tranche1DebutHeures = $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_hour').first().val();
            var tranche1DebutMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_minute').first().val();
            var tranche1FinHeures = $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_hour').first().val();
            var tranche1FinMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_minute').first().val();
            var tranche2DebutHeures = $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_hour').first().val();
            var tranche2DebutMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_minute').first().val();
            var tranche2FinHeures = $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_hour').first().val();
            var tranche2FinMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_minute').first().val();

//            donne les valeurs au formulaire de la modale
//            charge le jour
            $contenuModal.find('[name="fournisseur[reception][jour][]"]').each(function () {
                if ($(this).val() == jour) {
                    $(this).prop('checked', true);
                } else {
                    $(this).prop('checked', false);
                }
            });
//            charge la tranche 1
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour option[value="' + tranche1DebutHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute option[value="' + tranche1DebutMinutes + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour option[value="' + tranche1FinHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute option[value="' + tranche1FinMinutes + '"]').prop('selected', true);
//            charge la tranche 2
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour option[value="' + tranche2DebutHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute option[value="' + tranche2DebutMinutes + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour option[value="' + tranche2FinHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute option[value="' + tranche2FinMinutes + '"]').prop('selected', true);
        }
        function ajouterReception() {
            var $modal = $('#receptionModal');
            var receptions = recupReceptionModal();
            for (i = 0; i < receptions.length; i++) {
                ajouterLigneReception(receptions[i]);
            }
            $modal.modal('hide');
        }
        function modifierReception() {
            var $modal = $('#receptionModal');
            var index = $('#modifierReception').attr('data-index');
            var $form = $('#formReception_' + index);
            var receptions = recupReceptionModal();
            if (receptions.length > 1) {
                alert('erreur');
            } else {
                chargerReceptionDansForm($form, receptions[0], index);
                $('#reception_' + index + '_libelle').html(formatLibelleReception(receptions[0]));
            }
//            for(i=0;i<receptions.length;i++){
//                chargerReceptionDansForm($form,receptions[i],parseInt(index)+i);
//            }
            $modal.modal('hide');
        }
        function Horaire() {
            this.heure = "";
            this.minute = "";
        }
        function TrancheHoraire() {
            this.debut = new Horaire();
            this.fin = new Horaire();
        }
        function Reception() {
            this.jour = 0;
            this.tranche1 = new TrancheHoraire();
            this.tranche2 = new TrancheHoraire();
        }
        function recupReceptionModal() {
            var $contenuModal = $('#contenuReceptionModal');
            var $jours = $contenuModal.find('[name="fournisseur[reception][jour][]"]:checked');
            var tranche1DebutHeures = $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour').val();
            var tranche1DebutMinutes = $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute').val();
            var tranche1FinHeures = $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour').val();
            var tranche1FinMinutes = $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute').val();
            var tranche2DebutHeures = $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour').val();
            var tranche2DebutMinutes = $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute').val();
            var tranche2FinHeures = $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour').val();
            var tranche2FinMinutes = $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute').val();
            var receptions = [];
            var reception = null;
            $jours.each(function () {
                reception = new Reception();
                reception.jour = $(this).val();
                reception.tranche1.debut.heure = tranche1DebutHeures;
                reception.tranche1.debut.minute = tranche1DebutMinutes;
                reception.tranche1.fin.heure = tranche1FinHeures;
                reception.tranche1.fin.minute = tranche1FinMinutes;
                reception.tranche2.debut.heure = tranche2DebutHeures;
                reception.tranche2.debut.minute = tranche2DebutMinutes;
                reception.tranche2.fin.heure = tranche2FinHeures;
                reception.tranche2.fin.minute = tranche2FinMinutes;
                receptions.push(reception);
            });
            return receptions;
        }
        function formatLibelleReception(reception) {
            var libelleTranche2 = '';
            var libelleTranche1 = ' {{ 'de' | trans }} ' + ((reception.tranche1.debut.heure.length == 1) ? '0' + reception.tranche1.debut.heure : reception.tranche1.debut.heure) + '{{ 'h'|trans }}' + ((reception.tranche1.debut.minute.length == 1) ? '0' + reception.tranche1.debut.minute : reception.tranche1.debut.minute) + ' {{ 'à'|trans }} ' + ((reception.tranche1.fin.heure.length == 1) ? '0' + reception.tranche1.fin.heure : reception.tranche1.fin.heure) + '{{ 'h'|trans }}' + ((reception.tranche1.fin.minute.length == 1) ? '0' + reception.tranche1.fin.minute : reception.tranche1.fin.minute);
            if (reception.tranche2.debut.heure != 0 || reception.tranche2.debut.minute != 0 || reception.tranche2.fin.heure != 0 || reception.tranche2.fin.minute != 0) {
                libelleTranche2 = ' {{ 'et.de' | trans }} ' + ((reception.tranche2.debut.heure.length == 1) ? '0' + reception.tranche2.debut.heure : reception.tranche2.debut.heure) + '{{ 'h'|trans }}' + ((reception.tranche2.debut.minute.length == 1) ? '0' + reception.tranche2.debut.minute : reception.tranche2.debut.minute) + ' {{ 'à'|trans }} ' + ((reception.tranche2.fin.heure.length == 1) ? '0' + reception.tranche2.fin.heure : reception.tranche2.fin.heure) + '{{ 'h'|trans }}' + ((reception.tranche2.fin.minute.length == 1) ? '0' + reception.tranche2.fin.minute : reception.tranche2.fin.minute);
            }
//            var libelle = ;
            return _libelleJour[parseInt(reception.jour)] + libelleTranche1 + libelleTranche2;
        }
        //        ajoute la ligne dans la fiche fournisseur
        function ajouterLigneReception(reception) {
            var $receptions = $('#receptions');
            var index = $receptions.attr('data-nb-receptions');
            var prototype = $receptions.attr('data-prototype');
//            var $prototype = null;
            var libelle = formatLibelleReception(reception);
            prototype = prototype.replace(/__name__/g, index);
            var $prototype = $(prototype);
            $form = $('<div id="contenuReception_' + index + '" class="row"><div class="col-sm-12"><div id="reception_' + index + '_libelle" class="col-sm-10">' + libelle + '</div><div class="col-sm-2"><button class="btn btn-default" onclick="afficherModaleReception(\'edit\',' + index + ');" type="button"><span class="glyphicon glyphicon-edit"></span> </button> <button class="btn btn-default" onclick="supprimerReception(' + index + ');" type="button"><span class="glyphicon glyphicon-trash"></span></button></div><div id="formReception_' + index + '" style="display: none;" ></div></div>');
            $form.find('#formReception_' + index).append($prototype);
            $receptions.append($form);
            chargerReceptionDansForm($prototype, reception, index);
            $receptions.attr('data-nb-receptions', parseInt(index) + 1);
        }
        //        charge la reception dans le
        function chargerReceptionDansForm($form, reception, index) {
            $form.find('#fournisseur_receptions_' + index + '_jour').val(reception.jour);
//            charge la tranche 1
            $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_hour option[value="' + reception.tranche1.debut.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_minute option[value="' + reception.tranche1.debut.minute + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_hour option[value="' + reception.tranche1.fin.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_minute option[value="' + reception.tranche1.fin.minute + '"]').prop('selected', true);
//            charge la tranche 2
            $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_hour option[value="' + reception.tranche2.debut.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_minute option[value="' + reception.tranche2.debut.minute + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_hour option[value="' + reception.tranche2.fin.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_minute option[value="' + reception.tranche2.fin.minute + '"]').prop('selected', true);
        }
        //        Fin des fonctions liées à la réception

        function supprimerRemiseClef(index) {
            $('#contenuRemiseClef_' + index).remove();
        }
        function modifierRemiseClef() {
            var index = $('#modifierRemiseClef').attr('data-index');
            var $formRemiseClef = $('#formRemiseClef_' + index);
            var $remiseClefModal = $('#remiseClefModal');
            $formRemiseClef.html('');
            $formRemiseClef.append($remiseClefModal.find('#contenuAjoutRemiseClef div:first'));
            $('#remiseClef_' + index + '_libelle').html($('#fournisseur_remiseClefs_' + index + '_libelle').val());
            $remiseClefModal.modal('hide');
        }
        function cloneFormulaire($form) {
            var prefixe = '_deepcloned';
//            copy jquery de l'element
            $dest = $form.clone();
//            duplique les select
            $selects = $form.find('select');
            $selects.each(function () {
                $dest.find('#' + $(this).attr('id')).val($(this).val());
            });
//            duplique les textareas
            $textareas = $form.find('textarea');
            $textareas.each(function () {
                $dest.find('#' + $(this).attr('id')).val($(this).val());
            });
//            gestion des onglets pour ne pas avoir de rédondance d'id et assurer le bon fonctionnement des onglets
            $tabs = $dest.find('.tab-pane');
            $tabs.each(function () {
                $dest.find('li [href="#' + $(this).attr('id') + '"]').attr('href', '#' + $(this).attr('id') + prefixe);
                $(this).attr('id', $(this).attr('id') + prefixe);
            });
//            fin gestion des onglets
            return $dest;
        }
        function afficherModaleModifierRemiseClef(index) {
            var $remiseClefModal = $('#remiseClefModal');
            $form = $('#formRemiseClef_' + index + ' div:first');
            $copy = cloneFormulaire($form);
            $('#modal-remise-clef-error').html('');
            $remiseClefModal.find('#contenuAjoutRemiseClef').html('');
            $('#contenuAjoutRemiseClef').append($copy);
            $('#ajouterRemiseClef').css('display', 'none');
            $('#modifierRemiseClef').attr('data-index', index).css('display', '');
            $remiseClefModal.find('.modal-title').html('{{ 'remise.clef.modifier' | trans }}');
            $remiseClefModal.modal('show');

        }
        function afficherModaleAjouterRemiseClef() {
//            var i = 0;
            var active = '';
            var traduction = '';
            var $remiseClefs = $('#remiseClefs');
            var $remiseClefModal = $('#remiseClefModal');
            var index = $remiseClefs.attr('data-nb-remise-clef');
            var prototype = $remiseClefs.attr('data-prototype');
            var prototypeTraduction = $remiseClefs.attr('data-prototype-traduction');
            $('#modal-remise-clef-error').html('');
//            gestion des langues et création du formulaire à partir du prototype
            prototype = prototype.replace(/__name__/g, index);

//            mise en forme de la traduction
            for (i = 0; i < _langues.length; i++) {
                if (i == 0) {
                    active = 'active';
                } else {
                    active = '';
                }
                traduction += prototypeTraduction.replace(/__idRemiseClef__/g, 'fournisseur_remiseClefs_' + index).replace(/__indexLangue__/g, i).replace(/__name__/g, index).replace(/__tradname__/g, i).replace(/__active__/g, active);
            }
            $remiseClefModal.find('#contenuAjoutRemiseClef').html(prototype);
            {#$('#fournisseur_remiseClefs_' + index + '_fournisseur option[value="{{ form.vars.value.id }}"]').attr('selected', 'selected');#}
            $('#fournisseur_remiseClefs_' + index + '_fournisseur option[value="{{ form.vars.value.id }}"]').prop('selected', true);
            $('#fournisseur_remiseClefs_' + index + '_traductions').append(traduction);

//            selection de la langue
            for (i = 0; i < _langues.length; i++) {
                $('#fournisseur_remiseClefs_' + index + '_traductions').find('#fournisseur_remiseClefs_' + index + '_traductions_' + i + '_langue option[value="' + _langues[i].id + '"]').attr('selected', 'selected');
            }
            $('#ajouterRemiseClef').attr('data-index', index).css('display', '');
            $('#modifierRemiseClef').css('display', 'none');
            $remiseClefModal.find('.modal-title').html('{{ 'remise.clef.ajouter' | trans }}');
            $remiseClefModal.modal().show();
        }
        function ajouterRemiseClef() {

            if (remiseClefValidation() == true) {
                var index = $('#ajouterRemiseClef').attr('data-index');
//                var $remiseClef = $('#fournisseur_remiseClefs_' + index);
                var $remiseClef = $('#remiseClefs');
                var $remiseClefModal = $('#remiseClefModal');
                var contenuRemiseClef =
                        '<div class="row" id="contenuRemiseClef_' + index + '"><div class="col-sm-12"><div class="col-sm-10" id="remiseClef_' + index + '_libelle" >' + $('#fournisseur_remiseClefs_' + index + '_libelle').val() + '</div><div class="col-sm-2"><button class="btn btn-default" type="button" onclick="afficherModaleModifierRemiseClef(' + index + ');"><span class="glyphicon glyphicon-edit"></span></button> <button class="btn btn-default" type="button" onclick="supprimerRemiseClef(' + index + ');"><span class="glyphicon glyphicon-trash"></span></button></div><div id="formRemiseClef_' + index + '" style="display:none;"></div></div></div>';
                $remiseClef.append($(contenuRemiseClef));
                $('#formRemiseClef_' + index).append($remiseClefModal.find('#contenuAjoutRemiseClef div:first'));
                $remiseClef.attr('data-nb-remise-clef', (parseInt(index) + 1));
                $remiseClefModal.modal('hide');
            } else {
                $('#modal-remise-clef-error').html('<div class="alert alert-danger">renseigner les champs obligatoires</div>');
            }
        }
        function remiseClefValidation() {
            var valide = true;
            $('#remiseClefModal').find('[required="required"]').each(function () {
                if ($(this).val() == '') {
                    $(this).attr('style', 'border: 1px solid red;');
                    valide = false;
                }
            });
            return valide;
        }
        function refuserToucheEntree(event) {
            // Compatibilité IE / Firefox
            if (!event && window.event) {
                event = window.event;
            }
            // IE
            if (event.keyCode == 13) {
                event.returnValue = false;
                event.cancelBubble = true;
            }
            // DOM
            if (event.which == 13) {
                event.preventDefault();
                event.stopPropagation();
            }
        }

        function afficherModalInterlocuteur(element) {
            var $formInterlocuteur = $('#form-interlocuteur');
            var formProtoype = $formInterlocuteur.data('prototype');
            var interlocuteurIndex = $formInterlocuteur.data('interlocuteur-index');
            var newForm = formProtoype.replace(/__name__/g, interlocuteurIndex);
            $formInterlocuteur.html(newForm);

            var $moyenComsInterlocuteur = $('#fournisseur_interlocuteurs_' + interlocuteurIndex + '_interlocuteur_moyenComs');

            var formMoyenComAdressePrototype = $formInterlocuteur.data('prototype_moyen_coms_adresse');
            var newformMoyenComAdresse = formMoyenComAdressePrototype.replace(/__name__/g, interlocuteurIndex);
            newformMoyenComAdresse = newformMoyenComAdresse.replace(/__mycom_name__/g, 4);
            $moyenComsInterlocuteur.html(newformMoyenComAdresse);

            var formMoyenComTel1Prototype = $formInterlocuteur.data('prototype_moyen_coms_tel1');
            var newformMoyenComTel1 = formMoyenComTel1Prototype.replace(/__name__/g, interlocuteurIndex);
            newformMoyenComTel1 = newformMoyenComTel1.replace(/__mycom_name__/g, 2);
            newformMoyenComTel1 = newformMoyenComTel1.replace(/__number__/g, 1);
            $moyenComsInterlocuteur.append(newformMoyenComTel1);

            var formMoyenComTel2Prototype = $formInterlocuteur.data('prototype_moyen_coms_tel2');
            var newformmoyenComsFixe2 = formMoyenComTel2Prototype.replace(/__name__/g, interlocuteurIndex);
            newformmoyenComsFixe2 = newformmoyenComsFixe2.replace(/__mycom_name__/g, 3);
            newformmoyenComsFixe2 = newformmoyenComsFixe2.replace(/__number__/g, 2);
            $moyenComsInterlocuteur.append(newformmoyenComsFixe2);

            var formMoyenComMobilePrototype = $formInterlocuteur.data('prototype_moyen_coms_mobile');
            var newformmoyenComsMobile = formMoyenComMobilePrototype.replace(/__name__/g, interlocuteurIndex);
            newformmoyenComsMobile = newformmoyenComsMobile.replace(/__mycom_name__/g, 1);
            $moyenComsInterlocuteur.append(newformmoyenComsMobile);

            var formMoyenComMailPrototype = $formInterlocuteur.data('prototype_moyen_coms_mail');
            var newformMoyenComMail = formMoyenComMailPrototype.replace(/__name__/g, interlocuteurIndex);
            newformMoyenComMail = newformMoyenComMail.replace(/__mycom_name__/g, 0);
            $moyenComsInterlocuteur.append(newformMoyenComMail);

            $formInterlocuteur.find('input').each(function (index, item) {
                $(item).keypress(function (event) {
                    refuserToucheEntree(event);
                });
            });

            var button = $(element); // Button that triggered the modal

            var service = button.data('service-libelle'); // Extract info from data-* attributes
            var service_id = button.data('service-id'); // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $('#interlocuteurModal');

            $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" class="btn btn-primary">Ajouter un interlocuteur</button>'));
//                $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">Ajouterun interlocuteur</button>'));
            modal.find('.modal-title').text('Nouvel intelocuteur pour le service ' + service);
            modal.find('.modal-body [id$="service"]').val(service_id);
            modal.modal().show();
        }

        function testPassword(interlocuteur) {
            if (interlocuteur.plainPasswordFirst != interlocuteur.plainPasswordSecond) {
                alert("Password and Confirm Password don't match");
                return false;
            }
            return true;
        }

        function ajouterInterlocuteur() {

            var interlocuteur = getDataIntelocuteurModal();

            if (!testRequired()) {
                return false;
            }

            var $interlocuteurModal = $('#interlocuteurModal');

            $interlocuteurModal.modal('hide');

            var fonction = '';
            if (interlocuteur.fonction) {
                fonction = $interlocuteurModal.find('.modal-body [id$="fonction"] option[value=\'' + interlocuteur.fonction + '\']').text();
            }

            var $formInterlocuteur = $('#form-interlocuteur');
            var index = $formInterlocuteur.data('interlocuteur-index');

            var buttonModifie = '<button  onclick="afficherModalModificationInterlocuteur(' + index + ');" type=\'button\' class=\'btn btn-default\'><span class=\'glyphicon glyphicon-edit\' aria-hidden=\'true\'></span></button>';

            var $addInterlocuteur = $('<td>' + interlocuteur.prenom + ' ' + interlocuteur.nom + '</td><td>' + fonction + '</td><td>' + buttonModifie + ' ' + getButtonSupprimer(index) + '</td>');
            var $newLigne = $('<tr id="row_interlocuteur_' + index + '" class="success"></tr>').append($addInterlocuteur);
            $('#service_' + interlocuteur.service).append($newLigne);

            var $valuesInterlocuteur = $('#values-interlocuteurs');

            $valuesInterlocuteur.append($formInterlocuteur.html());

            setValuesInterlocuteur(interlocuteur, index);

            $formInterlocuteur.data('interlocuteur-index', index + 1);
        }

        function afficherModalModificationInterlocuteur(index) {
            var $interlocuteurModal = $('#interlocuteurModal');
            var $divFournisseurInterlocuteur = $('#fournisseur_interlocuteurs_' + index + '_interlocuteur');

            var interlocuteur = {
                prenom: $divFournisseurInterlocuteur.find('[id$="_prenom"]').val(),
                nom: $divFournisseurInterlocuteur.find('[id$="_nom"]').val(),
                fonction: $divFournisseurInterlocuteur.find('[id$="_fonction"]').val(),
                service: $divFournisseurInterlocuteur.find('[id$="_service"]').val(),
                email: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_0_adresse"]').val(),
                tel1: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_2_numero"]').val(),
                tel2: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_3_numero"]').val(),
                codePostal: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_code_postal"]').val(),
                adresse1: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_adresse1"]').val(),
                adresse2: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_adresse2"]').val(),
                adresse3: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_adresse3"]').val(),
                ville: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_ville"]').val(),
                pays: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_pays"]').val(),
                latitude: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_coordonnee_gps_latitude"]').val(),
                longitude: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_coordonnee_gps_longitude"]').val(),
                precis: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_4_coordonnee_gps_precis"]').val(),
                mobile: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_1_numero"]').val(),
                smsing: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_moyenComs_1_smsing"]').val(),
                plainPasswordFirst: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_user_plainPassword"]').val()
//                plainPasswordFirst: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_user_plainPassword_first"]').val(),
//                plainPasswordSecond: $divFournisseurInterlocuteur.find('[id$="_interlocuteur_user_plainPassword_second"]').val(),
            };


            var service = '';
            if (interlocuteur.service) {
                service = $divFournisseurInterlocuteur.find('[id$="service"] option[value=\'' + interlocuteur.service + '\']').text();
            }
            $interlocuteurModal.find('.modal-title').text('Modifier interlocuteur pour le service ' + service);

            $divFournisseurInterlocuteurClone = $divFournisseurInterlocuteur.clone();

            $formInterlocuteur = $('#form-interlocuteur');
            $formInterlocuteur.html($divFournisseurInterlocuteurClone);

            $formInterlocuteur.find('input, select').each(function (index, item) {
                $(item).attr('style', 'border: 1px solid #cccccc;');
                $(item).keypress(function (event) {
                    refuserToucheEntree(event);
                });
            });

            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_prenom"]').val(interlocuteur.prenom);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_nom"]').val(interlocuteur.nom);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_fonction"]').val(interlocuteur.fonction);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_service"]').val(interlocuteur.service);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_0_adresse"]').val(interlocuteur.email);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_2_numero"]').val(interlocuteur.tel1);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_3_numero"]').val(interlocuteur.tel2);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_code_postal"]').val(interlocuteur.codePostal);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse1"]').val(interlocuteur.adresse1);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse2"]').val(interlocuteur.adresse2);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse3"]').val(interlocuteur.adresse3);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_ville"]').val(interlocuteur.ville);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_pays"]').val(interlocuteur.pays);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_latitude"]').val(interlocuteur.latitude);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_longitude"]').val(interlocuteur.longitude);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_precis"]').val(interlocuteur.precis);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_1_numero"]').val(interlocuteur.mobile);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_1_smsing"]').val(interlocuteur.smsing);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword"]').val(interlocuteur.plainPasswordFirst);
//            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword_first"]').val(interlocuteur.plainPasswordFirst);
//            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword_second"]').val(interlocuteur.plainPasswordSecond);

            $('#enregistrer_interlocuteur').replaceWith($('<button id="enregistrer_interlocuteur" type="button" class="btn btn-primary" onclick="modifierInterlocuteur(\'' + index + '\');">Modifer cet interlocuteur</button>'));

            $interlocuteurModal.modal('show');
        }

        function modifierInterlocuteur(index) {
            var interlocuteur = getDataIntelocuteurModal();

            if (!testRequired()) {
                return false;
            }
            var $interlocuteurModal = $('#interlocuteurModal');

            $interlocuteurModal.modal('hide');

            var fonction = '';
            if (interlocuteur.fonction) {
                fonction = $interlocuteurModal.find('.modal-body [id$="fonction"] option[value=\'' + interlocuteur.fonction + '\']').text();
            }

            var buttonModifie = '<button onclick="afficherModalModificationInterlocuteur(' + index + ');" id=\'modifie_interlocuteur_' + index + '\' \' type=\'button\' class=\'btn btn-default\'><span class=\'glyphicon glyphicon-edit\' aria-hidden=\'true\'></span></button>';

            var $addInterlocuteur = $('<td>' + interlocuteur.prenom + ' ' + interlocuteur.nom + '</td><td>' + fonction + '</td><td>' + buttonModifie + ' ' + getButtonSupprimer(index) + '</td>');
            var $newLigne = $('<tr id="row_interlocuteur_' + index + '" class="success"></tr>').append($addInterlocuteur);
            $('#row_interlocuteur_' + index).remove();
            $('#service_' + interlocuteur.service).append($newLigne);

            setValuesInterlocuteur(interlocuteur, index);

            $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" class="btn btn-primary">Ajouterun interlocuteur</button>'));
        }

        function supprimerInterlocuteur(index) {
            $('#row_interlocuteur_' + index).remove();
            $('#fournisseur_interlocuteurs_' + index + '_interlocuteur').remove();
        }

        function getButtonSupprimer(index) {
            return '<button onclick="supprimerInterlocuteur(' + index + ');" type=\'button\' class=\'btn btn-default\'><span class=\'glyphicon glyphicon-trash\' aria-hidden=\'true\'></span></button>';
        }

        function getDataIntelocuteurModal() {
            var $interlocuteurModal = $('#interlocuteurModal');

            var interlocuteur = {
                prenom: $interlocuteurModal.find('.modal-body [id$="_prenom"]').val(),
                nom: $interlocuteurModal.find('.modal-body [id$="_nom"]').val(),
                fonction: $interlocuteurModal.find('.modal-body [id$="_fonction"]').val(),
                service: $interlocuteurModal.find('.modal-body [id$="_service"]').val(),
                email: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_0_adresse"]').val(),
                tel1: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_2_numero"]').val(),
                tel2: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_3_numero"]').val(),
                codePostal: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_code_postal"]').val(),
                adresse1: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_adresse1"]').val(),
                adresse2: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_adresse2"]').val(),
                adresse3: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_adresse3"]').val(),
                ville: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_ville"]').val(),
                pays: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_pays"]').val(),
                latitude: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_coordonnee_gps_latitude"]').val(),
                longitude: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_coordonnee_gps_longitude"]').val(),
                precis: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_4_coordonnee_gps_precis"]').val(),
                mobile: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_1_numero"]').val(),
                smsing: $interlocuteurModal.find('.modal-body [id$="_interlocuteur_moyenComs_1_smsing"]').val(),
                plainPasswordFirst: $interlocuteurModal.find('[id$="_interlocuteur_user_plainPassword"]').val()
//                plainPasswordFirst: $interlocuteurModal.find('[id$="_interlocuteur_user_plainPassword_first"]').val(),
//                plainPasswordSecond: $interlocuteurModal.find('[id$="_interlocuteur_user_plainPassword_second"]').val()
            };

            return interlocuteur;
        }

        function setValuesInterlocuteur(interlocuteur, index) {
            var $valuesInterlocuteur = $('#values-interlocuteurs');

            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_prenom"]').val(interlocuteur.prenom);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_nom"]').val(interlocuteur.nom);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_fonction"]').val(interlocuteur.fonction);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_service"]').val(interlocuteur.service);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_0_adresse"]').val(interlocuteur.email);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_2_numero"]').val(interlocuteur.tel1);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_3_numero"]').val(interlocuteur.tel2);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_code_postal"]').val(interlocuteur.codePostal);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse1"]').val(interlocuteur.adresse1);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse2"]').val(interlocuteur.adresse2);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_adresse3"]').val(interlocuteur.adresse3);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_ville"]').val(interlocuteur.ville);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_pays"]').val(interlocuteur.pays);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_latitude"]').val(interlocuteur.latitude);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_longitude"]').val(interlocuteur.longitude);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_4_coordonnee_gps_precis"]').val(interlocuteur.precis);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_1_numero"]').val(interlocuteur.mobile);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_moyenComs_1_smsing"]').val(interlocuteur.smsing);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword"]').val(interlocuteur.plainPasswordFirst);
//            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword_first"]').val(interlocuteur.plainPasswordFirst);
//            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_user_plainPassword_second"]').val(interlocuteur.plainPasswordSecond);
        }


        var $fournisseur_fournisseurParent = $('#fournisseur_fournisseurParent');

        $fournisseur_fournisseurParent.on('change', function (event) {
            var optionVal = $(event.target).find(":selected").val();
            fournisseurParentSelect(optionVal);
        });

        function fournisseurParentSelect(optionVal) {

            var $fournisseur_contient = $('#fournisseur_contient');
            var $interlocuteur_panels = $('#interlocuteur_panels');
            if (optionVal) {
                $interlocuteur_panels.hide();
                $fournisseur_contient.val(1);
                $fournisseur_contient.find('option:not(:selected)').prop('disabled', 'disabled');
                var $values_interlocuteurs = $('#values-interlocuteurs');
                $values_interlocuteurs.children().each(function (index, element) {
                    var index = element.id.split('_')[2];
                    $('#row_interlocuteur_' + index).remove();
                });
                $values_interlocuteurs.html("");
            }
            else {
                $interlocuteur_panels.show();
                $fournisseur_contient.find('option:not(:selected)').prop('disabled', false);
            }
        }

        var optionVal = $fournisseur_fournisseurParent.find(":selected").val();
        fournisseurParentSelect(optionVal);

        function testRequired() {

            fail = false;
            fail_tab = [];

            $('#form-interlocuteur').find('select, textarea, input, [type="email"]').each(function () {
                if (!$(this).prop('required')) {

                } else {
                    if (!$(this).val()) {
                        fail = true;
                        fail_tab.push($(this));
                    }
                    else {
                        $(this).attr('style', 'border: 1px solid green;');
                    }
                }
            });
            // test email qui deviendra l'username de l'interlocuteur
            var $email = $('#form-interlocuteur').find('[type="email"]');

            if (!$email.val() || !isValidEmailAddress($email.val())) {
                fail = true;
                fail_tab.push($email);
            }
            else {
                $email.attr('style', 'border: 1px solid green;');
            }

            //submit if fail never got set to true
            if (!fail) {
                //process form here.
                return true;
            } else {
                var first = true;
                fail_tab.forEach(function ($item) {
                    if (first) {
                        $item.focus();
                        first = false;
                    }
                    // do something with `item`
//                    console.log($item);
                    $item.attr('style', 'border: 1px solid red;')
                });
                return false;
            }
        }
    </script>
    <script type="text/javascript">
        function updatePrestationAnnexe( fournisseurId , element) {
            $element = $(element);
            $(element).find('input:checkbox').each(function () {
                var famillePrestationAnnexeId = $(this).val();
                var $famillePrestationAnnexe = $('#famillePrestationAnnexe_' + famillePrestationAnnexeId);
                if ($(this).is(':checked')) {
                    var path = "{{ path('fournisseur_get_prestation_annexes' ,{'famillePrestationAnnexeId': '_famillePrestationAnnexeId_','fournisseurId': '_fournisseurId_'}) }}";
                    path = path.replace(/_famillePrestationAnnexeId_/g, famillePrestationAnnexeId);
                    path = path.replace(/_fournisseurId_/g, fournisseurId);
//                    if($famillePrestationAnnexe.is(':hidden')) {
                    if ($famillePrestationAnnexe.css('display') == 'none') {
                        $.ajax(path,
                                {
                                    method: 'GET'
                                }
                        ).done(function (data) {
                            $("#famillePrestationAnnexeBody_" + famillePrestationAnnexeId).html(data);
                            $famillePrestationAnnexe.show();
                        });
                    }
                }
                else {
                    $("#famillePrestationAnnexeBody_" + famillePrestationAnnexeId).html('');
                    $famillePrestationAnnexe.hide();
                    $famillePrestationAnnexe.find('input:checkbox').prop('checked', false);
                }
            });
        }

        function checkPrestatioAnnexe(element, test) {
            var $element = $(element);
            $test = $('#' + test);
            $test.find('input:checkbox').prop('checked', $element.prop("checked"));
        }

        function displayEditPrestationAnnexe(element){
            var $element = $(element);
            var prestationAnnexeId = $element.val();
            var fournisseurId = $element.data('fournisseur_id');
            var $form_prestation_annexe =$("#form_prestation_annexe");
            var $prestationAnnexeModal = $('#prestationAnnexeModal');
            $editPrestationAnnexe   = $('#edit_prestation_annexe_' + prestationAnnexeId);
            if ($element.is(':checked')) {
                if($('#fournisseur_prestationAnnexes_'+prestationAnnexeId).length != 1) {
                    var path = getPathFournisseurPrestationAnnexeForm(fournisseurId, prestationAnnexeId);

                    $.ajax(path,
                        {
                            async: false,
                            method: 'GET'
                        }
                    ).done(function (data) {
                        $form_prestation_annexe.html(data);
                        $prestationAnnexeModal.modal();
                        $prestationAnnexeModal.unbind( "hide.bs.modal" );
                        $prestationAnnexeModal.on('hide.bs.modal', function (e) {
                            $prestationAnnexeModal.unbind( "hide.bs.modal" );
                            $('#fournisseur_prestationAnnexes_'+prestationAnnexeId).remove();
                            $element.prop('checked', false);
                            $editPrestationAnnexe.hide();
                        });

                        var $enregistrer_prestation_annexe = $('#enregistrer_prestation_annexe');
                        $enregistrer_prestation_annexe.unbind( "click" );
                        $enregistrer_prestation_annexe.on('click' , function (){
                            enregisterPrestationAnnexe(prestationAnnexeId)
                        });
                    });
                }
                $editPrestationAnnexe.show();
            }else{
                $editPrestationAnnexe.hide();
                $('#fournisseur_prestationAnnexes_'+prestationAnnexeId).remove();
            }
        }

        $(".chekbox_prestation_annexe").each(function(index, element){
            displayEditPrestationAnnexe(element);
        });

        function getPathFournisseurPrestationAnnexeForm(fournisseurId, prestationAnnexeId){
            var path = "{{ path('fournisseur_get_fournisseur_prestation_annexe_form' ,{'prestationAnnexeId': '_prestationAnnexeId_' , 'fournisseurId': '_fournisseurId_'}) }}";
            path = path.replace(/_prestationAnnexeId_/g, prestationAnnexeId);
            path = path.replace(/_fournisseurId_/g, fournisseurId);
            return path;
        }

        function getFournisseurPrestationAnnexeForm(fournisseurId, prestationAnnexeId ){
            var $fournisseurPrestationAnnexe = $('#fournisseur_prestationAnnexes_' + prestationAnnexeId);
            var path = getPathFournisseurPrestationAnnexeForm(fournisseurId, prestationAnnexeId);
            var $prestationAnnexeModal = $('#prestationAnnexeModal');
            var $form_prestation_annexe =$("#form_prestation_annexe");

            if($fournisseurPrestationAnnexe.length > 0){
                $form_prestation_annexe.html($fournisseurPrestationAnnexe);
            }else{
                $.ajax(path,
                    {
                        async: false,
                        method: 'GET'
                    }
                ).done(function (data) {
                    $form_prestation_annexe.html(data);
                });
            }

            $prestationAnnexeModal.modal();

            $prestationAnnexeModal.unbind( "hide.bs.modal" );
            $prestationAnnexeModal.on('hide.bs.modal', function(event){
                $prestationAnnexeModal.unbind( "hide.bs.modal" );
                if($fournisseurPrestationAnnexe.data('id'))
                {
                    // on doit recharger les données et les mettre dans le form
                    $.ajax(path,
                            {
                                async: false,
                                method: 'GET'
                            }
                    ).done(function (data) {
                        $('#fournisseur_prestationAnnexes_'+prestationAnnexeId).remove();
                        $('#values_prestation_annexe').append(data);
                    });
                }
                else{
                    $('#fournisseur_prestationAnnexes_'+prestationAnnexeId).remove();
                    $('#prestation_annexe_'+prestationAnnexeId).prop('checked', false);
                    $('#edit_prestation_annexe_' + prestationAnnexeId).hide();
                }
            });
            // ** lorsque l'on clique sur enregistrer **
            var $enregistrer_prestation_annexe = $('#enregistrer_prestation_annexe');
            $enregistrer_prestation_annexe.unbind( "click" );
            $enregistrer_prestation_annexe.on('click' , function (){
                enregisterPrestationAnnexe(prestationAnnexeId)
            });
        }

        (function($){
            $.fn.serializeObject = function(){

                var self = this,
                        json = {},
                        push_counters = {},
                        patterns = {
                            "validate": /^[a-zA-Z][a-zA-Z0-9_]*(?:\[(?:\d*|[a-zA-Z0-9_]+)\])*$/,
                            "key":      /[a-zA-Z0-9_]+|(?=\[\])/g,
                            "push":     /^$/,
                            "fixed":    /^\d+$/,
                            "named":    /^[a-zA-Z0-9_]+$/
                        };


                this.build = function(base, key, value){
                    base[key] = value;
                    return base;
                };

                this.push_counter = function(key){
                    if(push_counters[key] === undefined){
                        push_counters[key] = 0;
                    }
                    return push_counters[key]++;
                };

                $.each($(this).serializeArray(), function(){

                    // skip invalid keys
                    if(!patterns.validate.test(this.name)){
                        return;
                    }

                    var k,
                            keys = this.name.match(patterns.key),
                            merge = this.value,
                            reverse_key = this.name;

                    while((k = keys.pop()) !== undefined){

                        // adjust reverse_key
                        reverse_key = reverse_key.replace(new RegExp("\\[" + k + "\\]$"), '');

                        // push
                        if(k.match(patterns.push)){
                            merge = self.build([], self.push_counter(reverse_key), merge);
                        }

                        // fixed
                        else if(k.match(patterns.fixed)){
                            merge = self.build([], k, merge);
                        }

                        // named
                        else if(k.match(patterns.named)){
                            merge = self.build({}, k, merge);
                        }
                    }

                    json = $.extend(true, json, merge);
                });

                return json;
            };
        })(jQuery);

        function enregisterPrestationAnnexe(prestationAnnexeId){
            var $myForm = $('#form_prestation_annexe');
            if (!$myForm[0].checkValidity()) {
                $('<input type="submit">').hide().appendTo($myForm).click().remove();
                return false;
            }
            else {
                var $prestationAnnexeModal = $('#prestationAnnexeModal');
                var $fournisseur_prestationAnnexes = $('#fournisseur_prestationAnnexes_'+prestationAnnexeId);
                var fournisseurId = $prestationAnnexeModal.data('fournisseur-id');
                var fournisseurPrestationAnnexeId = $fournisseur_prestationAnnexes.data('id');
                var $data = $('#form_prestation_annexe').serializeObject();
//                console.log($data);

                var path = '{{ path("fournisseur_enregistrer_fournisseur_prestation" ,{ "id": "_fournisseurId_","prestationAnnexeId": "_prestationAnnexeId_"}) }}';

                path = path.replace(/_fournisseurId_/g, fournisseurId);
                path = path.replace(/_prestationAnnexeId_/g, prestationAnnexeId);

                $.post(path,{
                    data : JSON.stringify($data)
                },function(){
//                    $('#values_prestation_annexe').append($('#fournisseur_prestationAnnexes_'+prestationAnnexeId));
                    $prestationAnnexeModal.modal('hide');
                },'json');
//                $('#values_prestation_annexe').append($('#fournisseur_prestationAnnexes_'+prestationAnnexeId));
//                $prestationAnnexeModal.unbind( "hide.bs.modal" );
//                $prestationAnnexeModal.modal('hide');
                return true;
            }
        }

        function displayCapaciteSejour(elementId){
            $element = $("#" +elementId);
            $buttonEdit     = $("#" +elementId + '_edit');
            $buttonRemove = $("#" +elementId + '_remove');
            if($element.is(":visible")){
                $element.hide();
                $buttonRemove.hide();
                $buttonEdit.show();
                $element.find(':input').each(function(index,input){
                    $(input).val('');
                })
            }
            else{
                $element.show();
                $buttonEdit.hide();
                $buttonRemove.show();
            }
        }

    </script>
    <script>

        function addTagForm($collectionHolder, $newLinkLi , name) {
            var prototype = $collectionHolder.data('prototype');
            var index = $collectionHolder.data('index');
//            var newForm = prototype.replace(/__name__/g, index);
            var regex = new RegExp(name, 'g');
            var newForm = prototype.replace( regex , index);
            $collectionHolder.data('index', index + 1);
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
            addTagFormDeleteLink($newFormLi);
            periodevaliditeDatetimePicker();
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#">Supprimer</a>');
            $tagFormLi.append($removeFormA);
            $removeFormA.on('click', function(e) {
                e.preventDefault();
                $tagFormLi.remove();
            });
        }

        {% for prestationAnnexe in fournisseur.prestationAnnexes %}
            {% set index = prestationAnnexe.prestationAnnexe.id %}

            var $collectionHolder{{ index }};
            var $addTagLink{{ index }} = $('<a href="#" class="add_tarif_link">Ajouter</a>');
            var $newLinkLi{{ index }} = $('<li></li>').append($addTagLink{{ index }});
            $collectionHolder{{ index }} = $('ul.tarifs{{ index }}');
            $collectionHolder{{ index }}.find('.li_tarif').each(function() {
                addTagFormDeleteLink($(this));
            });
            $collectionHolder{{ index }}.append($newLinkLi{{ index }});
            $collectionHolder{{ index }}.data('index', $collectionHolder{{ index }}.find('.li_tarif').length);
            $addTagLink{{ index }}.on('click', function(e) {
                e.preventDefault();
                addTagForm($collectionHolder{{ index }}, $newLinkLi{{ index }} , '__name__');
            });

            {% for key, tarif in prestationAnnexe.tarifs %}
                {% set name = key %}
                var $collectionHolderperiode_validite{{ name }}{{ index }};
                var $addTagLinkperiode_validite{{ name }}{{ index }} = $('<a href="#" class="add_periode_validite_link">Ajouter</a>');
                var $newLinkLiperiode_validite{{ name }}{{ index }} = $('<li></li>').append($addTagLinkperiode_validite{{ name }}{{ index }});
                $collectionHolderperiode_validite{{ name }}{{ index }} = $('ul.periode_validites{{ name }}{{ index }}');
                $collectionHolderperiode_validite{{ name }}{{ index }}.find('.li_periode_validite').each(function() {
                    addTagFormDeleteLink($(this));
                });
                $collectionHolderperiode_validite{{ name }}{{ index }}.append($newLinkLiperiode_validite{{ name }}{{ index }});
                $collectionHolderperiode_validite{{ name }}{{ index }}.data('index', $collectionHolderperiode_validite{{ name }}{{ index }}.find('.li_periode_validite').length);
                $addTagLinkperiode_validite{{ name }}{{ index }}.on('click', function (e) {
                    e.preventDefault();
                    addTagForm($collectionHolderperiode_validite{{ name }}{{ index }}, $newLinkLiperiode_validite{{ name }}{{ index }} , '__periode_validite_name__');
                });
            {% endfor %}

        {% endfor %}

        function periodevaliditeDatetimePicker(){

            $('.datetimepicker').datetimepicker({
                format: 'dd/mm/yyyy - hh:ii',
                autoclose: true,
                todayBtn: true,
                startDate: 'today',
                pickerPosition: "top-right",
                language: 'fr',
//                wheelViewModeNavigationInverseDirection: true,
                minuteStep: 30
            }).on('hide', function(e){
                return false;
            });
        }
        periodevaliditeDatetimePicker();

    </script>
    <script  type="text/javascript">
        $('form[name=fournisseur]').bind('submit', function(e){
            var $field = $('#fournisseur_types');
            var val = [];
            $("input[name='fournisseur[types][]']:checked").each(function(i){
                val[i] = $(this).val();
            });
            if (val.length === 0) {
                $('#alert_type').show();
                e.preventDefault();
            }
        });

        function chargerAffectations(element){
            $element = $(element);
            prestationAnnexeId = $element.data('prestation-annexe-id');
            $radioVal = $element.find('input:checked').val();
            var elementId = $element.attr('id');
            var fournisseurId = '{{ fournisseur.id }}';
            var path = "{{ path('fournisseur_get_fournisseur_prestation_annexe_affectation' ,{
                'affectation': '_affectation_' ,
                'prestationAnnexeId' : '_prestationAnnexeId_',
                'prestationAnnexeId' : '_prestationAnnexeId_',
                'fournisseurId': '_fournisseurId_' ,
            }) }}";
            path = path.replace(/_prestationAnnexeId_/g, prestationAnnexeId);
            path = path.replace(/_fournisseurId_/g, fournisseurId);
            switch ($radioVal){
                case '1':
                    path = path.replace(/_affectation_/g, 'station');
                    break;
                case '2':
                    path = path.replace(/_affectation_/g, 'fournisseur');
                    break;
                default:
                    break;
            }

            $.ajax(path,
                {
                    async: false,
                    method: 'GET'
                }
            ).done(function (data) {
                $('#div_affectation_'+elementId).html(data);
            });
        }

        function chargerAffectationStationFournisseurs(prestationAnnexeId, siteId , stationId){
            var path ;

            var templateStationId = '';
            var fournisseurId = '{{ fournisseur.id }}';

            path = "{{ path('fournisseur_get_fournisseur_prestation_annexe_affectation_station_fournisseur' ,{
                'prestationAnnexeId' : '_prestationAnnexeId_',
                'siteId': '_siteId_' ,
                'stationId': '_stationId_' ,
                'fournisseurId': '_fournisseurId_' ,
            }) }}";

            path = path.replace(/_stationId_/g, stationId);

            path = path.replace(/_prestationAnnexeId_/g, prestationAnnexeId);
            path = path.replace(/_siteId_/g, siteId);
            path = path.replace(/_fournisseurId_/g, fournisseurId);
            if($('#collapse_station_'+prestationAnnexeId+"_"+siteId+"_"+ stationId  ).is(':hidden')){
                $.ajax(path,
                        {
                            async: false,
                            method: 'GET'
                        }
                ).done(function (data) {
                    $('#collapse_station_'+prestationAnnexeId+"_"+siteId+"_"+ stationId  ).html(data);
                });
            }
        }

        function chargerHebergements(prestationAnnexeId, siteId , fournisseurId , stationId  ){
//            $('#collapse_fournisseur_' + fournisseurId).collapse();
            var path ;

            var templateStationId = '';

            var fournisseurCurrentId = '{{ fournisseur.id }}';
            if(stationId !== undefined && stationId !== null){

                path = "{{ path('fournisseur_get_fournisseur_prestation_annexe_affectation_hebergement' ,{
                    'prestationAnnexeId' : '_prestationAnnexeId_',
                    'siteId': '_siteId_' ,
                    'fournisseurId': '_fournisseurId_' ,
                    'stationId': '_stationId_' ,
                    'fournisseurCurrentId': '_fournisseurCurrentId_' ,
                }) }}";

                path = path.replace(/_stationId_/g, stationId);
                path = path.replace(/_fournisseurCurrentId_/g, fournisseurCurrentId);
                templateStationId = stationId + "_";
            }
            else {
                path = "{{ path('fournisseur_get_fournisseur_prestation_annexe_affectation_hebergement' ,{
                    'prestationAnnexeId' : '_prestationAnnexeId_',
                    'siteId': '_siteId_' ,
                    'fournisseurId': '_fournisseurId_',
                    'fournisseurCurrentId': '_fournisseurCurrentId_' ,
                }) }}";
            }
            path = path.replace(/_prestationAnnexeId_/g, prestationAnnexeId);
            path = path.replace(/_siteId_/g, siteId);
            path = path.replace(/_fournisseurId_/g, fournisseurId);
            path = path.replace(/_fournisseurCurrentId_/g, fournisseurCurrentId);
            if($('#collapse_fournisseur_'+prestationAnnexeId+"_"+siteId+"_"+ templateStationId + ''+ fournisseurId ).is(':hidden')){
                $.ajax(path,
                        {
                            async: false,
                            method: 'GET'
                        }
                ).done(function (data) {
                    $('#list_hebergements_'+prestationAnnexeId+"_"+siteId+"_"+ templateStationId +''+fournisseurId).html(data);
                });
            }
        }

    </script>
    <script type="text/javascript">
        function manageSelectionPrestationAnnexeSite(prestationAnnexeId , siteId)
        {
            var sitesCkbox = $('input[name="sites_' + prestationAnnexeId + '[]"]');
            var sitesCked  = [];
            $(sitesCkbox).each(function (index , e){
                if($(this).is(':checked')){
                    sitesCked.push($(this).val());
                }
            });
            if(sitesCked.length == 1){
                return false;
            }

            $contenuOngletSite = $('#data_site_'+prestationAnnexeId+'_'+ siteId );

            $(sitesCkbox).each(function (index , e){
                $e = $(e);
                if (!$(this).is(':checked')) {
                    if ($('#onglet_data_site_'+prestationAnnexeId+'_'+ $e.val() ).hasClass('active')) {
                        $("[id^='data_site_" + prestationAnnexeId +"_]").each(function (value, element) {

                            if (!$(element).hasClass('active')) {
                                $("#onglet_" + element.id + " a").tab('show');
                                return false;
                            }
                        });
                    }
                    $("#onglet_data_site_" + prestationAnnexeId +"_" + $(this).attr('data-site-id')).hide();

                } else {
                    $("#onglet_data_site_" + prestationAnnexeId +"_" + $(this).attr('data-site-id')).show();
                }
            });

            var siteIdFirst = $('[id^="siteAEnregistrer_'+prestationAnnexeId+'_"]:checked').first().attr('data-site-id');
            $("#onglet_data_site_" + prestationAnnexeId +"_" + siteIdFirst + " a").tab('show');

            return true;
        }
    </script>
{% endblock %}