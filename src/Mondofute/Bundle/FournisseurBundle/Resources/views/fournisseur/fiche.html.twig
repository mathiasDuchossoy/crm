{% extends '::base.html.twig' %}

{% block body %}
    <section>
        <h1>
            {% block titre %}
            {% endblock %}
        </h1>
    </section>
    <section>
        {% block formulaire %}
            {% include '::flashbags.html.twig' %}
            {% set countInterlocuteur = 0 %}

            {{ form_start(form) }}
            {{ form_row(form.enseigne) }}
            {{ form_row(form.fournisseurParent) }}
            {{ form_row(form.contient) }}
            {#{{ form_row(form.remiseClefs) }}#}
            <div class="form-group ">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-11"
                                 onclick="var $remiseClefs = $('#remiseClefs');($remiseClefs.is(':visible'))?$remiseClefs.hide():$remiseClefs.show()">
                                <h3 class="panel-title">{{ form.remiseClefs.vars['label'] | trans | capitalize }}</h3>
                            </div>
                            <div class="col-sm-1">
                                <button class="btn btn-default btn-xs" type="button"
                                        onclick="afficherModaleAjouterRemiseClef()">
                                    <span class="glyphicon glyphicon-plus"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    {#{{ dump(form.remiseClefs.vars['prototype']) }}#}
                    <div class="panel-body" id="remiseClefs" data-nb-remise-clef="{{ form.remiseClefs|length }}"
                         data-prototype-traduction="
                         {% filter escape %}
        {% include '@MondofuteRemiseClef/remiseclef/prototype_traduction.html.twig' with { 'form': form.remiseClefs.vars['prototype'].traductions.vars['prototype'], 'idRemiseClef': '__idRemiseClef__', 'active':'__active__', 'indexLangue' : '__indexLangue__'} %}
    {% endfilter %}
                         "
                         data-prototype="
                    {% filter escape %}
        {% include '@MondofuteRemiseClef/remiseclef/prototype.html.twig' with { 'form': form.remiseClefs.vars['prototype'] } %}
    {% endfilter %}
                    ">
                        {% for remiseClef in form.remiseClefs %}
                            <div class="row" id="contenuRemiseClef_{{ remiseClef.vars.name }}">
                                <div class="col-sm-12">
                                    <div class="col-sm-10"
                                         id="remiseClef_{{ remiseClef.vars.name }}_libelle">{{ remiseClef.vars.value.libelle }}</div>
                                    <div class="col-sm-2">
                                        <button class="btn btn-default" type="button"
                                                onclick="afficherModaleModifierRemiseClef({{ remiseClef.vars.name }});">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                        <button class="btn btn-default" type="button"
                                                onclick="supprimerRemiseClef({{ remiseClef.vars.name }});">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </div>
                                <div id="formRemiseClef_{{ remiseClef.vars.name }}" style="display:none;">
                                    {% include '@MondofuteRemiseClef/remiseclef/prototype.html.twig' with { 'form': remiseClef } %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div class="form-group ">
                <div class="panel  panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-11"
                                 onclick="var $receptions = $('#receptions');($receptions.is(':visible'))?$receptions.hide():$receptions.show()">
                                {#{{ form_label(form.receptions) }}#}
                                <h3 class="panel-title">{{ form.receptions.vars['label'] | trans | capitalize }}</h3>
                            </div>
                            <div class="col-sm-1">
                                <button class="btn btn-default btn-xs" type="button"
                                        onclick="afficherModaleReception('add')">
                                    <span class="glyphicon glyphicon-plus"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    {#{{ dump(form.remiseClefs.vars['prototype']) }}#}
                    {#maRecetpyioType = form.reception.vars[#}
                    <div class="panel-body" id="receptions" data-nb-receptions="{{ form.receptions|length }}"
                         data-prototype="
                    {% filter escape %}
        {% include '@MondofuteFournisseur/fournisseur/prototype-reception.html.twig' with { 'form': form.receptions.vars['prototype'] } %}
    {% endfilter %}
                    "
                    >
                        {% for reception in form.receptions %}
                            <div class="row" id="contenuReception_{{ reception.vars.name }}">
                                <div class="col-sm-12">
                                    {#création de la ligne d'affichage (jour tranche1 et tranche 2#}
                                    {% set libelleReception = ('de'|trans)~' '~reception.tranche1.debut.vars.data|date('H')~('h'|trans)~reception.tranche1.debut.vars.data|date('i')~' '~('à'|trans)~' '~ reception.tranche1.fin.vars.data|date('H')~('h'|trans)~reception.tranche1.fin.vars.data|date('i') %}
                                    {% if reception.tranche2.debut.hour.vars.value != 0 or reception.tranche2.debut.minute.vars.value != 0 or reception.tranche2.fin.hour.vars.value != 0 or reception.tranche2.fin.minute.vars.value != 0 %}
                                        {% set libelleReception = libelleReception~' '~('et.de'|trans)~' '~reception.tranche2.debut.vars.data|date('H')~('h'|trans)~reception.tranche2.debut.vars.data|date('i')~' '~('à'|trans)~' '~ reception.tranche2.fin.vars.data|date('H')~('h'|trans)~reception.tranche2.fin.vars.data|date('i') %}
                                    {% endif %}
                                    <div class="col-sm-10"
                                         id="reception_{{ reception.vars.name }}_libelle">{{ ('jour.'~reception.jour.vars.value~'.libelle') | trans }} {{ libelleReception }}</div>
                                    <div class="col-sm-2">
                                        <button class="btn btn-default" type="button"
                                                onclick="afficherModaleReception('edit',{{ reception.vars.name }});">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                        <button class="btn btn-default" type="button"
                                                onclick="supprimerReception({{ reception.vars.name }});">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </div>
                                <div id="formReception_{{ reception.vars.name }}" style="display: none;">
                                    {% include '@MondofuteFournisseur/fournisseur/prototype-reception.html.twig' with { 'form': reception } %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div id="interlocuteur_panels">
                {% for serviceInterlocuteur in serviceInterlocuteurs %}
                    <div class="panel panel-primary">
                        <div class="panel-heading"><h3 class="panel-title">
                                {% for traduction in  serviceInterlocuteur.traductions %}
                                    {% if traduction.langue.code == app.request.locale %}
                                        {{ traduction.libelle }}
                                    {% endif %}
                                {% endfor %}
                            </h3></div>
                        <div class="panel-body">
                            <table class="table table-striped" id="service_{{ serviceInterlocuteur.id }}"
                                   data-service="{{ serviceInterlocuteur.id }}">
                                <tr>
                                    <th>Prénom</th>
                                    <th>Fonction</th>
                                    <th style="width: 225px;">Action</th>
                                </tr>

                                {% for  key, interlocuteur in fournisseur.interlocuteurs %}
                                    {% if interlocuteur.interlocuteur.service.id ==  serviceInterlocuteur.id %}
                                        <tr id="row_interlocuteur_{{ key }}">
                                            <td>{{ interlocuteur.interlocuteur.prenom }}</td>
                                            <td>
                                                {% for traduction in  interlocuteur.interlocuteur.fonction.traductions %}
                                                    {% if traduction.langue.code == app.request.locale %}
                                                        {{ traduction.libelle }}
                                                    {% endif %}
                                                {% endfor %}
                                            </td>
                                            <td>
                                                <button onclick="afficherModalModificationInterlocuteur( {{ key }} )"
                                                        type='button' class='btn btn-default'><span
                                                            class='glyphicon glyphicon-edit' aria-hidden='true'></span>
                                                </button>
                                                <button onclick="supprimerInterlocuteur( {{ key }} )"
                                                        type='button' class='btn btn-default'><span
                                                            class='glyphicon glyphicon-trash' aria-hidden='true'></span>
                                                </button>
                                            </td>
                                        </tr>
                                        {% set countInterlocuteur = countInterlocuteur + 1 %}
                                    {% endif %}
                                {% endfor %}
                            </table>
                            <button type="button" class="btn btn-default"
                                    data-service-libelle="{% for traduction in  serviceInterlocuteur.traductions %}{% if traduction.langue.code == app.request.locale %}{{ traduction.libelle }}{% endif %}{% endfor %}"
                                    data-service-id="{{ serviceInterlocuteur.id }}"
                                    onclick="afficherModalInterlocuteur(this);"
                            >
                                Ajouter
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            </button>
                        </div>
                    </div>
                {% endfor %}
            </div>

            {{ form_row(form.submit) }}

            {% set interlocuteurs   = form_widget( form.interlocuteurs.vars.prototype.children['interlocuteur'] ) %}

            <div id="values-interlocuteurs" style="display: none">
                {% for interlocuteur in form.interlocuteurs %}
                    {% for element in interlocuteur.children %}
                        {{ form_widget(element) }}
                    {% endfor %}
                {% endfor %}
            </div>
            {{ form_widget(form._token) }}
            {{ form_end(form, {'render_rest': false}) }}

            <div class="modal fade" id="interlocuteurModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="exampleModalLabel"></h4>
                        </div>
                        <div class="modal-body">
                            <form id="form-interlocuteur" data-interlocuteur-index="{{ countInterlocuteur }}"
                                  data-prototype="{{ interlocuteurs | e }}"
                                  class="form-horizontal">
                                {{ interlocuteurs|raw }}
                                {#{{ prenom|raw }}#}
                                {#{{ service|raw }}#}
                                {#{{ fonction|raw }}#}
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button"
                                    class="btn btn-primary">
                                {#data-dismiss="modal" class="btn btn-primary">#}
                                Ajouter
                                un interlocuteur
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="remiseClefModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="exampleModalLabel"></h4>
                        </div>
                        <div class="modal-body" id="contenuAjoutRemiseClef">

                        </div>
                        <div class="modal-body" id="modal-remise-clef-error"></div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterRemiseClef();" data-index="" id="ajouterRemiseClef" type="button"
                                    class="btn btn-primary">
                                {{ 'ajouter' | trans }}
                            </button>
                            <button onclick="modifierRemiseClef();" data-index="" id="modifierRemiseClef" type="button"
                                    class="btn btn-primary">
                                {{ 'modifier' | trans }}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="receptionModal" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="receptionModalTitre"></h4>
                        </div>
                        <div class="modal-body" id="contenuReceptionModal">

                            {% include '@MondofuteFournisseur/fournisseur/form-reception-plusieurs-jour.html.twig' with {'form' : form.reception.vars['prototype']} %}
                        </div>
                        <div class="modal-body" id="modal-reception-error"></div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                            {#<button onclick="ajouterInterlocuteur();" id="ajout_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">#}
                            <button onclick="ajouterReception();" data-index="" id="ajouterReception" type="button"
                                    class="btn btn-primary">
                                {{ 'ajouter' | trans }}
                            </button>
                            <button onclick="modifierReception();" data-index="" id="modifierReception" type="button"
                                    class="btn btn-primary">
                                {{ 'modifier' | trans }}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        {% endblock %}
    </section>
    <section>
        {% block actions %}

        {% endblock %}
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var _langues = {{ langues | serialize('json') | raw }};
        var _libelleJour = {};
        {% for i in 0..6 %}
        _libelleJour[{{ i }}] = '{{ ('jour.'~i~'.libelle') | trans }}';
        {% endfor %}
        //        Fonctions liées à la réceptions
        function supprimerReception(index) {
            $('#contenuReception_' + index).remove();
        }
        function afficherModaleReception(action, index) {
            var $btnAjouter = $('#ajouterReception');
            var $btnModifier = $('#modifierReception');
            var $modal = $('#receptionModal');
            var $titreModal = $('#receptionModalTitre');
            switch (action) {
                case 'add':
                    initModalReception();
                    $titreModal.html('{{ 'reception.ajouter' | trans }}');
                    $btnAjouter.css('display', '');
                    $btnModifier.css('display', 'none');
                    $modal.find('#jours').css('display', '');
                    break;
                case 'edit':
                    $form = $('#formReception_' + index);
                    chargerModalReception($form, index);
                    $titreModal.html('{{ 'reception.modifier' | trans }}');
                    $btnAjouter.css('display', 'none');
                    $btnModifier.css('display', '');
                    $btnModifier.attr('data-index', parseInt(index));
                    $modal.find('#jours').css('display', 'none');
                    break;
                default:
                    break;
            }

            $modal.modal('show');
        }
        function initModalReception() {
            var $contenuModal = $('#contenuReceptionModal');
//            initialise les jours
            $contenuModal.find('[name="fournisseur[reception][jour][]"]').each(function () {
                $(this).prop('checked', false);
            });
//            initialise la tranche 1
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute option').each(function () {
                $(this).prop('selected', false);
            });
//            initialise la tranche 2
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour option').each(function () {
                $(this).prop('selected', false);
            });
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute option').each(function () {
                $(this).prop('selected', false);
            });

        }
        function chargerModalReception($form, index) {
            var $contenuModal = $('#contenuReceptionModal');

//            récupération des valeurs de la réception à modifier
            var jour = $form.find('#fournisseur_receptions_' + index + '_jour').val();
            var tranche1DebutHeures = $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_hour').first().val();
            var tranche1DebutMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_minute').first().val();
            var tranche1FinHeures = $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_hour').first().val();
            var tranche1FinMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_minute').first().val();
            var tranche2DebutHeures = $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_hour').first().val();
            var tranche2DebutMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_minute').first().val();
            var tranche2FinHeures = $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_hour').first().val();
            var tranche2FinMinutes = $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_minute').first().val();

//            donne les valeurs au formulaire de la modale
//            charge le jour
            $contenuModal.find('[name="fournisseur[reception][jour][]"]').each(function () {
                if ($(this).val() == jour) {
                    $(this).prop('checked', true);
                } else {
                    $(this).prop('checked', false);
                }
            });
//            charge la tranche 1
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour option[value="' + tranche1DebutHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute option[value="' + tranche1DebutMinutes + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour option[value="' + tranche1FinHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute option[value="' + tranche1FinMinutes + '"]').prop('selected', true);
//            charge la tranche 2
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour option[value="' + tranche2DebutHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute option[value="' + tranche2DebutMinutes + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour option[value="' + tranche2FinHeures + '"]').prop('selected', true);
            $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute option[value="' + tranche2FinMinutes + '"]').prop('selected', true);
        }
        function ajouterReception() {
            var $modal = $('#receptionModal');
            var receptions = recupReceptionModal();
            for (i = 0; i < receptions.length; i++) {
                ajouterLigneReception(receptions[i]);
            }
            $modal.modal('hide');
        }
        function modifierReception() {
            var $modal = $('#receptionModal');
            var index = $('#modifierReception').attr('data-index');
            var $form = $('#formReception_' + index);
            var receptions = recupReceptionModal();
            if (receptions.length > 1) {
                alert('erreur');
            } else {
                chargerReceptionDansForm($form, receptions[0], index);
                $('#reception_' + index + '_libelle').html(formatLibelleReception(receptions[0]));
            }
//            for(i=0;i<receptions.length;i++){
//                chargerReceptionDansForm($form,receptions[i],parseInt(index)+i);
//            }
            $modal.modal('hide');
        }
        function Horaire() {
            this.heure = "";
            this.minute = "";
        }
        function TrancheHoraire() {
            this.debut = new Horaire();
            this.fin = new Horaire();
        }
        function Reception() {
            this.jour = 0;
            this.tranche1 = new TrancheHoraire();
            this.tranche2 = new TrancheHoraire();
        }
        function recupReceptionModal() {
            var $contenuModal = $('#contenuReceptionModal');
            var $jours = $contenuModal.find('[name="fournisseur[reception][jour][]"]:checked');
            var tranche1DebutHeures = $contenuModal.find('#fournisseur_reception___name___tranche1_debut_hour').val();
            var tranche1DebutMinutes = $contenuModal.find('#fournisseur_reception___name___tranche1_debut_minute').val();
            var tranche1FinHeures = $contenuModal.find('#fournisseur_reception___name___tranche1_fin_hour').val();
            var tranche1FinMinutes = $contenuModal.find('#fournisseur_reception___name___tranche1_fin_minute').val();
            var tranche2DebutHeures = $contenuModal.find('#fournisseur_reception___name___tranche2_debut_hour').val();
            var tranche2DebutMinutes = $contenuModal.find('#fournisseur_reception___name___tranche2_debut_minute').val();
            var tranche2FinHeures = $contenuModal.find('#fournisseur_reception___name___tranche2_fin_hour').val();
            var tranche2FinMinutes = $contenuModal.find('#fournisseur_reception___name___tranche2_fin_minute').val();
            var receptions = [];
            var reception = null;
            $jours.each(function () {
                reception = new Reception();
                reception.jour = $(this).val();
                reception.tranche1.debut.heure = tranche1DebutHeures;
                reception.tranche1.debut.minute = tranche1DebutMinutes;
                reception.tranche1.fin.heure = tranche1FinHeures;
                reception.tranche1.fin.minute = tranche1FinMinutes;
                reception.tranche2.debut.heure = tranche2DebutHeures;
                reception.tranche2.debut.minute = tranche2DebutMinutes;
                reception.tranche2.fin.heure = tranche2FinHeures;
                reception.tranche2.fin.minute = tranche2FinMinutes;
                receptions.push(reception);
            });
            return receptions;
        }
        function formatLibelleReception(reception) {
            var libelleTranche2 = '';
            var libelleTranche1 = ' {{ 'de' | trans }} ' + ((reception.tranche1.debut.heure.length == 1) ? '0' + reception.tranche1.debut.heure : reception.tranche1.debut.heure) + '{{ 'h'|trans }}' + ((reception.tranche1.debut.minute.length == 1) ? '0' + reception.tranche1.debut.minute : reception.tranche1.debut.minute) + ' {{ 'à'|trans }} ' + ((reception.tranche1.fin.heure.length == 1) ? '0' + reception.tranche1.fin.heure : reception.tranche1.fin.heure) + '{{ 'h'|trans }}' + ((reception.tranche1.fin.minute.length == 1) ? '0' + reception.tranche1.fin.minute : reception.tranche1.fin.minute);
            if (reception.tranche2.debut.heure != 0 || reception.tranche2.debut.minute != 0 || reception.tranche2.fin.heure != 0 || reception.tranche2.fin.minute != 0) {
                libelleTranche2 = ' {{ 'et.de' | trans }} ' + ((reception.tranche2.debut.heure.length == 1) ? '0' + reception.tranche2.debut.heure : reception.tranche2.debut.heure) + '{{ 'h'|trans }}' + ((reception.tranche2.debut.minute.length == 1) ? '0' + reception.tranche2.debut.minute : reception.tranche2.debut.minute) + ' {{ 'à'|trans }} ' + ((reception.tranche2.fin.heure.length == 1) ? '0' + reception.tranche2.fin.heure : reception.tranche2.fin.heure) + '{{ 'h'|trans }}' + ((reception.tranche2.fin.minute.length == 1) ? '0' + reception.tranche2.fin.minute : reception.tranche2.fin.minute);
            }
//            var libelle = ;
            return _libelleJour[parseInt(reception.jour)] + libelleTranche1 + libelleTranche2;
        }
        //        ajoute la ligne dans la fiche fournisseur
        function ajouterLigneReception(reception) {
            var $receptions = $('#receptions');
            var index = $receptions.attr('data-nb-receptions');
            var prototype = $receptions.attr('data-prototype');
//            var $prototype = null;
            var libelle = formatLibelleReception(reception);
            prototype = prototype.replace(/__name__/g, index);
            var $prototype = $(prototype);
            $form = $('<div id="contenuReception_' + index + '" class="row"><div class="col-sm-12"><div id="reception_' + index + '_libelle" class="col-sm-10">' + libelle + '</div><div class="col-sm-1"><button class="btn btn-default" onclick="afficherModaleReception(\'edit\',' + index + ');" type="button"><span class="glyphicon glyphicon-edit"></span> </button></div><div class="col-sm-1"><button class="btn btn-default" onclick="supprimerReception(' + index + ');" type="button"><span class="glyphicon glyphicon-trash"></span></button></div><div id="formReception_' + index + '" style="display: none;" ></div></div>');
            $form.find('#formReception_' + index).append($prototype);
            $receptions.append($form);
            chargerReceptionDansForm($prototype, reception, index);
            $receptions.attr('data-nb-receptions', parseInt(index) + 1);
        }
        //        charge la reception dans le
        function chargerReceptionDansForm($form, reception, index) {
            $form.find('#fournisseur_receptions_' + index + '_jour').val(reception.jour);
//            charge la tranche 1
            $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_hour option[value="' + reception.tranche1.debut.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_debut_minute option[value="' + reception.tranche1.debut.minute + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_hour option[value="' + reception.tranche1.fin.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche1_fin_minute option[value="' + reception.tranche1.fin.minute + '"]').prop('selected', true);
//            charge la tranche 2
            $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_hour option[value="' + reception.tranche2.debut.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_debut_minute option[value="' + reception.tranche2.debut.minute + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_hour option[value="' + reception.tranche2.fin.heure + '"]').prop('selected', true);
            $form.find('#fournisseur_receptions_' + index + '_tranche2_fin_minute option[value="' + reception.tranche2.fin.minute + '"]').prop('selected', true);
        }
        //        Fin des fonctions liées à la réception

        function supprimerRemiseClef(index) {
            $('#contenuRemiseClef_' + index).remove();
        }
        function modifierRemiseClef() {
            var index = $('#modifierRemiseClef').attr('data-index');
            var $formRemiseClef = $('#formRemiseClef_' + index);
            var $remiseClefModal = $('#remiseClefModal');
            $formRemiseClef.html('');
            $formRemiseClef.append($remiseClefModal.find('#contenuAjoutRemiseClef div:first'));
            $('#remiseClef_' + index + '_libelle').html($('#fournisseur_remiseClefs_' + index + '_libelle').val());
            $remiseClefModal.modal('hide');
        }
        function cloneFormulaire($form) {
            var prefixe = '_deepcloned';
//            copy jquery de l'element
            $dest = $form.clone();
//            duplique les select
            $selects = $form.find('select');
            $selects.each(function () {
                $dest.find('#' + $(this).attr('id')).val($(this).val());
            });
//            duplique les textareas
            $textareas = $form.find('textarea');
            $textareas.each(function () {
                $dest.find('#' + $(this).attr('id')).val($(this).val());
            });
//            gestion des onglets pour ne pas avoir de rédondance d'id et assurer le bon fonctionnement des onglets
            $tabs = $dest.find('.tab-pane');
            $tabs.each(function () {
                $dest.find('li [href="#' + $(this).attr('id') + '"]').attr('href', '#' + $(this).attr('id') + prefixe);
                $(this).attr('id', $(this).attr('id') + prefixe);
            });
//            fin gestion des onglets
            return $dest;
        }
        function afficherModaleModifierRemiseClef(index) {
            var $remiseClefModal = $('#remiseClefModal');
            $form = $('#formRemiseClef_' + index + ' div:first');
            $copy = cloneFormulaire($form);
            $('#modal-remise-clef-error').html('');
            $remiseClefModal.find('#contenuAjoutRemiseClef').html('');
            $('#contenuAjoutRemiseClef').append($copy);
            $('#ajouterRemiseClef').css('display', 'none');
            $('#modifierRemiseClef').attr('data-index', index).css('display', '');
            $remiseClefModal.find('.modal-title').html('{{ 'remise.clef.modifier' | trans }}');
            $remiseClefModal.modal('show');

        }
        function afficherModaleAjouterRemiseClef() {
//            var i = 0;
            var active = '';
            var traduction = '';
            var $remiseClefs = $('#remiseClefs');
            var $remiseClefModal = $('#remiseClefModal');
            var index = $remiseClefs.attr('data-nb-remise-clef');
            var prototype = $remiseClefs.attr('data-prototype');
            var prototypeTraduction = $remiseClefs.attr('data-prototype-traduction');
            $('#modal-remise-clef-error').html('');
//            gestion des langues et création du formulaire à partir du prototype
            prototype = prototype.replace(/__name__/g, index);

//            mise en forme de la traduction
            for (i = 0; i < _langues.length; i++) {
                if (i == 0) {
                    active = 'active';
                } else {
                    active = '';
                }
                traduction += prototypeTraduction.replace(/__idRemiseClef__/g, 'fournisseur_remiseClefs_' + index).replace(/__indexLangue__/g, i).replace(/__name__/g, index).replace(/__tradname__/g, i).replace(/__active__/g, active);
            }
            $remiseClefModal.find('#contenuAjoutRemiseClef').html(prototype);
            {#$('#fournisseur_remiseClefs_' + index + '_fournisseur option[value="{{ form.vars.value.id }}"]').attr('selected', 'selected');#}
            $('#fournisseur_remiseClefs_' + index + '_fournisseur option[value="{{ form.vars.value.id }}"]').prop('selected', true);
            $('#fournisseur_remiseClefs_' + index + '_traductions').append(traduction);

//            selection de la langue
            for (i = 0; i < _langues.length; i++) {
                $('#fournisseur_remiseClefs_' + index + '_traductions').find('#fournisseur_remiseClefs_' + index + '_traductions_' + i + '_langue option[value="' + _langues[i].id + '"]').attr('selected', 'selected');
            }
            $('#ajouterRemiseClef').attr('data-index', index).css('display', '');
            $('#modifierRemiseClef').css('display', 'none');
            $remiseClefModal.find('.modal-title').html('{{ 'remise.clef.ajouter' | trans }}');
            $remiseClefModal.modal().show();
        }
        function ajouterRemiseClef() {

            if (remiseClefValidation() == true) {
                var index = $('#ajouterRemiseClef').attr('data-index');
//                var $remiseClef = $('#fournisseur_remiseClefs_' + index);
                var $remiseClef = $('#remiseClefs');
                var $remiseClefModal = $('#remiseClefModal');
                var contenuRemiseClef =
                        '<div class="row" id="contenuRemiseClef_' + index + '"><div class="col-sm-12"><div class="col-sm-10" id="remiseClef_' + index + '_libelle" >' + $('#fournisseur_remiseClefs_' + index + '_libelle').val() + '</div><div class="col-sm-1"><button class="btn btn-default" type="button" onclick="afficherModaleModifierRemiseClef(' + index + ');"><span class="glyphicon glyphicon-edit"></span></button></div><div class="col-sm-1"><button class="btn btn-default" type="button" onclick="supprimerRemiseClef(' + index + ');"><span class="glyphicon glyphicon-trash"></span></button></div><div id="formRemiseClef_' + index + '" style="display:none;"></div></div></div>';
                $remiseClef.append($(contenuRemiseClef));
                $('#formRemiseClef_' + index).append($remiseClefModal.find('#contenuAjoutRemiseClef div:first'));
                $remiseClef.attr('data-nb-remise-clef', (parseInt(index) + 1));
                $remiseClefModal.modal('hide');
            } else {
                $('#modal-remise-clef-error').html('<div class="alert alert-danger">renseigner les champs obligatoires</div>');
            }
        }
        function remiseClefValidation() {
            var valide = true;
            $('#remiseClefModal').find('[required="required"]').each(function () {
                if ($(this).val() == '') {
                    $(this).attr('style', 'border: 1px solid red;');
                    valide = false;
                }
            });
            return valide;
        }
        function refuserToucheEntree(event) {
// Compatibilité IE / Firefox
            if (!event && window.event) {
                event = window.event;
            }
// IE
            if (event.keyCode == 13) {
                event.returnValue = false;
                event.cancelBubble = true;
            }
// DOM
            if (event.which == 13) {
                event.preventDefault();
                event.stopPropagation();
            }
        }

        function afficherModalInterlocuteur(element) {
            var formInterlocuteur = $('#form-interlocuteur');
            var formProtoype = formInterlocuteur.data('prototype');
            var interlocuteurIndex = formInterlocuteur.data('interlocuteur-index');
            var newForm = formProtoype.replace(/__name__/g, interlocuteurIndex);
            formInterlocuteur.html(newForm);

            $(formInterlocuteur).find('input').each(function (index, item) {
                $(item).keypress(function (event) {
                    refuserToucheEntree(event);
                });
            });

            var button = $(element); // Button that triggered the modal

            var service = button.data('service-libelle'); // Extract info from data-* attributes
            var service_id = button.data('service-id'); // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $('#interlocuteurModal');

            $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" class="btn btn-primary">Ajouterun interlocuteur</button>'));
//                $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" data-dismiss="modal" class="btn btn-primary">Ajouterun interlocuteur</button>'));
            modal.find('.modal-title').text('Nouvel intelocuteur pour le service ' + service);
            modal.find('.modal-body [id$="service"]').val(service_id);
            modal.modal().show();
        }

        function ajouterInterlocuteur() {

            if (!testRequired()) {
                return false;
            }

            var interlocuteurModal = $('#interlocuteurModal');
            interlocuteurModal.modal('hide');
            var interlocuteur = {
                prenom: interlocuteurModal.find('.modal-body [id$="prenom"]').val(),
                fonction: interlocuteurModal.find('.modal-body [id$="fonction"]').val(),
                service: interlocuteurModal.find('.modal-body [id$="service"]').val()
            };
            var fonction = '';
            if (interlocuteur.fonction) {
                fonction = interlocuteurModal.find('.modal-body [id$="fonction"] option[value=\'' + interlocuteur.fonction + '\']').text();
            }

            var $formInterlocuteur = $('#form-interlocuteur');
            var $index = $formInterlocuteur.data('interlocuteur-index');

            var buttonModifie = '<button  onclick="afficherModalModificationInterlocuteur(' + $index + ');" type=\'button\' class=\'btn btn-default\'><span class=\'glyphicon glyphicon-edit\' aria-hidden=\'true\'></span></button>';

            var $addInterlocuteur = $('<td>' + interlocuteur.prenom + '</td><td>' + fonction + '</td><td>' + buttonModifie + ' ' + getButtonSupprimer($index) + '</td>');
            var $newLigne = $('<tr id="row_interlocuteur_' + $index + '" class="success"></tr>').append($addInterlocuteur);
            $('#service_' + interlocuteur.service).append($newLigne);

            var $valuesInterlocuteur = $('#values-interlocuteurs');

            $valuesInterlocuteur.append($formInterlocuteur.html());
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + $index + '_interlocuteur_prenom"]').val(interlocuteur.prenom);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + $index + '_interlocuteur_fonction"]').val(interlocuteur.fonction);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + $index + '_interlocuteur_service"]').val(interlocuteur.service);
            $formInterlocuteur.data('interlocuteur-index', $index + 1);
        }

        function afficherModalModificationInterlocuteur(index) {
            var modal = $('#interlocuteurModal');
            var $divFournisseurInterlocuteur = $('#fournisseur_interlocuteurs_' + index + '_interlocuteur');

            var interlocuteur = {
                prenom: $divFournisseurInterlocuteur.find('[id$="prenom"]').val(),
                fonction: $divFournisseurInterlocuteur.find('[id$="fonction"]').val(),
                service: $divFournisseurInterlocuteur.find('[id$="service"]').val()
            };


            var service = '';
            if (interlocuteur.service) {
                service = $divFournisseurInterlocuteur.find('[id$="service"] option[value=\'' + interlocuteur.service + '\']').text();
            }
            modal.find('.modal-title').text('Modifier intelocuteur pour le service ' + service);

            $divFournisseurInterlocuteurClone = $divFournisseurInterlocuteur.clone();

            $formInterlocuteur = $('#form-interlocuteur');
            $formInterlocuteur.html($divFournisseurInterlocuteurClone);

            $formInterlocuteur.find('input, select').each(function (index, item) {
                $(item).attr('style', 'border: 1px solid #cccccc;');
                $(item).keypress(function (event) {
                    refuserToucheEntree(event);
                });
            });

            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_prenom"]').val(interlocuteur.prenom);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_fonction"]').val(interlocuteur.fonction);
            $divFournisseurInterlocuteurClone.find('[id$="interlocuteurs_' + index + '_interlocuteur_service"]').val(interlocuteur.service);

            $('#enregistrer_interlocuteur').replaceWith($('<button id="enregistrer_interlocuteur" type="button" class="btn btn-primary" onclick="modifierInterlocuteur(\'' + index + '\');">Modifer cet interlocuteur</button>'));

            modal.modal('show');
        }

        function modifierInterlocuteur(index) {

            if (!testRequired()) {
                return false;
            }
            var interlocuteurModal = $('#interlocuteurModal');
            interlocuteurModal.modal('hide');


            var interlocuteur = {
                prenom: interlocuteurModal.find('.modal-body [id$="prenom"]').val(),
                fonction: interlocuteurModal.find('.modal-body [id$="fonction"]').val(),
                service: interlocuteurModal.find('.modal-body [id$="service"]').val()
            };
            var fonction = '';
            if (interlocuteur.fonction) {
                fonction = interlocuteurModal.find('.modal-body [id$="fonction"] option[value=\'' + interlocuteur.fonction + '\']').text();
            }

            var buttonModifie = '<button onclick="afficherModalModificationInterlocuteur(' + index + ');" id=\'modifie_interlocuteur_' + index + '\' \' type=\'button\' class=\'btn btn-default\'>Modifier <span class=\'glyphicon glyphicon-edit\' aria-hidden=\'true\'></span></button>';

            var $addInterlocuteur = $('<td>' + interlocuteur.prenom + '</td><td>' + fonction + '</td><td>' + buttonModifie + ' ' + getButtonSupprimer(index) + '</td>');
            var $newLigne = $('<tr id="row_interlocuteur_' + index + '" class="success"></tr>').append($addInterlocuteur);
            $('#row_interlocuteur_' + index).remove();
            $('#service_' + interlocuteur.service).append($newLigne);

            var $valuesInterlocuteur = $('#values-interlocuteurs');

            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_prenom"]').val(interlocuteur.prenom);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_fonction"]').val(interlocuteur.fonction);
            $valuesInterlocuteur.find('[id$="interlocuteurs_' + index + '_interlocuteur_service"]').val(interlocuteur.service);

            $('#enregistrer_interlocuteur').replaceWith($('<button onclick="ajouterInterlocuteur();" id="enregistrer_interlocuteur" type="button" class="btn btn-primary">Ajouterun interlocuteur</button>'));
        }

        function supprimerInterlocuteur(index) {
            $('#row_interlocuteur_' + index).remove();
            $('#fournisseur_interlocuteurs_' + index + '_interlocuteur').remove();
        }

        function getButtonSupprimer(index) {
            {#var buttonSupprimer = '<button onclick="supprimerInterlocuteur(' + index + ');" type=\'button\' class=\'btn btn-default\'> {{ 'supprimer' | trans }} <span class=\'glyphicon glyphicon-trash\' aria-hidden=\'true\'></span></button>';#}
            return '<button onclick="supprimerInterlocuteur(' + index + ');" type=\'button\' class=\'btn btn-default\'><span class=\'glyphicon glyphicon-trash\' aria-hidden=\'true\'></span></button>';
        }


        var $fournisseur_fournisseurParent = $('#fournisseur_fournisseurParent');

        $fournisseur_fournisseurParent.on('change', function (event) {
            var optionVal = $(event.target).find(":selected").val();
            fournisseurParentSelect(optionVal);
        });

        function fournisseurParentSelect(optionVal) {

            var $fournisseur_contient = $('#fournisseur_contient');
            var $interlocuteur_panels = $('#interlocuteur_panels');
            if (optionVal) {
                $interlocuteur_panels.hide();
                $fournisseur_contient.val(1);
                $fournisseur_contient.find('option:not(:selected)').prop('disabled', 'disabled');
                var $values_interlocuteurs = $('#values-interlocuteurs');
                $values_interlocuteurs.children().each(function (index, element) {
                    var index = element.id.split('_')[2];
                    $('#row_interlocuteur_' + index).remove();
                });
                $values_interlocuteurs.html("");
            }
            else {
                $interlocuteur_panels.show();
                $fournisseur_contient.find('option:not(:selected)').prop('disabled', false);
            }
        }

        var optionVal = $fournisseur_fournisseurParent.find(":selected").val();
        fournisseurParentSelect(optionVal);

        function testRequired() {
            fail = false;
            fail_tab = [];
            $('#form-interlocuteur').find('select, textarea, input').each(function () {
                if (!$(this).prop('required')) {

                } else {
                    if (!$(this).val()) {
                        fail = true;
                        fail_tab.push($(this));
                    }
                    else {
                        $(this).attr('style', 'border: 1px solid green;');
                    }
                }
            });

            //submit if fail never got set to true
            if (!fail) {
                //process form here.
                return true;
            } else {
                var first = true;
                fail_tab.forEach(function ($item) {
                    if (first) {
                        $item.focus();
                        first = false;
                    }
                    // do something with `item`
                    $item.attr('style', 'border: 1px solid red;')
                });
                return false;
            }
        }


    </script>
{% endblock %}