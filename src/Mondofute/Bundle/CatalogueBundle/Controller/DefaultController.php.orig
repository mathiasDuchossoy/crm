<?php

namespace Mondofute\Bundle\CatalogueBundle\Controller;

use Doctrine\ORM\EntityManager;
use Mondofute\Bundle\LogementBundle\Entity\Logement;
use Mondofute\Bundle\SiteBundle\Entity\Site;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class DefaultController extends Controller
{
    public function indexAction()
    {
        return $this->render('MondofuteCatalogueBundle:Default:index.html.twig');
    }

    public function exception()
    {
        throw new \Exception('oups');
    }

    public function enregistrerStocksLocatifAction(Request $request)
    {
        if ($request->isXmlHttpRequest()) {
<<<<<<< HEAD
            $retour = array('valid' => true);
            try {
||||||| parent of 0fed15c... gestion des stocks à modifier même lorsque le tableau n'est pas visible (sur le onChange des inputs, on rempli une variable javascript)
            $retour = array('valid'=>true);
            try{
//                $this->exception();
=======
            $retour = array('valid' => true);
            try {
//                $this->exception();
>>>>>>> 0fed15c... gestion des stocks à modifier même lorsque le tableau n'est pas visible (sur le onChange des inputs, on rempli une variable javascript)
                $mbdd = $this->container->get('nucleus_manager_bdd.entity.manager_bdd');
                $em = $this->get('doctrine.orm.entity_manager');
                $stocks = $request->get('stocks');
                $sites = $em->getRepository(Site::class)->findAll();
                foreach ($sites as $site) {
                    $table = 'logement_periode_locatif';
                    $champs = array('logement_id', 'periode_id', 'stock');
                    $duplicate = true;
                    $managers = array($site->getLibelle());
<<<<<<< HEAD
                    $mbdd->initInsertMassif($table, $champs, $duplicate, $managers);
                    foreach ($stocks as $stock) {
                        /** @var EntityManager $emSite */
                        $emSite = $this->get('doctrine.orm.' . $site->getLibelle() . '_entity_manager');
                        $logements = $emSite->getRepository(Logement::class)->findBy(array('logementUnifie' => $stock['logementUnifieId']));
                        foreach ($logements as $logement) {
                            foreach ($stock['periodes'] as $periode) {
                                $mbdd->addInsertLigne(array($logement->getId(), $periode['id'], $periode['stock']));
||||||| parent of 0fed15c... gestion des stocks à modifier même lorsque le tableau n'est pas visible (sur le onChange des inputs, on rempli une variable javascript)
                    $mbdd->initInsertMassif($table,$champs,$duplicate,$managers);
                    foreach ($stocks as $idLogementUnifie => $periodes) {
                        /** @var EntityManager $emSite */
                        $emSite = $this->get('doctrine.orm.' . $site->getLibelle() . '_entity_manager');
                        $logements = $emSite->getRepository(Logement::class)->findBy(array('logementUnifie' => $idLogementUnifie));
                        foreach ($logements as $logement) {
                            foreach ($periodes as $idPeriode => $stock){
                                $mbdd->addInsertLigne(array($logement->getId(),$idPeriode,$stock));
=======
                    $mbdd->initInsertMassif($table, $champs, $duplicate, $managers);
                    foreach ($stocks as $idLogementUnifie => $periodes) {
                        if (!empty($periodes)) {

                            /** @var EntityManager $emSite */
                            $emSite = $this->get('doctrine.orm.' . $site->getLibelle() . '_entity_manager');
                            $logements = $emSite->getRepository(Logement::class)->findBy(array('logementUnifie' => $idLogementUnifie));
                            foreach ($logements as $logement) {
                                foreach ($periodes as $idPeriode => $stock) {
                                    if (!empty($stock)) {
                                        $mbdd->addInsertLigne(array($logement->getId(), $idPeriode, $stock));
                                    }
                                }
>>>>>>> 0fed15c... gestion des stocks à modifier même lorsque le tableau n'est pas visible (sur le onChange des inputs, on rempli une variable javascript)
                            }
                        }
                    }
//                    foreach ($stocks as $idLogementUnifie => $periodes) {
//                        if (!empty($periodes)) {
//
//                            /** @var EntityManager $emSite */
//                            $emSite = $this->get('doctrine.orm.' . $site->getLibelle() . '_entity_manager');
//                            $logements = $emSite->getRepository(Logement::class)->findBy(array('logementUnifie' => $idLogementUnifie));
//                            foreach ($logements as $logement) {
//                                foreach ($periodes as $idPeriode => $stock) {
//                                    if ($stock != "") {
//                                        $mbdd->addInsertLigne(array($logement->getId(), $idPeriode, $stock));
//                                    }
//                                }
//                            }
//                        }
//                    }
                    $mbdd->insertMassif();
                }
            } catch (\Exception $exception) {
                $retour['valid'] = false;
                return new JsonResponse($retour);
            }

            return new JsonResponse($retour);
        } else {
            return new Response();
        }
    }
}
