<<<<<<< 463e236374ba816f4176b42dce5b9a953ab968e5
<<<<<<< 7f56dac2c1490c90b6f83c4e0b88caae928ddf1a
<?php

namespace Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Form;

use Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Entity\Type;
use Mondofute\Bundle\PrestationAnnexeBundle\Entity\PrestationAnnexe;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\FormType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class FournisseurPrestationAnnexeType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('type', ChoiceType::class, array(
                'choices' => array(
                    Type::getLibelle(Type::Individuelle) => Type::Individuelle,
                    Type::getLibelle(Type::Quantite) => Type::Quantite,
                    Type::getLibelle(Type::Forfait) => Type::Forfait,
                ),
                "placeholder" => " --- choisir un type ---",
                'choices_as_values' => true,
                'label' => 'type',
                'translation_domain' => 'messages',
//                'expanded' => true,
                'required' => true,
            ))
            ->add('capacite', FournisseurPrestationAnnexeCapaciteType::class, array('required' => false,))
            ->add('dureeSejour', FournisseurPrestationAnnexeDureeSejourType::class, array('required' => false,))
            ->add('traductions', CollectionType::class, array(
                'entry_type' => FournisseurPrestationAnnexeTraductionType::class,
                'allow_add' => true,
            ))
//            ->add('prestationAnnexe', EntityType::class, array(
//                'class' => PrestationAnnexe::class,
//                'required' => true,
//                "choice_label" => "id",
//            ))
            ->add('prestationAnnexe', EntityType::class, array(
                'class' => PrestationAnnexe::class,
<<<<<<< 2c53324234fdf2b8f932e68514b5a2a7eb850a2c
                'choice_label' => 'id',
                'label_attr' => [
                    'style' => 'display:none',
                ],
                'attr' => [
                    'style' => 'display:none',
                ],
            ))
            ->add('tarifs', CollectionType::class, array(
                'entry_type' => PrestationAnnexeTarifType::class,
                'allow_add' => true,
                'allow_delete' => true,
                'by_reference' => false,
//                'label' => 'prestation.annexe',
                'translation_domain' => 'messages',
//                'prototype_name' => '__tarif_name__',
//                'options'   => array(
//                    'famillePrestationAnnexeId' => $options['famillePrestationAnnexeId']
//                )
            ))
        ;
||||||| merged common ancestors
                'required' => true,
                "choice_label" => "id",
            ))
        ;
=======
                'choice_label' => 'id',
                'label_attr' => [
                    'style' => 'display:none',
                ],
                'attr' => [
                    'style' => 'display:none',
                ],
            ));
>>>>>>> mise en place traductions et persistance sur les site pour fournisseurPrestationAnnexe
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Entity\FournisseurPrestationAnnexe',
            'famillePrestationAnnexeId' => null,
        ));
    }
}
||||||| merged common ancestors
=======
<<<<<<< c2c36c93f2b64a3c47f693fa53c09ae0b5f4be5f
||||||| merged common ancestors
<<<<<<< c2c36c93f2b64a3c47f693fa53c09ae0b5f4be5f
=======
>>>>>>> CRM-118|REBASE 22/34
<?php

namespace Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Form;

use Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Entity\Type;
use Mondofute\Bundle\PrestationAnnexeBundle\Entity\PrestationAnnexe;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\FormType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class FournisseurPrestationAnnexeType extends AbstractType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
<<<<<<< 31d05b532179786187b3fc4ff68a6461cca3c166
            ->add('type', ChoiceType::class, array(
                'choices' => array(
                    Type::getLibelle(Type::Individuelle) => Type::Individuelle,
                    Type::getLibelle(Type::Quantite) => Type::Quantite,
                    Type::getLibelle(Type::Forfait) => Type::Forfait,
                ),
                "placeholder" => " --- choisir un type ---",
                'choices_as_values' => true,
                'label' => 'type',
                'translation_domain' => 'messages',
//                'expanded' => true,
                'required' => true,
            ))
            ->add('capacite', FournisseurPrestationAnnexeCapaciteType::class, array('required' => false,))
            ->add('dureeSejour', FournisseurPrestationAnnexeDureeSejourType::class, array('required' => false,))
            ->add('traductions', CollectionType::class, array(
                'entry_type' => FournisseurPrestationAnnexeTraductionType::class,
                'allow_add' => true,
            ))
//            ->add('prestationAnnexe', EntityType::class, array(
//                'class' => PrestationAnnexe::class,
//                'required' => true,
//                "choice_label" => "id",
//            ))
            ->add('prestationAnnexe', EntityType::class, array(
                'class' => PrestationAnnexe::class,
                'choice_label' => 'id',
                'label_attr' => [
                    'style' => 'display:none',
                ],
                'attr' => [
                    'style' => 'display:none',
                ],
            ))
            ->add('tarifs', CollectionType::class, array(
                'entry_type' => PrestationAnnexeTarifType::class,
                'allow_add' => true,
                'allow_delete' => true,
                'by_reference' => false,
//                'label' => 'prestation.annexe',
                'translation_domain' => 'messages',
//                'prototype_name' => '__tarif_name__',
//                'options'   => array(
//                    'famillePrestationAnnexeId' => $options['famillePrestationAnnexeId']
//                )
            ))
||||||| merged common ancestors
            ->add('libelle')
            ->add('type')
            ->add('capacite')
            ->add('dureeSejour')
            ->add('fournisseur')
=======
            ->add('type', ChoiceType::class, array(
                'choices' => array(
                    Type::getLibelle(Type::Individuelle) => Type::Individuelle,
                    Type::getLibelle(Type::Quantite) => Type::Quantite,
                    Type::getLibelle(Type::Forfait) => Type::Forfait,
                ),
                "placeholder" => " --- choisir un type ---",
                'choices_as_values' => true,
                'label' => 'type',
                'translation_domain' => 'messages',
//                'expanded' => true,
                'required' => true,
            ))
            ->add('capacite', FournisseurPrestationAnnexeCapaciteType::class, array('required' => false,))
            ->add('dureeSejour', FournisseurPrestationAnnexeDureeSejourType::class, array('required' => false,))
            ->add('traductions', CollectionType::class, array(
                'entry_type' => FournisseurPrestationAnnexeTraductionType::class,
            ))
            ->add('prestationAnnexe', EntityType::class, array(
                'class' => PrestationAnnexe::class,
                'required' => true,
                "choice_label" => "id",
            ))
>>>>>>> avancement sur l'edition d'un fournisseur
        ;
    }

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'Mondofute\Bundle\FournisseurPrestationAnnexeBundle\Entity\FournisseurPrestationAnnexe',
            'famillePrestationAnnexeId' => null,
        ));
    }
}
<<<<<<< 463e236374ba816f4176b42dce5b9a953ab968e5
>>>>>>> creation des form et ajout traductions pour fournisseurPrestationAnnexe
>>>>>>> CRM-118|REBASE 20/34
||||||| merged common ancestors
>>>>>>> creation des form et ajout traductions pour fournisseurPrestationAnnexe
=======
>>>>>>> CRM-118|REBASE 22/34
