<?php

namespace Mondofute\Bundle\DecoteBundle\Repository;

/**
 * DecoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DecoteRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param integer $typeId
     * @return array
     */
    public function findByTypeFournisseur($typeId)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q->select('decote')
            ->from('MondofuteDecoteBundle:Decote', 'decote')
            ->join('decote.typeFournisseurs', 'type')
            ->where('type = :type')
            ->setParameter('type', $typeId);

        $result = $q->getQuery()->getResult();
        return $result;
    }

    /**
     * @param integer $fournisseurId
     * @return array
     */
    public function findByFournisseur($fournisseurId)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q->select('decote')
            ->from('MondofuteDecoteBundle:Decote', 'decote')
            ->join('decote.decoteFournisseurs', 'decoteFournisseurs')
            ->join('decoteFournisseurs.fournisseur', 'fournisseur')
            ->where('fournisseur.id = :fournisseurId')
            ->setParameter('fournisseurId', $fournisseurId);

        $result = $q->getQuery()->getResult();
        return $result;
    }

    public function findByFournisseurAndAffectation($fournisseurId, $type)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q->select('decote')
            ->from('MondofuteDecoteBundle:Decote', 'decote')
            ->join('decote.decoteFournisseurs', 'decoteFournisseurs')
            ->join('decoteFournisseurs.fournisseur', 'fournisseur')
            ->join('decote.decoteTypeAffectations', 'decoteTypeAffectations')
            ->where('fournisseur.id = :fournisseurId')
            ->setParameter('fournisseurId', $fournisseurId)
            ->andWhere('decoteTypeAffectations.typeAffectation = :type')
            ->setParameter('type', $type);

        $result = $q->getQuery()->getResult();
        return $result;
    }

    public function findByFournisseurAndAffectationAndFamille($fournisseurId, $typeAffectation, $typeId)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q->select('decote')
            ->from('MondofuteDecoteBundle:Decote', 'decote')
            ->join('decote.decoteFamillePrestationAnnexes', 'decoteFamillePrestationAnnexes')
            ->join('decoteFamillePrestationAnnexes.fournisseur', 'fournisseur')
            ->join('decoteFamillePrestationAnnexes.famillePrestationAnnexe', 'famillePrestationAnnexe')
            ->join('decote.decoteTypeAffectations', 'decoteTypeAffectations')
            ->where('fournisseur.id = :fournisseurId')
            ->setParameter('fournisseurId', $fournisseurId)
            ->andWhere('famillePrestationAnnexe.id = :typeId')
            ->setParameter('typeId', $typeId)
            ->andWhere('decoteTypeAffectations.typeAffectation = :type')
            ->setParameter('type', $typeAffectation);

        $result = $q->getQuery()->getResult();
        return $result;
    }

    public function findByDecoteStations($stationId, $fournsseurId)
    {
        $q = $this->getEntityManager()->createQueryBuilder();
        $q->select('decote')
            ->from('MondofuteDecoteBundle:Decote', 'decote')
            ->join('decote.decoteStations', 'decoteStations')
            ->join('decoteStations.fournisseur', 'fournisseur')
            ->join('decoteStations.station', 'station')
            ->where('fournisseur.id = :fournisseurId')
            ->setParameter('fournisseurId', $fournsseurId)
            ->andWhere('station.id = :stationId')
            ->setParameter('stationId', $stationId);

        $result = $q->getQuery()->getResult();
        return $result;
    }
}
